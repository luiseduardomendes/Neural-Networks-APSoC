// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module StreamReader(
  input          clock,
                 reset,
                 auto_core_out_a_ready,
                 auto_core_out_d_valid,
  input  [2:0]   auto_core_out_d_bits_opcode,
  input  [3:0]   auto_core_out_d_bits_size,
                 auto_core_out_d_bits_source,
  input  [127:0] auto_core_out_d_bits_data,
  input          io_req_valid,
  input  [39:0]  io_req_bits_vaddr,
  input  [13:0]  io_req_bits_spaddr,
  input          io_req_bits_is_acc,
                 io_req_bits_accumulate,
                 io_req_bits_has_acc_bitwidth,
  input  [31:0]  io_req_bits_scale,
  input          io_req_bits_status_debug,
                 io_req_bits_status_cease,
                 io_req_bits_status_wfi,
  input  [31:0]  io_req_bits_status_isa,
  input  [1:0]   io_req_bits_status_dprv,
  input          io_req_bits_status_dv,
  input  [1:0]   io_req_bits_status_prv,
  input          io_req_bits_status_v,
                 io_req_bits_status_sd,
  input  [22:0]  io_req_bits_status_zero2,
  input          io_req_bits_status_mpv,
                 io_req_bits_status_gva,
                 io_req_bits_status_mbe,
                 io_req_bits_status_sbe,
  input  [1:0]   io_req_bits_status_sxl,
                 io_req_bits_status_uxl,
  input          io_req_bits_status_sd_rv32,
  input  [7:0]   io_req_bits_status_zero1,
  input          io_req_bits_status_tsr,
                 io_req_bits_status_tw,
                 io_req_bits_status_tvm,
                 io_req_bits_status_mxr,
                 io_req_bits_status_sum,
                 io_req_bits_status_mprv,
  input  [1:0]   io_req_bits_status_xs,
                 io_req_bits_status_fs,
                 io_req_bits_status_mpp,
                 io_req_bits_status_vs,
  input          io_req_bits_status_spp,
                 io_req_bits_status_mpie,
                 io_req_bits_status_ube,
                 io_req_bits_status_spie,
                 io_req_bits_status_upie,
                 io_req_bits_status_mie,
                 io_req_bits_status_hie,
                 io_req_bits_status_sie,
                 io_req_bits_status_uie,
  input  [15:0]  io_req_bits_len,
                 io_req_bits_repeats,
  input  [7:0]   io_req_bits_pixel_repeats,
  input  [15:0]  io_req_bits_block_stride,
  input  [7:0]   io_req_bits_cmd_id,
  input          io_resp_ready,
                 io_tlb_resp_miss,
  input  [31:0]  io_tlb_resp_paddr,
  input          io_counter_external_reset,
  output         auto_core_out_a_valid,
  output [2:0]   auto_core_out_a_bits_opcode,
                 auto_core_out_a_bits_param,
  output [3:0]   auto_core_out_a_bits_size,
                 auto_core_out_a_bits_source,
  output [31:0]  auto_core_out_a_bits_address,
  output [15:0]  auto_core_out_a_bits_mask,
  output [127:0] auto_core_out_a_bits_data,
  output         auto_core_out_a_bits_corrupt,
                 auto_core_out_d_ready,
                 io_req_ready,
                 io_resp_valid,
  output [511:0] io_resp_bits_data,
  output [13:0]  io_resp_bits_addr,
  output         io_resp_bits_mask_0,
                 io_resp_bits_mask_1,
                 io_resp_bits_mask_2,
                 io_resp_bits_mask_3,
                 io_resp_bits_mask_4,
                 io_resp_bits_mask_5,
                 io_resp_bits_mask_6,
                 io_resp_bits_mask_7,
                 io_resp_bits_mask_8,
                 io_resp_bits_mask_9,
                 io_resp_bits_mask_10,
                 io_resp_bits_mask_11,
                 io_resp_bits_mask_12,
                 io_resp_bits_mask_13,
                 io_resp_bits_mask_14,
                 io_resp_bits_mask_15,
                 io_resp_bits_mask_16,
                 io_resp_bits_mask_17,
                 io_resp_bits_mask_18,
                 io_resp_bits_mask_19,
                 io_resp_bits_mask_20,
                 io_resp_bits_mask_21,
                 io_resp_bits_mask_22,
                 io_resp_bits_mask_23,
                 io_resp_bits_mask_24,
                 io_resp_bits_mask_25,
                 io_resp_bits_mask_26,
                 io_resp_bits_mask_27,
                 io_resp_bits_mask_28,
                 io_resp_bits_mask_29,
                 io_resp_bits_mask_30,
                 io_resp_bits_mask_31,
                 io_resp_bits_mask_32,
                 io_resp_bits_mask_33,
                 io_resp_bits_mask_34,
                 io_resp_bits_mask_35,
                 io_resp_bits_mask_36,
                 io_resp_bits_mask_37,
                 io_resp_bits_mask_38,
                 io_resp_bits_mask_39,
                 io_resp_bits_mask_40,
                 io_resp_bits_mask_41,
                 io_resp_bits_mask_42,
                 io_resp_bits_mask_43,
                 io_resp_bits_mask_44,
                 io_resp_bits_mask_45,
                 io_resp_bits_mask_46,
                 io_resp_bits_mask_47,
                 io_resp_bits_mask_48,
                 io_resp_bits_mask_49,
                 io_resp_bits_mask_50,
                 io_resp_bits_mask_51,
                 io_resp_bits_mask_52,
                 io_resp_bits_mask_53,
                 io_resp_bits_mask_54,
                 io_resp_bits_mask_55,
                 io_resp_bits_mask_56,
                 io_resp_bits_mask_57,
                 io_resp_bits_mask_58,
                 io_resp_bits_mask_59,
                 io_resp_bits_mask_60,
                 io_resp_bits_mask_61,
                 io_resp_bits_mask_62,
                 io_resp_bits_mask_63,
                 io_resp_bits_is_acc,
                 io_resp_bits_accumulate,
                 io_resp_bits_has_acc_bitwidth,
  output [31:0]  io_resp_bits_scale,
  output [15:0]  io_resp_bits_repeats,
                 io_resp_bits_pixel_repeats,
                 io_resp_bits_len,
  output         io_resp_bits_last,
  output [7:0]   io_resp_bits_bytes_read,
                 io_resp_bits_cmd_id,
  output         io_tlb_req_valid,
  output [39:0]  io_tlb_req_bits_tlb_req_vaddr,
  output         io_tlb_req_bits_status_debug,
                 io_tlb_req_bits_status_mxr,
                 io_tlb_req_bits_status_sum,
                 io_busy,
                 io_counter_event_signal_18,
                 io_counter_event_signal_19,
                 io_counter_event_signal_20,
  output [31:0]  io_counter_external_values_4,
                 io_counter_external_values_6
);

  wire         _beatPacker_io_req_ready;	// @[DMA.scala:77:28]
  wire         _beatPacker_io_in_ready;	// @[DMA.scala:77:28]
  wire         _xactTracker_io_alloc_ready;	// @[DMA.scala:75:29]
  wire [3:0]   _xactTracker_io_alloc_xactid;	// @[DMA.scala:75:29]
  wire [5:0]   _xactTracker_io_peek_entry_shift;	// @[DMA.scala:75:29]
  wire [13:0]  _xactTracker_io_peek_entry_addr;	// @[DMA.scala:75:29]
  wire         _xactTracker_io_peek_entry_is_acc;	// @[DMA.scala:75:29]
  wire         _xactTracker_io_peek_entry_accumulate;	// @[DMA.scala:75:29]
  wire         _xactTracker_io_peek_entry_has_acc_bitwidth;	// @[DMA.scala:75:29]
  wire [31:0]  _xactTracker_io_peek_entry_scale;	// @[DMA.scala:75:29]
  wire [15:0]  _xactTracker_io_peek_entry_repeats;	// @[DMA.scala:75:29]
  wire [7:0]   _xactTracker_io_peek_entry_pixel_repeats;	// @[DMA.scala:75:29]
  wire [15:0]  _xactTracker_io_peek_entry_len;	// @[DMA.scala:75:29]
  wire [15:0]  _xactTracker_io_peek_entry_block_stride;	// @[DMA.scala:75:29]
  wire [8:0]   _xactTracker_io_peek_entry_spad_row_offset;	// @[DMA.scala:75:29]
  wire [6:0]   _xactTracker_io_peek_entry_bytes_to_read;	// @[DMA.scala:75:29]
  wire         _xactTracker_io_peek_entry_cmd_id;	// @[DMA.scala:75:29]
  wire         _core_io_reserve_valid;	// @[DMA.scala:57:24]
  wire [5:0]   _core_io_reserve_entry_shift;	// @[DMA.scala:57:24]
  wire [13:0]  _core_io_reserve_entry_addr;	// @[DMA.scala:57:24]
  wire         _core_io_reserve_entry_is_acc;	// @[DMA.scala:57:24]
  wire         _core_io_reserve_entry_accumulate;	// @[DMA.scala:57:24]
  wire         _core_io_reserve_entry_has_acc_bitwidth;	// @[DMA.scala:57:24]
  wire [31:0]  _core_io_reserve_entry_scale;	// @[DMA.scala:57:24]
  wire [15:0]  _core_io_reserve_entry_repeats;	// @[DMA.scala:57:24]
  wire [7:0]   _core_io_reserve_entry_pixel_repeats;	// @[DMA.scala:57:24]
  wire [15:0]  _core_io_reserve_entry_len;	// @[DMA.scala:57:24]
  wire [15:0]  _core_io_reserve_entry_block_stride;	// @[DMA.scala:57:24]
  wire [8:0]   _core_io_reserve_entry_spad_row_offset;	// @[DMA.scala:57:24]
  wire [6:0]   _core_io_reserve_entry_bytes_to_read;	// @[DMA.scala:57:24]
  wire         _core_io_reserve_entry_cmd_id;	// @[DMA.scala:57:24]
  wire         _core_io_beatData_valid;	// @[DMA.scala:57:24]
  wire [3:0]   _core_io_beatData_bits_xactid;	// @[DMA.scala:57:24]
  wire [127:0] _core_io_beatData_bits_data;	// @[DMA.scala:57:24]
  wire [2:0]   _core_io_beatData_bits_lg_len_req;	// @[DMA.scala:57:24]
  wire         _core_io_beatData_bits_last;	// @[DMA.scala:57:24]
  wire         _io_resp_bits_bytes_read_T = _beatPacker_io_req_ready & _core_io_beatData_valid;	// @[DMA.scala:57:24, :77:28, Decoupled.scala:51:35]
  reg  [3:0]   xactTracker_io_peek_xactid_buf;	// @[Reg.scala:19:16]
  reg  [31:0]  io_resp_bits_scale_r;	// @[Reg.scala:19:16]
  reg  [15:0]  io_resp_bits_repeats_r;	// @[Reg.scala:19:16]
  reg  [7:0]   io_resp_bits_pixel_repeats_r;	// @[Reg.scala:19:16]
  reg  [15:0]  io_resp_bits_len_r;	// @[Reg.scala:19:16]
  reg          io_resp_bits_cmd_id_r;	// @[Reg.scala:19:16]
  reg  [6:0]   io_resp_bits_bytes_read_r;	// @[Reg.scala:19:16]
  always @(posedge clock) begin
    if (_io_resp_bits_bytes_read_T) begin	// @[Decoupled.scala:51:35]
      xactTracker_io_peek_xactid_buf <= _core_io_beatData_bits_xactid;	// @[DMA.scala:57:24, Reg.scala:19:16]
      io_resp_bits_scale_r <= _xactTracker_io_peek_entry_scale;	// @[DMA.scala:75:29, Reg.scala:19:16]
      io_resp_bits_repeats_r <= _xactTracker_io_peek_entry_repeats;	// @[DMA.scala:75:29, Reg.scala:19:16]
      io_resp_bits_pixel_repeats_r <= _xactTracker_io_peek_entry_pixel_repeats;	// @[DMA.scala:75:29, Reg.scala:19:16]
      io_resp_bits_len_r <= _xactTracker_io_peek_entry_len;	// @[DMA.scala:75:29, Reg.scala:19:16]
      io_resp_bits_cmd_id_r <= _xactTracker_io_peek_entry_cmd_id;	// @[DMA.scala:75:29, Reg.scala:19:16]
      io_resp_bits_bytes_read_r <= _xactTracker_io_peek_entry_bytes_to_read;	// @[DMA.scala:75:29, Reg.scala:19:16]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        xactTracker_io_peek_xactid_buf = _RANDOM_0[3:0];	// @[Reg.scala:19:16]
        io_resp_bits_scale_r = {_RANDOM_0[31:4], _RANDOM_1[3:0]};	// @[Reg.scala:19:16]
        io_resp_bits_repeats_r = _RANDOM_1[19:4];	// @[Reg.scala:19:16]
        io_resp_bits_pixel_repeats_r = _RANDOM_1[27:20];	// @[Reg.scala:19:16]
        io_resp_bits_len_r = {_RANDOM_1[31:28], _RANDOM_2[11:0]};	// @[Reg.scala:19:16]
        io_resp_bits_cmd_id_r = _RANDOM_2[12];	// @[Reg.scala:19:16]
        io_resp_bits_bytes_read_r = _RANDOM_2[19:13];	// @[Reg.scala:19:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  StreamReaderCore core (	// @[DMA.scala:57:24]
    .clock                             (clock),
    .reset                             (reset),
    .auto_out_a_ready                  (auto_core_out_a_ready),
    .auto_out_d_valid                  (auto_core_out_d_valid),
    .auto_out_d_bits_opcode            (auto_core_out_d_bits_opcode),
    .auto_out_d_bits_size              (auto_core_out_d_bits_size),
    .auto_out_d_bits_source            (auto_core_out_d_bits_source),
    .auto_out_d_bits_data              (auto_core_out_d_bits_data),
    .io_req_valid                      (io_req_valid),
    .io_req_bits_vaddr                 (io_req_bits_vaddr),
    .io_req_bits_spaddr                (io_req_bits_spaddr),
    .io_req_bits_is_acc                (io_req_bits_is_acc),
    .io_req_bits_accumulate            (io_req_bits_accumulate),
    .io_req_bits_has_acc_bitwidth      (io_req_bits_has_acc_bitwidth),
    .io_req_bits_scale                 (io_req_bits_scale),
    .io_req_bits_status_debug          (io_req_bits_status_debug),
    .io_req_bits_status_cease          (io_req_bits_status_cease),
    .io_req_bits_status_wfi            (io_req_bits_status_wfi),
    .io_req_bits_status_isa            (io_req_bits_status_isa),
    .io_req_bits_status_dprv           (io_req_bits_status_dprv),
    .io_req_bits_status_dv             (io_req_bits_status_dv),
    .io_req_bits_status_prv            (io_req_bits_status_prv),
    .io_req_bits_status_v              (io_req_bits_status_v),
    .io_req_bits_status_sd             (io_req_bits_status_sd),
    .io_req_bits_status_zero2          (io_req_bits_status_zero2),
    .io_req_bits_status_mpv            (io_req_bits_status_mpv),
    .io_req_bits_status_gva            (io_req_bits_status_gva),
    .io_req_bits_status_mbe            (io_req_bits_status_mbe),
    .io_req_bits_status_sbe            (io_req_bits_status_sbe),
    .io_req_bits_status_sxl            (io_req_bits_status_sxl),
    .io_req_bits_status_uxl            (io_req_bits_status_uxl),
    .io_req_bits_status_sd_rv32        (io_req_bits_status_sd_rv32),
    .io_req_bits_status_zero1          (io_req_bits_status_zero1),
    .io_req_bits_status_tsr            (io_req_bits_status_tsr),
    .io_req_bits_status_tw             (io_req_bits_status_tw),
    .io_req_bits_status_tvm            (io_req_bits_status_tvm),
    .io_req_bits_status_mxr            (io_req_bits_status_mxr),
    .io_req_bits_status_sum            (io_req_bits_status_sum),
    .io_req_bits_status_mprv           (io_req_bits_status_mprv),
    .io_req_bits_status_xs             (io_req_bits_status_xs),
    .io_req_bits_status_fs             (io_req_bits_status_fs),
    .io_req_bits_status_mpp            (io_req_bits_status_mpp),
    .io_req_bits_status_vs             (io_req_bits_status_vs),
    .io_req_bits_status_spp            (io_req_bits_status_spp),
    .io_req_bits_status_mpie           (io_req_bits_status_mpie),
    .io_req_bits_status_ube            (io_req_bits_status_ube),
    .io_req_bits_status_spie           (io_req_bits_status_spie),
    .io_req_bits_status_upie           (io_req_bits_status_upie),
    .io_req_bits_status_mie            (io_req_bits_status_mie),
    .io_req_bits_status_hie            (io_req_bits_status_hie),
    .io_req_bits_status_sie            (io_req_bits_status_sie),
    .io_req_bits_status_uie            (io_req_bits_status_uie),
    .io_req_bits_len                   (io_req_bits_len),
    .io_req_bits_repeats               (io_req_bits_repeats),
    .io_req_bits_pixel_repeats         (io_req_bits_pixel_repeats),
    .io_req_bits_block_stride          (io_req_bits_block_stride),
    .io_req_bits_cmd_id                (io_req_bits_cmd_id),
    .io_reserve_ready                  (_xactTracker_io_alloc_ready),	// @[DMA.scala:75:29]
    .io_reserve_xactid                 (_xactTracker_io_alloc_xactid),	// @[DMA.scala:75:29]
    .io_beatData_ready                 (_beatPacker_io_in_ready),	// @[DMA.scala:77:28]
    .io_tlb_resp_miss                  (io_tlb_resp_miss),
    .io_tlb_resp_paddr                 (io_tlb_resp_paddr),
    .io_counter_external_reset         (io_counter_external_reset),
    .auto_out_a_valid                  (auto_core_out_a_valid),
    .auto_out_a_bits_opcode            (auto_core_out_a_bits_opcode),
    .auto_out_a_bits_param             (auto_core_out_a_bits_param),
    .auto_out_a_bits_size              (auto_core_out_a_bits_size),
    .auto_out_a_bits_source            (auto_core_out_a_bits_source),
    .auto_out_a_bits_address           (auto_core_out_a_bits_address),
    .auto_out_a_bits_mask              (auto_core_out_a_bits_mask),
    .auto_out_a_bits_data              (auto_core_out_a_bits_data),
    .auto_out_a_bits_corrupt           (auto_core_out_a_bits_corrupt),
    .auto_out_d_ready                  (auto_core_out_d_ready),
    .io_req_ready                      (io_req_ready),
    .io_reserve_valid                  (_core_io_reserve_valid),
    .io_reserve_entry_shift            (_core_io_reserve_entry_shift),
    .io_reserve_entry_addr             (_core_io_reserve_entry_addr),
    .io_reserve_entry_is_acc           (_core_io_reserve_entry_is_acc),
    .io_reserve_entry_accumulate       (_core_io_reserve_entry_accumulate),
    .io_reserve_entry_has_acc_bitwidth (_core_io_reserve_entry_has_acc_bitwidth),
    .io_reserve_entry_scale            (_core_io_reserve_entry_scale),
    .io_reserve_entry_repeats          (_core_io_reserve_entry_repeats),
    .io_reserve_entry_pixel_repeats    (_core_io_reserve_entry_pixel_repeats),
    .io_reserve_entry_len              (_core_io_reserve_entry_len),
    .io_reserve_entry_block_stride     (_core_io_reserve_entry_block_stride),
    .io_reserve_entry_spad_row_offset  (_core_io_reserve_entry_spad_row_offset),
    .io_reserve_entry_bytes_to_read    (_core_io_reserve_entry_bytes_to_read),
    .io_reserve_entry_cmd_id           (_core_io_reserve_entry_cmd_id),
    .io_beatData_valid                 (_core_io_beatData_valid),
    .io_beatData_bits_xactid           (_core_io_beatData_bits_xactid),
    .io_beatData_bits_data             (_core_io_beatData_bits_data),
    .io_beatData_bits_lg_len_req       (_core_io_beatData_bits_lg_len_req),
    .io_beatData_bits_last             (_core_io_beatData_bits_last),
    .io_tlb_req_valid                  (io_tlb_req_valid),
    .io_tlb_req_bits_tlb_req_vaddr     (io_tlb_req_bits_tlb_req_vaddr),
    .io_tlb_req_bits_status_debug      (io_tlb_req_bits_status_debug),
    .io_tlb_req_bits_status_mxr        (io_tlb_req_bits_status_mxr),
    .io_tlb_req_bits_status_sum        (io_tlb_req_bits_status_sum),
    .io_counter_event_signal_18        (io_counter_event_signal_18),
    .io_counter_event_signal_19        (io_counter_event_signal_19),
    .io_counter_event_signal_20        (io_counter_event_signal_20),
    .io_counter_external_values_4      (io_counter_external_values_4)
  );
  XactTracker xactTracker (	// @[DMA.scala:75:29]
    .clock                           (clock),
    .reset                           (reset),
    .io_alloc_valid                  (_core_io_reserve_valid),	// @[DMA.scala:57:24]
    .io_alloc_entry_shift            (_core_io_reserve_entry_shift),	// @[DMA.scala:57:24]
    .io_alloc_entry_addr             (_core_io_reserve_entry_addr),	// @[DMA.scala:57:24]
    .io_alloc_entry_is_acc           (_core_io_reserve_entry_is_acc),	// @[DMA.scala:57:24]
    .io_alloc_entry_accumulate       (_core_io_reserve_entry_accumulate),	// @[DMA.scala:57:24]
    .io_alloc_entry_has_acc_bitwidth (_core_io_reserve_entry_has_acc_bitwidth),	// @[DMA.scala:57:24]
    .io_alloc_entry_scale            (_core_io_reserve_entry_scale),	// @[DMA.scala:57:24]
    .io_alloc_entry_repeats          (_core_io_reserve_entry_repeats),	// @[DMA.scala:57:24]
    .io_alloc_entry_pixel_repeats    (_core_io_reserve_entry_pixel_repeats),	// @[DMA.scala:57:24]
    .io_alloc_entry_len              (_core_io_reserve_entry_len),	// @[DMA.scala:57:24]
    .io_alloc_entry_block_stride     (_core_io_reserve_entry_block_stride),	// @[DMA.scala:57:24]
    .io_alloc_entry_spad_row_offset  (_core_io_reserve_entry_spad_row_offset),	// @[DMA.scala:57:24]
    .io_alloc_entry_bytes_to_read    (_core_io_reserve_entry_bytes_to_read),	// @[DMA.scala:57:24]
    .io_alloc_entry_cmd_id           (_core_io_reserve_entry_cmd_id),	// @[DMA.scala:57:24]
    .io_peek_xactid                  (_io_resp_bits_bytes_read_T ? _core_io_beatData_bits_xactid : xactTracker_io_peek_xactid_buf),	// @[DMA.scala:57:24, Decoupled.scala:51:35, Reg.scala:19:16, Util.scala:91:8]
    .io_peek_pop                     (_beatPacker_io_in_ready & _core_io_beatData_valid & _core_io_beatData_bits_last),	// @[DMA.scala:57:24, :77:28, :86:54]
    .io_counter_external_reset       (io_counter_external_reset),
    .io_alloc_ready                  (_xactTracker_io_alloc_ready),
    .io_alloc_xactid                 (_xactTracker_io_alloc_xactid),
    .io_peek_entry_shift             (_xactTracker_io_peek_entry_shift),
    .io_peek_entry_addr              (_xactTracker_io_peek_entry_addr),
    .io_peek_entry_is_acc            (_xactTracker_io_peek_entry_is_acc),
    .io_peek_entry_accumulate        (_xactTracker_io_peek_entry_accumulate),
    .io_peek_entry_has_acc_bitwidth  (_xactTracker_io_peek_entry_has_acc_bitwidth),
    .io_peek_entry_scale             (_xactTracker_io_peek_entry_scale),
    .io_peek_entry_repeats           (_xactTracker_io_peek_entry_repeats),
    .io_peek_entry_pixel_repeats     (_xactTracker_io_peek_entry_pixel_repeats),
    .io_peek_entry_len               (_xactTracker_io_peek_entry_len),
    .io_peek_entry_block_stride      (_xactTracker_io_peek_entry_block_stride),
    .io_peek_entry_spad_row_offset   (_xactTracker_io_peek_entry_spad_row_offset),
    .io_peek_entry_bytes_to_read     (_xactTracker_io_peek_entry_bytes_to_read),
    .io_peek_entry_cmd_id            (_xactTracker_io_peek_entry_cmd_id),
    .io_busy                         (io_busy),
    .io_counter_external_values_6    (io_counter_external_values_6)
  );
  BeatMerger beatPacker (	// @[DMA.scala:77:28]
    .clock                        (clock),
    .reset                        (reset),
    .io_req_valid                 (_core_io_beatData_valid),	// @[DMA.scala:57:24]
    .io_req_bits_shift            (_xactTracker_io_peek_entry_shift),	// @[DMA.scala:75:29]
    .io_req_bits_addr             (_xactTracker_io_peek_entry_addr),	// @[DMA.scala:75:29]
    .io_req_bits_is_acc           (_xactTracker_io_peek_entry_is_acc),	// @[DMA.scala:75:29]
    .io_req_bits_accumulate       (_xactTracker_io_peek_entry_accumulate),	// @[DMA.scala:75:29]
    .io_req_bits_has_acc_bitwidth (_xactTracker_io_peek_entry_has_acc_bitwidth),	// @[DMA.scala:75:29]
    .io_req_bits_block_stride     (_xactTracker_io_peek_entry_block_stride),	// @[DMA.scala:75:29]
    .io_req_bits_spad_row_offset  (_xactTracker_io_peek_entry_spad_row_offset),	// @[DMA.scala:75:29]
    .io_req_bits_lg_len_req       (_core_io_beatData_bits_lg_len_req),	// @[DMA.scala:57:24]
    .io_req_bits_bytes_to_read    (_xactTracker_io_peek_entry_bytes_to_read),	// @[DMA.scala:75:29]
    .io_in_valid                  (_core_io_beatData_valid),	// @[DMA.scala:57:24]
    .io_in_bits                   (_core_io_beatData_bits_data),	// @[DMA.scala:57:24]
    .io_out_ready                 (io_resp_ready),
    .io_req_ready                 (_beatPacker_io_req_ready),
    .io_in_ready                  (_beatPacker_io_in_ready),
    .io_out_valid                 (io_resp_valid),
    .io_out_bits_data             (io_resp_bits_data),
    .io_out_bits_addr             (io_resp_bits_addr),
    .io_out_bits_is_acc           (io_resp_bits_is_acc),
    .io_out_bits_accumulate       (io_resp_bits_accumulate),
    .io_out_bits_has_acc_bitwidth (io_resp_bits_has_acc_bitwidth),
    .io_out_bits_mask_0           (io_resp_bits_mask_0),
    .io_out_bits_mask_1           (io_resp_bits_mask_1),
    .io_out_bits_mask_2           (io_resp_bits_mask_2),
    .io_out_bits_mask_3           (io_resp_bits_mask_3),
    .io_out_bits_mask_4           (io_resp_bits_mask_4),
    .io_out_bits_mask_5           (io_resp_bits_mask_5),
    .io_out_bits_mask_6           (io_resp_bits_mask_6),
    .io_out_bits_mask_7           (io_resp_bits_mask_7),
    .io_out_bits_mask_8           (io_resp_bits_mask_8),
    .io_out_bits_mask_9           (io_resp_bits_mask_9),
    .io_out_bits_mask_10          (io_resp_bits_mask_10),
    .io_out_bits_mask_11          (io_resp_bits_mask_11),
    .io_out_bits_mask_12          (io_resp_bits_mask_12),
    .io_out_bits_mask_13          (io_resp_bits_mask_13),
    .io_out_bits_mask_14          (io_resp_bits_mask_14),
    .io_out_bits_mask_15          (io_resp_bits_mask_15),
    .io_out_bits_mask_16          (io_resp_bits_mask_16),
    .io_out_bits_mask_17          (io_resp_bits_mask_17),
    .io_out_bits_mask_18          (io_resp_bits_mask_18),
    .io_out_bits_mask_19          (io_resp_bits_mask_19),
    .io_out_bits_mask_20          (io_resp_bits_mask_20),
    .io_out_bits_mask_21          (io_resp_bits_mask_21),
    .io_out_bits_mask_22          (io_resp_bits_mask_22),
    .io_out_bits_mask_23          (io_resp_bits_mask_23),
    .io_out_bits_mask_24          (io_resp_bits_mask_24),
    .io_out_bits_mask_25          (io_resp_bits_mask_25),
    .io_out_bits_mask_26          (io_resp_bits_mask_26),
    .io_out_bits_mask_27          (io_resp_bits_mask_27),
    .io_out_bits_mask_28          (io_resp_bits_mask_28),
    .io_out_bits_mask_29          (io_resp_bits_mask_29),
    .io_out_bits_mask_30          (io_resp_bits_mask_30),
    .io_out_bits_mask_31          (io_resp_bits_mask_31),
    .io_out_bits_mask_32          (io_resp_bits_mask_32),
    .io_out_bits_mask_33          (io_resp_bits_mask_33),
    .io_out_bits_mask_34          (io_resp_bits_mask_34),
    .io_out_bits_mask_35          (io_resp_bits_mask_35),
    .io_out_bits_mask_36          (io_resp_bits_mask_36),
    .io_out_bits_mask_37          (io_resp_bits_mask_37),
    .io_out_bits_mask_38          (io_resp_bits_mask_38),
    .io_out_bits_mask_39          (io_resp_bits_mask_39),
    .io_out_bits_mask_40          (io_resp_bits_mask_40),
    .io_out_bits_mask_41          (io_resp_bits_mask_41),
    .io_out_bits_mask_42          (io_resp_bits_mask_42),
    .io_out_bits_mask_43          (io_resp_bits_mask_43),
    .io_out_bits_mask_44          (io_resp_bits_mask_44),
    .io_out_bits_mask_45          (io_resp_bits_mask_45),
    .io_out_bits_mask_46          (io_resp_bits_mask_46),
    .io_out_bits_mask_47          (io_resp_bits_mask_47),
    .io_out_bits_mask_48          (io_resp_bits_mask_48),
    .io_out_bits_mask_49          (io_resp_bits_mask_49),
    .io_out_bits_mask_50          (io_resp_bits_mask_50),
    .io_out_bits_mask_51          (io_resp_bits_mask_51),
    .io_out_bits_mask_52          (io_resp_bits_mask_52),
    .io_out_bits_mask_53          (io_resp_bits_mask_53),
    .io_out_bits_mask_54          (io_resp_bits_mask_54),
    .io_out_bits_mask_55          (io_resp_bits_mask_55),
    .io_out_bits_mask_56          (io_resp_bits_mask_56),
    .io_out_bits_mask_57          (io_resp_bits_mask_57),
    .io_out_bits_mask_58          (io_resp_bits_mask_58),
    .io_out_bits_mask_59          (io_resp_bits_mask_59),
    .io_out_bits_mask_60          (io_resp_bits_mask_60),
    .io_out_bits_mask_61          (io_resp_bits_mask_61),
    .io_out_bits_mask_62          (io_resp_bits_mask_62),
    .io_out_bits_mask_63          (io_resp_bits_mask_63),
    .io_out_bits_last             (io_resp_bits_last)
  );
  assign io_resp_bits_scale = io_resp_bits_scale_r;	// @[Reg.scala:19:16]
  assign io_resp_bits_repeats = io_resp_bits_repeats_r;	// @[Reg.scala:19:16]
  assign io_resp_bits_pixel_repeats = {8'h0, io_resp_bits_pixel_repeats_r};	// @[DMA.scala:105:32, Reg.scala:19:16]
  assign io_resp_bits_len = io_resp_bits_len_r;	// @[Reg.scala:19:16]
  assign io_resp_bits_bytes_read = {1'h0, io_resp_bits_bytes_read_r};	// @[DMA.scala:108:29, Reg.scala:19:16]
  assign io_resp_bits_cmd_id = {7'h0, io_resp_bits_cmd_id_r};	// @[DMA.scala:107:25, Reg.scala:19:16]
endmodule

