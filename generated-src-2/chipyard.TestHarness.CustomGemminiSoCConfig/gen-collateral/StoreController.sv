// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module StoreController(
  input         clock,
                reset,
                io_cmd_valid,
  input  [6:0]  io_cmd_bits_cmd_inst_funct,
  input  [4:0]  io_cmd_bits_cmd_inst_rs2,
                io_cmd_bits_cmd_inst_rs1,
  input         io_cmd_bits_cmd_inst_xd,
                io_cmd_bits_cmd_inst_xs1,
                io_cmd_bits_cmd_inst_xs2,
  input  [4:0]  io_cmd_bits_cmd_inst_rd,
  input  [6:0]  io_cmd_bits_cmd_inst_opcode,
  input  [63:0] io_cmd_bits_cmd_rs1,
                io_cmd_bits_cmd_rs2,
  input         io_cmd_bits_cmd_status_debug,
                io_cmd_bits_cmd_status_cease,
                io_cmd_bits_cmd_status_wfi,
  input  [31:0] io_cmd_bits_cmd_status_isa,
  input  [1:0]  io_cmd_bits_cmd_status_dprv,
  input         io_cmd_bits_cmd_status_dv,
  input  [1:0]  io_cmd_bits_cmd_status_prv,
  input         io_cmd_bits_cmd_status_v,
                io_cmd_bits_cmd_status_sd,
  input  [22:0] io_cmd_bits_cmd_status_zero2,
  input         io_cmd_bits_cmd_status_mpv,
                io_cmd_bits_cmd_status_gva,
                io_cmd_bits_cmd_status_mbe,
                io_cmd_bits_cmd_status_sbe,
  input  [1:0]  io_cmd_bits_cmd_status_sxl,
                io_cmd_bits_cmd_status_uxl,
  input         io_cmd_bits_cmd_status_sd_rv32,
  input  [7:0]  io_cmd_bits_cmd_status_zero1,
  input         io_cmd_bits_cmd_status_tsr,
                io_cmd_bits_cmd_status_tw,
                io_cmd_bits_cmd_status_tvm,
                io_cmd_bits_cmd_status_mxr,
                io_cmd_bits_cmd_status_sum,
                io_cmd_bits_cmd_status_mprv,
  input  [1:0]  io_cmd_bits_cmd_status_xs,
                io_cmd_bits_cmd_status_fs,
                io_cmd_bits_cmd_status_mpp,
                io_cmd_bits_cmd_status_vs,
  input         io_cmd_bits_cmd_status_spp,
                io_cmd_bits_cmd_status_mpie,
                io_cmd_bits_cmd_status_ube,
                io_cmd_bits_cmd_status_spie,
                io_cmd_bits_cmd_status_upie,
                io_cmd_bits_cmd_status_mie,
                io_cmd_bits_cmd_status_hie,
                io_cmd_bits_cmd_status_sie,
                io_cmd_bits_cmd_status_uie,
  input  [5:0]  io_cmd_bits_rob_id_bits,
  input         io_cmd_bits_from_matmul_fsm,
                io_cmd_bits_from_conv_fsm,
                io_dma_req_ready,
                io_dma_resp_valid,
  input  [7:0]  io_dma_resp_bits_cmd_id,
  input         io_completed_ready,
  output        io_cmd_ready,
                io_dma_req_valid,
  output [39:0] io_dma_req_bits_vaddr,
  output        io_dma_req_bits_laddr_is_acc_addr,
                io_dma_req_bits_laddr_accumulate,
                io_dma_req_bits_laddr_read_full_acc_row,
  output [10:0] io_dma_req_bits_laddr_garbage,
  output        io_dma_req_bits_laddr_garbage_bit,
  output [13:0] io_dma_req_bits_laddr_data,
  output [2:0]  io_dma_req_bits_acc_act,
  output [31:0] io_dma_req_bits_acc_scale,
  output [15:0] io_dma_req_bits_len,
  output [7:0]  io_dma_req_bits_block,
                io_dma_req_bits_cmd_id,
  output        io_dma_req_bits_status_debug,
                io_dma_req_bits_status_cease,
                io_dma_req_bits_status_wfi,
  output [31:0] io_dma_req_bits_status_isa,
  output [1:0]  io_dma_req_bits_status_dprv,
  output        io_dma_req_bits_status_dv,
  output [1:0]  io_dma_req_bits_status_prv,
  output        io_dma_req_bits_status_v,
                io_dma_req_bits_status_sd,
  output [22:0] io_dma_req_bits_status_zero2,
  output        io_dma_req_bits_status_mpv,
                io_dma_req_bits_status_gva,
                io_dma_req_bits_status_mbe,
                io_dma_req_bits_status_sbe,
  output [1:0]  io_dma_req_bits_status_sxl,
                io_dma_req_bits_status_uxl,
  output        io_dma_req_bits_status_sd_rv32,
  output [7:0]  io_dma_req_bits_status_zero1,
  output        io_dma_req_bits_status_tsr,
                io_dma_req_bits_status_tw,
                io_dma_req_bits_status_tvm,
                io_dma_req_bits_status_mxr,
                io_dma_req_bits_status_sum,
                io_dma_req_bits_status_mprv,
  output [1:0]  io_dma_req_bits_status_xs,
                io_dma_req_bits_status_fs,
                io_dma_req_bits_status_mpp,
                io_dma_req_bits_status_vs,
  output        io_dma_req_bits_status_spp,
                io_dma_req_bits_status_mpie,
                io_dma_req_bits_status_ube,
                io_dma_req_bits_status_spie,
                io_dma_req_bits_status_upie,
                io_dma_req_bits_status_mie,
                io_dma_req_bits_status_hie,
                io_dma_req_bits_status_sie,
                io_dma_req_bits_status_uie,
                io_dma_req_bits_pool_en,
                io_dma_req_bits_store_en,
                io_completed_valid,
  output [5:0]  io_completed_bits,
  output        io_busy,
                io_counter_event_signal_11,
                io_counter_event_signal_12,
                io_counter_event_signal_13,
                io_counter_event_signal_14
);

  wire        _cmd_tracker_io_alloc_ready;	// @[StoreController.scala:152:27]
  wire        _cmd_tracker_io_alloc_bits_cmd_id;	// @[StoreController.scala:152:27]
  wire        _cmd_tracker_io_busy;	// @[StoreController.scala:152:27]
  wire        _cmd_io_deq_valid;	// @[Decoupled.scala:375:21]
  wire [6:0]  _cmd_io_deq_bits_cmd_inst_funct;	// @[Decoupled.scala:375:21]
  wire [4:0]  _cmd_io_deq_bits_cmd_inst_rs2;	// @[Decoupled.scala:375:21]
  wire [4:0]  _cmd_io_deq_bits_cmd_inst_rs1;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_cmd_inst_xd;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_cmd_inst_xs1;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_cmd_inst_xs2;	// @[Decoupled.scala:375:21]
  wire [4:0]  _cmd_io_deq_bits_cmd_inst_rd;	// @[Decoupled.scala:375:21]
  wire [6:0]  _cmd_io_deq_bits_cmd_inst_opcode;	// @[Decoupled.scala:375:21]
  wire [63:0] _cmd_io_deq_bits_cmd_rs1;	// @[Decoupled.scala:375:21]
  wire [63:0] _cmd_io_deq_bits_cmd_rs2;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_rob_id_valid;	// @[Decoupled.scala:375:21]
  wire [5:0]  _cmd_io_deq_bits_rob_id_bits;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_from_matmul_fsm;	// @[Decoupled.scala:375:21]
  wire        _cmd_io_deq_bits_from_conv_fsm;	// @[Decoupled.scala:375:21]
  reg  [1:0]  control_state;	// @[StoreController.scala:37:30]
  reg  [39:0] stride;	// @[StoreController.scala:39:19]
  reg  [2:0]  activation;	// @[StoreController.scala:45:23]
  reg  [31:0] acc_scale_bits;	// @[StoreController.scala:51:22]
  reg  [11:0] row_counter;	// @[StoreController.scala:54:28]
  reg  [7:0]  block_counter;	// @[StoreController.scala:55:30]
  reg  [1:0]  pool_stride;	// @[StoreController.scala:58:24]
  reg  [1:0]  pool_size;	// @[StoreController.scala:59:22]
  reg  [7:0]  pool_out_dim;	// @[StoreController.scala:60:25]
  reg  [7:0]  pool_porows;	// @[StoreController.scala:61:24]
  reg  [7:0]  pool_pocols;	// @[StoreController.scala:62:24]
  reg  [7:0]  pool_orows;	// @[StoreController.scala:63:23]
  reg  [7:0]  pool_ocols;	// @[StoreController.scala:64:23]
  reg  [1:0]  pool_upad;	// @[StoreController.scala:65:22]
  reg  [1:0]  pool_lpad;	// @[StoreController.scala:66:22]
  reg  [7:0]  porow_counter;	// @[StoreController.scala:68:30]
  reg  [7:0]  pocol_counter;	// @[StoreController.scala:69:30]
  reg  [1:0]  wrow_counter;	// @[StoreController.scala:70:29]
  reg  [1:0]  wcol_counter;	// @[StoreController.scala:71:29]
  wire        mvout_1d_enabled = (|pool_size) & ~(|pool_stride);	// @[StoreController.scala:58:24, :59:22, :73:58, :74:{36,44,47}]
  wire [9:0]  _GEN = {8'h0, pool_stride};	// @[StoreController.scala:55:30, :58:24, :76:28]
  wire [10:0] _GEN_0 = {1'h0, {2'h0, porow_counter} * _GEN};	// @[StoreController.scala:37:30, :68:30, :70:29, :76:{28,42}]
  wire [10:0] _GEN_1 = {9'h0, wrow_counter};	// @[StoreController.scala:70:29, :76:42]
  wire [10:0] _GEN_2 = {9'h0, pool_upad};	// @[StoreController.scala:65:22, :76:{42,58}]
  wire [10:0] orow = _GEN_0 + _GEN_1 - _GEN_2;	// @[StoreController.scala:76:{42,58}]
  wire [10:0] _GEN_3 = {1'h0, {2'h0, pocol_counter} * _GEN};	// @[StoreController.scala:37:30, :69:30, :70:29, :76:28, :79:{28,42}]
  wire [10:0] _GEN_4 = {9'h0, wcol_counter};	// @[StoreController.scala:71:29, :76:42, :79:42]
  wire [10:0] _GEN_5 = {9'h0, pool_lpad};	// @[StoreController.scala:66:22, :76:42, :79:58]
  wire [10:0] ocol = _GEN_3 + _GEN_4 - _GEN_5;	// @[StoreController.scala:79:{42,58}]
  wire [14:0] _GEN_6 = {13'h0, pool_size};	// @[StoreController.scala:59:22, :82:{51,63}]
  wire [6:0]  _blocks_T_1 = _cmd_io_deq_bits_cmd_rs2[38:32] % 7'h10;	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :91:{22,63}]
  wire [6:0]  blocks = _cmd_io_deq_bits_cmd_rs2[38:32] / 7'h10 + {6'h0, |(_blocks_T_1[4:0])};	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :91:{22,55,63,78}]
  wire        _T_8 = _GEN_0 + _GEN_1 < _GEN_2 | _GEN_3 + _GEN_4 < _GEN_5 | orow >= {3'h0, pool_orows} | ocol >= {3'h0, pool_ocols};	// @[StoreController.scala:63:23, :64:23, :76:{42,58}, :77:{54,70}, :79:{42,58}, :80:{54,70}, :127:{54,68,76}]
  wire        DoConfig = _cmd_io_deq_bits_cmd_inst_funct == 7'h0 & _cmd_io_deq_bits_cmd_rs1[1:0] == 2'h2;	// @[Decoupled.scala:375:21, StoreController.scala:91:55, :93:51, :133:{42,57,76}]
  wire [15:0] mvout_1d_rows = {8'h0, pool_orows} * {8'h0, pool_ocols};	// @[StoreController.scala:55:30, :63:23, :64:23, :139:34]
  wire        _T_53 = control_state == 2'h1;	// @[StoreController.scala:37:30, :156:19, :266:31]
  wire        _T_50 = control_state == 2'h2;	// @[StoreController.scala:37:30, :133:76, :157:20]
  wire        _io_dma_req_valid_output = ~(|control_state) & _cmd_io_deq_valid & ~DoConfig & _cmd_tracker_io_alloc_ready | _T_53 | _T_50 & ((|block_counter) | (|row_counter)) | (&control_state) & ((|wcol_counter) | (|wrow_counter) | (|pocol_counter) | (|porow_counter));	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :54:28, :55:30, :68:30, :69:30, :70:29, :71:29, :133:57, :135:17, :152:27, :155:{38,86}, :156:19, :157:{20,37,55,63,78,88}, :158:{20,32,49,73,98,106,123}]
  wire        _T_17 = (|pool_stride) | mvout_1d_enabled;	// @[StoreController.scala:58:24, :73:58, :74:44, :160:51]
  wire        _GEN_7 = (|pool_stride) & _T_8;	// @[StoreController.scala:58:24, :73:58, :127:68, :161:31]
  wire        _io_dma_req_bits_laddr_read_full_acc_row_output = _GEN_7 | _cmd_io_deq_bits_cmd_rs2[29];	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :161:31]
  wire [6:0]  _io_dma_req_bits_len_T_1 = blocks - 7'h1;	// @[StoreController.scala:91:55, :162:66]
  wire [7:0]  _GEN_8 = {1'h0, _io_dma_req_bits_len_T_1};	// @[StoreController.scala:37:30, :162:66, :173:44]
  wire [6:0]  _io_dma_req_bits_len_T_5 = (_cmd_io_deq_bits_cmd_rs2[38:32] - 7'h1) % 7'h10;	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :91:22, :173:{69,76}]
  wire [1:0]  _io_dma_req_bits_store_en_T_1 = pool_size - 2'h1;	// @[StoreController.scala:59:22, :177:82]
  wire        _cmd_tracker_io_alloc_valid_T_2 = ~(|control_state) & _cmd_io_deq_valid & ~DoConfig;	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :133:57, :135:17, :155:38, :181:84]
  wire        _T_36 = _cmd_tracker_io_alloc_valid_T_2 & _cmd_tracker_io_alloc_ready;	// @[DMACommandTracker.scala:27:40, StoreController.scala:152:27, :181:84]
  reg         cmd_id_buf;	// @[Reg.scala:19:16]
  wire        _last_row_T_30 = io_dma_req_ready & _io_dma_req_valid_output;	// @[Decoupled.scala:51:35, StoreController.scala:157:88]
  wire        _GEN_9 = _last_row_T_30 & ~(|pool_stride);	// @[Decoupled.scala:51:35, StoreController.scala:58:24, :73:58, :74:47, :200:32]
  wire [7:0]  pocol_counter_max = pool_ocols - 8'h1;	// @[StoreController.scala:64:23, Util.scala:18:28]
  wire        _pocol_counter_T_9 = pocol_counter_max == 8'h0;	// @[StoreController.scala:55:30, Util.scala:18:28, :19:28]
  wire [7:0]  porow_counter_max = pool_orows - 8'h1;	// @[StoreController.scala:63:23, Util.scala:18:28]
  wire        _porow_counter_T_12 = porow_counter_max == 8'h0;	// @[StoreController.scala:55:30, Util.scala:18:28, :19:28]
  wire        _block_counter_T_9 = _io_dma_req_bits_len_T_1 == 7'h0;	// @[StoreController.scala:91:55, :162:66, Util.scala:19:28]
  wire [15:0] row_counter_max = mvout_1d_rows - 16'h1;	// @[StoreController.scala:139:34, Util.scala:18:28]
  wire        _row_counter_T_9 = row_counter_max == 16'h0;	// @[Mux.scala:101:16, Util.scala:18:28, :19:28]
  wire [15:0] _GEN_10 = {4'h0, row_counter};	// @[StoreController.scala:54:28, :182:74, Util.scala:30:10]
  wire [4:0]  row_counter_max_1 = _cmd_io_deq_bits_cmd_rs2[52:48] - 5'h1;	// @[Decoupled.scala:375:21, StoreController.scala:87:44, Util.scala:18:28]
  wire        _row_counter_T_38 = row_counter_max_1 == 5'h0;	// @[StoreController.scala:91:78, Util.scala:18:28, :19:28]
  wire        _wcol_counter_T_9 = _io_dma_req_bits_store_en_T_1 == 2'h0;	// @[StoreController.scala:70:29, :177:82, Util.scala:19:28]
  wire        _wrow_counter_T_12 = _io_dma_req_bits_store_en_T_1 == 2'h0;	// @[StoreController.scala:70:29, :177:82, Util.scala:19:28]
  wire [7:0]  pocol_counter_max_1 = pool_pocols - 8'h1;	// @[StoreController.scala:62:24, Util.scala:18:28]
  wire        _pocol_counter_T_42 = pocol_counter_max_1 == 8'h0;	// @[StoreController.scala:55:30, Util.scala:18:28, :19:28]
  wire [7:0]  porow_counter_max_1 = pool_porows - 8'h1;	// @[StoreController.scala:61:24, Util.scala:18:28]
  wire        _porow_counter_T_49 = porow_counter_max_1 == 8'h0;	// @[StoreController.scala:55:30, Util.scala:18:28, :19:28]
  wire        _T_40 = control_state == 2'h1;	// @[StoreController.scala:37:30, :222:26, :266:31]
  wire        _T_44 = control_state == 2'h2;	// @[StoreController.scala:37:30, :133:76, :222:26]
  wire        _T_46 = block_counter == _GEN_8 & _last_row_T_30 & (mvout_1d_enabled ? _GEN_10 == mvout_1d_rows - 16'h1 : row_counter == {7'h0, _cmd_io_deq_bits_cmd_rs2[52:48] - 5'h1}) | block_counter == 8'h0 & row_counter == 12'h0;	// @[Decoupled.scala:51:35, :375:21, StoreController.scala:54:28, :55:30, :74:44, :87:44, :91:55, :139:34, :173:44, :278:38, :279:{25,56,74,93,102}, :282:{44,52,67}, :284:{25,38}, Util.scala:30:10]
  wire        last_row_1 = porow_counter == 8'h0 & pocol_counter == 8'h0 & wrow_counter == 2'h0 & wcol_counter == 2'h0 | porow_counter == pool_porows - 8'h1 & pocol_counter == pool_pocols - 8'h1 & wrow_counter == _io_dma_req_bits_store_en_T_1 & wcol_counter == _io_dma_req_bits_store_en_T_1 & _last_row_T_30;	// @[Decoupled.scala:51:35, StoreController.scala:55:30, :61:24, :62:24, :68:30, :69:30, :70:29, :71:29, :177:82, :292:{37,62,86,94,110,119}, :293:{24,40,63,79}, :294:{24,60,80}]
  wire [11:0] _row_counter_T_7 = row_counter + 12'h1;	// @[StoreController.scala:54:28, Util.scala:27:15]
  wire [11:0] _GEN_11 = {7'h0, row_counter_max_1};	// @[StoreController.scala:91:55, Util.scala:18:28, :30:10]
  always @(posedge clock) begin
    if (reset) begin
      control_state <= 2'h0;	// @[StoreController.scala:37:30, :70:29]
      row_counter <= 12'h0;	// @[StoreController.scala:54:28]
      block_counter <= 8'h0;	// @[StoreController.scala:55:30]
      porow_counter <= 8'h0;	// @[StoreController.scala:55:30, :68:30]
      pocol_counter <= 8'h0;	// @[StoreController.scala:55:30, :69:30]
      wrow_counter <= 2'h0;	// @[StoreController.scala:70:29]
      wcol_counter <= 2'h0;	// @[StoreController.scala:70:29, :71:29]
    end
    else begin
      if (|control_state) begin	// @[StoreController.scala:37:30, :155:38]
        if (_T_40) begin	// @[StoreController.scala:222:26]
          if (_last_row_T_30)	// @[Decoupled.scala:51:35]
            control_state <= {1'h1, |pool_stride};	// @[StoreController.scala:37:30, :58:24, :73:58, :273:29]
        end
        else if (_T_44 ? _T_46 : (&control_state) & last_row_1)	// @[StoreController.scala:37:30, :222:26, :284:{38,59}, :285:23, :292:119, :296:23, :297:23]
          control_state <= 2'h0;	// @[StoreController.scala:37:30, :70:29]
      end
      else if (~_cmd_io_deq_valid | DoConfig | ~(~DoConfig & _T_36)) begin	// @[DMACommandTracker.scala:27:40, Decoupled.scala:375:21, StoreController.scala:37:30, :133:57, :135:17, :224:24, :225:24, :250:64, :264:27]
      end
      else if (_last_row_T_30)	// @[Decoupled.scala:51:35]
        control_state <= {1'h1, |pool_stride};	// @[StoreController.scala:37:30, :58:24, :73:58, :265:31]
      else	// @[Decoupled.scala:51:35]
        control_state <= 2'h1;	// @[StoreController.scala:37:30, :266:31]
      if (_GEN_9) begin	// @[StoreController.scala:200:32]
        row_counter <= mvout_1d_enabled ? (_row_counter_T_9 ? 12'h0 : _GEN_10 >= row_counter_max ? 12'h1 - (row_counter_max[11:0] - row_counter) - 12'h1 : _row_counter_T_7) : block_counter != _GEN_8 ? row_counter : _row_counter_T_38 ? 12'h0 : row_counter >= _GEN_11 ? 12'h1 - (_GEN_11 - row_counter) - 12'h1 : _row_counter_T_7;	// @[Mux.scala:101:16, StoreController.scala:54:28, :55:30, :74:44, :173:44, :209:{25,140}, Util.scala:18:28, :19:28, :27:15, :30:{10,47,54,59}]
        if (_block_counter_T_9)	// @[Util.scala:19:28]
          block_counter <= 8'h0;	// @[StoreController.scala:55:30]
        else if (block_counter >= _GEN_8)	// @[StoreController.scala:55:30, :173:44, Util.scala:30:10]
          block_counter <= 8'h1 - (_GEN_8 - block_counter) - 8'h1;	// @[StoreController.scala:55:30, :162:66, :173:44, Util.scala:30:{47,54,59}]
        else	// @[Util.scala:30:10]
          block_counter <= block_counter + 8'h1;	// @[StoreController.scala:55:30, :162:66, Util.scala:27:15]
      end
      if (_last_row_T_30) begin	// @[Decoupled.scala:51:35]
        if (|pool_stride) begin	// @[StoreController.scala:58:24, :73:58]
          if (pocol_counter == pocol_counter_max_1 & wrow_counter == _io_dma_req_bits_store_en_T_1 & wcol_counter == _io_dma_req_bits_store_en_T_1) begin	// @[StoreController.scala:69:30, :70:29, :71:29, :177:82, :214:{83,121,141,157}, Util.scala:18:28]
            if (_porow_counter_T_49)	// @[Util.scala:19:28]
              porow_counter <= 8'h0;	// @[StoreController.scala:55:30, :68:30]
            else if (porow_counter >= porow_counter_max_1)	// @[StoreController.scala:68:30, Util.scala:18:28, :30:10]
              porow_counter <= 8'h1 - (porow_counter_max_1 - porow_counter) - 8'h1;	// @[StoreController.scala:68:30, :162:66, Util.scala:18:28, :30:{47,54,59}]
            else	// @[Util.scala:30:10]
              porow_counter <= porow_counter + 8'h1;	// @[StoreController.scala:68:30, :162:66, Util.scala:27:15]
          end
          if (wrow_counter == _io_dma_req_bits_store_en_T_1 & wcol_counter == _io_dma_req_bits_store_en_T_1) begin	// @[StoreController.scala:70:29, :71:29, :177:82, :213:{82,102,118}]
            if (_pocol_counter_T_42)	// @[Util.scala:19:28]
              pocol_counter <= 8'h0;	// @[StoreController.scala:55:30, :69:30]
            else if (pocol_counter >= pocol_counter_max_1)	// @[StoreController.scala:69:30, Util.scala:18:28, :30:10]
              pocol_counter <= 8'h1 - (pocol_counter_max_1 - pocol_counter) - 8'h1;	// @[StoreController.scala:69:30, :162:66, Util.scala:18:28, :30:{47,54,59}]
            else	// @[Util.scala:30:10]
              pocol_counter <= pocol_counter + 8'h1;	// @[StoreController.scala:69:30, :162:66, Util.scala:27:15]
          end
        end
        else begin	// @[StoreController.scala:73:58]
          if (~mvout_1d_enabled | pocol_counter != pocol_counter_max) begin	// @[StoreController.scala:68:30, :69:30, :74:44, :203:29, :205:{23,84}, Util.scala:18:28]
          end
          else if (_porow_counter_T_12)	// @[Util.scala:19:28]
            porow_counter <= 8'h0;	// @[StoreController.scala:55:30, :68:30]
          else if (porow_counter >= porow_counter_max)	// @[StoreController.scala:68:30, Util.scala:18:28, :30:10]
            porow_counter <= 8'h1 - (porow_counter_max - porow_counter) - 8'h1;	// @[StoreController.scala:68:30, :162:66, Util.scala:18:28, :30:{47,54,59}]
          else	// @[Util.scala:30:10]
            porow_counter <= porow_counter + 8'h1;	// @[StoreController.scala:68:30, :162:66, Util.scala:27:15]
          if (mvout_1d_enabled) begin	// @[StoreController.scala:74:44]
            if (_pocol_counter_T_9)	// @[Util.scala:19:28]
              pocol_counter <= 8'h0;	// @[StoreController.scala:55:30, :69:30]
            else if (pocol_counter >= pocol_counter_max)	// @[StoreController.scala:69:30, Util.scala:18:28, :30:10]
              pocol_counter <= 8'h1 - (pocol_counter_max - pocol_counter) - 8'h1;	// @[StoreController.scala:69:30, :162:66, Util.scala:18:28, :30:{47,54,59}]
            else	// @[Util.scala:30:10]
              pocol_counter <= pocol_counter + 8'h1;	// @[StoreController.scala:69:30, :162:66, Util.scala:27:15]
          end
        end
      end
      if (~_last_row_T_30 | ~(|pool_stride) | wcol_counter != _io_dma_req_bits_store_en_T_1) begin	// @[Decoupled.scala:51:35, StoreController.scala:58:24, :70:29, :71:29, :73:58, :74:47, :177:82, :199:26, :200:32, :212:78]
      end
      else if (_wrow_counter_T_12)	// @[Util.scala:19:28]
        wrow_counter <= 2'h0;	// @[StoreController.scala:70:29]
      else if (wrow_counter >= _io_dma_req_bits_store_en_T_1)	// @[StoreController.scala:70:29, :177:82, Util.scala:30:10]
        wrow_counter <= 2'h1 - (_io_dma_req_bits_store_en_T_1 - wrow_counter) - 2'h1;	// @[StoreController.scala:70:29, :177:82, :266:31, Util.scala:30:{47,54,59}]
      else	// @[Util.scala:30:10]
        wrow_counter <= wrow_counter + 2'h1;	// @[StoreController.scala:70:29, :266:31, Util.scala:27:15]
      if (_last_row_T_30 & (|pool_stride)) begin	// @[Decoupled.scala:51:35, StoreController.scala:58:24, :71:29, :73:58, :199:26, :200:32]
        if (_wcol_counter_T_9)	// @[Util.scala:19:28]
          wcol_counter <= 2'h0;	// @[StoreController.scala:70:29, :71:29]
        else if (wcol_counter >= _io_dma_req_bits_store_en_T_1)	// @[StoreController.scala:71:29, :177:82, Util.scala:30:10]
          wcol_counter <= 2'h1 - (_io_dma_req_bits_store_en_T_1 - wcol_counter) - 2'h1;	// @[StoreController.scala:71:29, :177:82, :266:31, Util.scala:30:{47,54,59}]
        else	// @[Util.scala:30:10]
          wcol_counter <= wcol_counter + 2'h1;	// @[StoreController.scala:71:29, :266:31, Util.scala:27:15]
      end
    end
    if (~(|control_state) & _cmd_io_deq_valid & DoConfig) begin	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :39:19, :133:57, :155:38, :222:26, :224:24, :225:24, :226:18]
      stride <= {8'h0, _cmd_io_deq_bits_cmd_rs2[31:0]};	// @[Decoupled.scala:375:21, StoreController.scala:39:19, :55:30, :94:51, :226:18]
      activation <= {1'h0, _cmd_io_deq_bits_cmd_rs1[3:2]};	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :45:23, :93:51, :228:22]
      pool_stride <= _cmd_io_deq_bits_cmd_rs1[5:4];	// @[Decoupled.scala:375:21, StoreController.scala:58:24, :93:51]
      pool_size <= _cmd_io_deq_bits_cmd_rs1[7:6];	// @[Decoupled.scala:375:21, StoreController.scala:59:22, :93:51]
    end
    if (~(|control_state) & _cmd_io_deq_valid & DoConfig & _cmd_io_deq_bits_cmd_rs2[63:32] != 32'hFFFFFFFF)	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :51:22, :94:51, :133:57, :155:38, :222:26, :224:24, :225:24, :229:{42,48}, :230:23]
      acc_scale_bits <= _cmd_io_deq_bits_cmd_rs2[63:32];	// @[Decoupled.scala:375:21, StoreController.scala:51:22, :94:51]
    if (~(|control_state) & _cmd_io_deq_valid & DoConfig & ((|(_cmd_io_deq_bits_cmd_rs1[5:4])) | (|(_cmd_io_deq_bits_cmd_rs1[7:6])))) begin	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :63:23, :93:51, :133:57, :155:38, :222:26, :224:24, :225:24, :235:{36,45}, :239:24, :243:{39,47}, :244:24]
      pool_out_dim <= _cmd_io_deq_bits_cmd_rs1[31:24];	// @[Decoupled.scala:375:21, StoreController.scala:60:25, :93:51]
      pool_orows <= _cmd_io_deq_bits_cmd_rs1[55:48];	// @[Decoupled.scala:375:21, StoreController.scala:63:23, :93:51]
      pool_ocols <= _cmd_io_deq_bits_cmd_rs1[63:56];	// @[Decoupled.scala:375:21, StoreController.scala:64:23, :93:51]
    end
    if (~(|control_state) & _cmd_io_deq_valid & DoConfig & (|(_cmd_io_deq_bits_cmd_rs1[5:4]))) begin	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :61:24, :93:51, :133:57, :155:38, :222:26, :224:24, :225:24, :235:{36,45}, :237:25]
      pool_porows <= _cmd_io_deq_bits_cmd_rs1[39:32];	// @[Decoupled.scala:375:21, StoreController.scala:61:24, :93:51]
      pool_pocols <= _cmd_io_deq_bits_cmd_rs1[47:40];	// @[Decoupled.scala:375:21, StoreController.scala:62:24, :93:51]
      pool_upad <= _cmd_io_deq_bits_cmd_rs1[9:8];	// @[Decoupled.scala:375:21, StoreController.scala:65:22, :93:51]
      pool_lpad <= _cmd_io_deq_bits_cmd_rs1[11:10];	// @[Decoupled.scala:375:21, StoreController.scala:66:22, :93:51]
    end
    if (_T_36)	// @[DMACommandTracker.scala:27:40]
      cmd_id_buf <= _cmd_tracker_io_alloc_bits_cmd_id;	// @[Reg.scala:19:16, StoreController.scala:152:27]
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire         _GEN_12 = _GEN_9 & mvout_1d_enabled;	// @[StoreController.scala:74:44, :200:32, :203:29]
    wire         _GEN_13 = _last_row_T_30 & (|pool_stride);	// @[Decoupled.scala:51:35, StoreController.scala:58:24, :73:58, :200:32]
    always @(posedge clock) begin	// @[StoreController.scala:119:9]
      if (~reset & _cmd_io_deq_bits_cmd_rs1[1:0] != _cmd_io_deq_bits_cmd_rs1[1:0]) begin	// @[Decoupled.scala:375:21, StoreController.scala:93:51, :109:50, :119:{9,35}]
        if (`ASSERT_VERBOSE_COND_)	// @[StoreController.scala:119:9]
          $error("Assertion failed\n    at StoreController.scala:119 assert(config_norm_rs1.cmd_type === config_mvout_rs1.cmd_type)\n");	// @[StoreController.scala:119:9]
        if (`STOP_COND_)	// @[StoreController.scala:119:9]
          $fatal;	// @[StoreController.scala:119:9]
      end
      if (_GEN_12 & ~reset & ~((|pocol_counter_max) | _pocol_counter_T_9)) begin	// @[StoreController.scala:203:29, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_12 & ~reset & ~((|porow_counter_max) | _porow_counter_T_12)) begin	// @[StoreController.scala:203:29, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_9 & ~reset & ~((|_io_dma_req_bits_len_T_1) | _block_counter_T_9)) begin	// @[StoreController.scala:162:66, :200:32, Util.scala:19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_9 & ~reset & ~((|row_counter_max) | _row_counter_T_9)) begin	// @[StoreController.scala:200:32, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_9 & ~reset & ~((|row_counter_max_1) | _row_counter_T_38)) begin	// @[StoreController.scala:200:32, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_13 & ~reset & ~((|_io_dma_req_bits_store_en_T_1) | _wcol_counter_T_9)) begin	// @[StoreController.scala:177:82, :200:32, Util.scala:19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_13 & ~reset & ~((|_io_dma_req_bits_store_en_T_1) | _wrow_counter_T_12)) begin	// @[StoreController.scala:177:82, :200:32, Util.scala:19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_13 & ~reset & ~((|pocol_counter_max_1) | _pocol_counter_T_42)) begin	// @[StoreController.scala:200:32, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_GEN_13 & ~reset & ~((|porow_counter_max_1) | _porow_counter_T_49)) begin	// @[StoreController.scala:200:32, Util.scala:18:28, :19:{11,14,21,28}]
        if (`ASSERT_VERBOSE_COND_)	// @[Util.scala:19:11]
          $error("Assertion failed: cannot wrapAdd when n is larger than max, unless max is 0\n    at Util.scala:19 assert(n <= max || max === 0.U, \"cannot wrapAdd when n is larger than max, unless max is 0\")\n");	// @[Util.scala:19:11]
        if (`STOP_COND_)	// @[Util.scala:19:11]
          $fatal;	// @[Util.scala:19:11]
      end
      if (_last_row_T_30 & ~reset & _io_dma_req_bits_laddr_read_full_acc_row_output & (|(blocks[6:1]))) begin	// @[Decoupled.scala:51:35, StoreController.scala:91:55, :161:31, :217:{11,64}]
        if (`ASSERT_VERBOSE_COND_)	// @[StoreController.scala:217:11]
          $error("Assertion failed: Block-mvouts are not permitted when moving out full accumulator data\n    at StoreController.scala:217 assert(!(io.dma.req.bits.laddr.read_full_acc_row && blocks > 1.U), \"Block-mvouts are not permitted when moving out full accumulator data\")\n");	// @[StoreController.scala:217:11]
        if (`STOP_COND_)	// @[StoreController.scala:217:11]
          $fatal;	// @[StoreController.scala:217:11]
      end
      if (_last_row_T_30 & ~reset & _T_17 & (|(blocks[6:1]))) begin	// @[Decoupled.scala:51:35, StoreController.scala:91:55, :160:51, :217:64, :218:11]
        if (`ASSERT_VERBOSE_COND_)	// @[StoreController.scala:218:11]
          $error("Assertion failed: Block-mvouts are not permitted when pooling\n    at StoreController.scala:218 assert(!((pooling_is_enabled || mvout_1d_enabled) && blocks > 1.U), \"Block-mvouts are not permitted when pooling\")\n");	// @[StoreController.scala:218:11]
        if (`STOP_COND_)	// @[StoreController.scala:218:11]
          $fatal;	// @[StoreController.scala:218:11]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        control_state = _RANDOM_0[1:0];	// @[StoreController.scala:37:30]
        stride = {_RANDOM_0[31:2], _RANDOM_1[9:0]};	// @[StoreController.scala:37:30, :39:19]
        activation = _RANDOM_1[12:10];	// @[StoreController.scala:39:19, :45:23]
        acc_scale_bits = {_RANDOM_5[31:21], _RANDOM_6[20:0]};	// @[StoreController.scala:51:22]
        row_counter = {_RANDOM_6[31:21], _RANDOM_7[0]};	// @[StoreController.scala:51:22, :54:28]
        block_counter = _RANDOM_7[8:1];	// @[StoreController.scala:54:28, :55:30]
        pool_stride = _RANDOM_7[10:9];	// @[StoreController.scala:54:28, :58:24]
        pool_size = _RANDOM_7[12:11];	// @[StoreController.scala:54:28, :59:22]
        pool_out_dim = _RANDOM_7[20:13];	// @[StoreController.scala:54:28, :60:25]
        pool_porows = _RANDOM_7[28:21];	// @[StoreController.scala:54:28, :61:24]
        pool_pocols = {_RANDOM_7[31:29], _RANDOM_8[4:0]};	// @[StoreController.scala:54:28, :62:24]
        pool_orows = _RANDOM_8[12:5];	// @[StoreController.scala:62:24, :63:23]
        pool_ocols = _RANDOM_8[20:13];	// @[StoreController.scala:62:24, :64:23]
        pool_upad = _RANDOM_8[22:21];	// @[StoreController.scala:62:24, :65:22]
        pool_lpad = _RANDOM_8[24:23];	// @[StoreController.scala:62:24, :66:22]
        porow_counter = {_RANDOM_8[31:25], _RANDOM_9[0]};	// @[StoreController.scala:62:24, :68:30]
        pocol_counter = _RANDOM_9[8:1];	// @[StoreController.scala:68:30, :69:30]
        wrow_counter = _RANDOM_9[10:9];	// @[StoreController.scala:68:30, :70:29]
        wcol_counter = _RANDOM_9[12:11];	// @[StoreController.scala:68:30, :71:29]
        cmd_id_buf = _RANDOM_9[13];	// @[Reg.scala:19:16, StoreController.scala:68:30]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Queue_91 cmd (	// @[Decoupled.scala:375:21]
    .clock                          (clock),
    .reset                          (reset),
    .io_enq_valid                   (io_cmd_valid),
    .io_enq_bits_cmd_inst_funct     (io_cmd_bits_cmd_inst_funct),
    .io_enq_bits_cmd_inst_rs2       (io_cmd_bits_cmd_inst_rs2),
    .io_enq_bits_cmd_inst_rs1       (io_cmd_bits_cmd_inst_rs1),
    .io_enq_bits_cmd_inst_xd        (io_cmd_bits_cmd_inst_xd),
    .io_enq_bits_cmd_inst_xs1       (io_cmd_bits_cmd_inst_xs1),
    .io_enq_bits_cmd_inst_xs2       (io_cmd_bits_cmd_inst_xs2),
    .io_enq_bits_cmd_inst_rd        (io_cmd_bits_cmd_inst_rd),
    .io_enq_bits_cmd_inst_opcode    (io_cmd_bits_cmd_inst_opcode),
    .io_enq_bits_cmd_rs1            (io_cmd_bits_cmd_rs1),
    .io_enq_bits_cmd_rs2            (io_cmd_bits_cmd_rs2),
    .io_enq_bits_cmd_status_debug   (io_cmd_bits_cmd_status_debug),
    .io_enq_bits_cmd_status_cease   (io_cmd_bits_cmd_status_cease),
    .io_enq_bits_cmd_status_wfi     (io_cmd_bits_cmd_status_wfi),
    .io_enq_bits_cmd_status_isa     (io_cmd_bits_cmd_status_isa),
    .io_enq_bits_cmd_status_dprv    (io_cmd_bits_cmd_status_dprv),
    .io_enq_bits_cmd_status_dv      (io_cmd_bits_cmd_status_dv),
    .io_enq_bits_cmd_status_prv     (io_cmd_bits_cmd_status_prv),
    .io_enq_bits_cmd_status_v       (io_cmd_bits_cmd_status_v),
    .io_enq_bits_cmd_status_sd      (io_cmd_bits_cmd_status_sd),
    .io_enq_bits_cmd_status_zero2   (io_cmd_bits_cmd_status_zero2),
    .io_enq_bits_cmd_status_mpv     (io_cmd_bits_cmd_status_mpv),
    .io_enq_bits_cmd_status_gva     (io_cmd_bits_cmd_status_gva),
    .io_enq_bits_cmd_status_mbe     (io_cmd_bits_cmd_status_mbe),
    .io_enq_bits_cmd_status_sbe     (io_cmd_bits_cmd_status_sbe),
    .io_enq_bits_cmd_status_sxl     (io_cmd_bits_cmd_status_sxl),
    .io_enq_bits_cmd_status_uxl     (io_cmd_bits_cmd_status_uxl),
    .io_enq_bits_cmd_status_sd_rv32 (io_cmd_bits_cmd_status_sd_rv32),
    .io_enq_bits_cmd_status_zero1   (io_cmd_bits_cmd_status_zero1),
    .io_enq_bits_cmd_status_tsr     (io_cmd_bits_cmd_status_tsr),
    .io_enq_bits_cmd_status_tw      (io_cmd_bits_cmd_status_tw),
    .io_enq_bits_cmd_status_tvm     (io_cmd_bits_cmd_status_tvm),
    .io_enq_bits_cmd_status_mxr     (io_cmd_bits_cmd_status_mxr),
    .io_enq_bits_cmd_status_sum     (io_cmd_bits_cmd_status_sum),
    .io_enq_bits_cmd_status_mprv    (io_cmd_bits_cmd_status_mprv),
    .io_enq_bits_cmd_status_xs      (io_cmd_bits_cmd_status_xs),
    .io_enq_bits_cmd_status_fs      (io_cmd_bits_cmd_status_fs),
    .io_enq_bits_cmd_status_mpp     (io_cmd_bits_cmd_status_mpp),
    .io_enq_bits_cmd_status_vs      (io_cmd_bits_cmd_status_vs),
    .io_enq_bits_cmd_status_spp     (io_cmd_bits_cmd_status_spp),
    .io_enq_bits_cmd_status_mpie    (io_cmd_bits_cmd_status_mpie),
    .io_enq_bits_cmd_status_ube     (io_cmd_bits_cmd_status_ube),
    .io_enq_bits_cmd_status_spie    (io_cmd_bits_cmd_status_spie),
    .io_enq_bits_cmd_status_upie    (io_cmd_bits_cmd_status_upie),
    .io_enq_bits_cmd_status_mie     (io_cmd_bits_cmd_status_mie),
    .io_enq_bits_cmd_status_hie     (io_cmd_bits_cmd_status_hie),
    .io_enq_bits_cmd_status_sie     (io_cmd_bits_cmd_status_sie),
    .io_enq_bits_cmd_status_uie     (io_cmd_bits_cmd_status_uie),
    .io_enq_bits_rob_id_valid       (1'h1),
    .io_enq_bits_rob_id_bits        (io_cmd_bits_rob_id_bits),
    .io_enq_bits_from_matmul_fsm    (io_cmd_bits_from_matmul_fsm),
    .io_enq_bits_from_conv_fsm      (io_cmd_bits_from_conv_fsm),
    .io_deq_ready                   ((|control_state) ? ~_T_40 & (_T_44 ? _T_46 : (&control_state) & last_row_1) : _cmd_io_deq_valid & DoConfig),	// @[Decoupled.scala:375:21, StoreController.scala:37:30, :133:57, :137:13, :155:38, :222:26, :224:24, :225:24, :284:{38,59}, :292:119, :296:23]
    .io_enq_ready                   (io_cmd_ready),
    .io_deq_valid                   (_cmd_io_deq_valid),
    .io_deq_bits_cmd_inst_funct     (_cmd_io_deq_bits_cmd_inst_funct),
    .io_deq_bits_cmd_inst_rs2       (_cmd_io_deq_bits_cmd_inst_rs2),
    .io_deq_bits_cmd_inst_rs1       (_cmd_io_deq_bits_cmd_inst_rs1),
    .io_deq_bits_cmd_inst_xd        (_cmd_io_deq_bits_cmd_inst_xd),
    .io_deq_bits_cmd_inst_xs1       (_cmd_io_deq_bits_cmd_inst_xs1),
    .io_deq_bits_cmd_inst_xs2       (_cmd_io_deq_bits_cmd_inst_xs2),
    .io_deq_bits_cmd_inst_rd        (_cmd_io_deq_bits_cmd_inst_rd),
    .io_deq_bits_cmd_inst_opcode    (_cmd_io_deq_bits_cmd_inst_opcode),
    .io_deq_bits_cmd_rs1            (_cmd_io_deq_bits_cmd_rs1),
    .io_deq_bits_cmd_rs2            (_cmd_io_deq_bits_cmd_rs2),
    .io_deq_bits_cmd_status_debug   (io_dma_req_bits_status_debug),
    .io_deq_bits_cmd_status_cease   (io_dma_req_bits_status_cease),
    .io_deq_bits_cmd_status_wfi     (io_dma_req_bits_status_wfi),
    .io_deq_bits_cmd_status_isa     (io_dma_req_bits_status_isa),
    .io_deq_bits_cmd_status_dprv    (io_dma_req_bits_status_dprv),
    .io_deq_bits_cmd_status_dv      (io_dma_req_bits_status_dv),
    .io_deq_bits_cmd_status_prv     (io_dma_req_bits_status_prv),
    .io_deq_bits_cmd_status_v       (io_dma_req_bits_status_v),
    .io_deq_bits_cmd_status_sd      (io_dma_req_bits_status_sd),
    .io_deq_bits_cmd_status_zero2   (io_dma_req_bits_status_zero2),
    .io_deq_bits_cmd_status_mpv     (io_dma_req_bits_status_mpv),
    .io_deq_bits_cmd_status_gva     (io_dma_req_bits_status_gva),
    .io_deq_bits_cmd_status_mbe     (io_dma_req_bits_status_mbe),
    .io_deq_bits_cmd_status_sbe     (io_dma_req_bits_status_sbe),
    .io_deq_bits_cmd_status_sxl     (io_dma_req_bits_status_sxl),
    .io_deq_bits_cmd_status_uxl     (io_dma_req_bits_status_uxl),
    .io_deq_bits_cmd_status_sd_rv32 (io_dma_req_bits_status_sd_rv32),
    .io_deq_bits_cmd_status_zero1   (io_dma_req_bits_status_zero1),
    .io_deq_bits_cmd_status_tsr     (io_dma_req_bits_status_tsr),
    .io_deq_bits_cmd_status_tw      (io_dma_req_bits_status_tw),
    .io_deq_bits_cmd_status_tvm     (io_dma_req_bits_status_tvm),
    .io_deq_bits_cmd_status_mxr     (io_dma_req_bits_status_mxr),
    .io_deq_bits_cmd_status_sum     (io_dma_req_bits_status_sum),
    .io_deq_bits_cmd_status_mprv    (io_dma_req_bits_status_mprv),
    .io_deq_bits_cmd_status_xs      (io_dma_req_bits_status_xs),
    .io_deq_bits_cmd_status_fs      (io_dma_req_bits_status_fs),
    .io_deq_bits_cmd_status_mpp     (io_dma_req_bits_status_mpp),
    .io_deq_bits_cmd_status_vs      (io_dma_req_bits_status_vs),
    .io_deq_bits_cmd_status_spp     (io_dma_req_bits_status_spp),
    .io_deq_bits_cmd_status_mpie    (io_dma_req_bits_status_mpie),
    .io_deq_bits_cmd_status_ube     (io_dma_req_bits_status_ube),
    .io_deq_bits_cmd_status_spie    (io_dma_req_bits_status_spie),
    .io_deq_bits_cmd_status_upie    (io_dma_req_bits_status_upie),
    .io_deq_bits_cmd_status_mie     (io_dma_req_bits_status_mie),
    .io_deq_bits_cmd_status_hie     (io_dma_req_bits_status_hie),
    .io_deq_bits_cmd_status_sie     (io_dma_req_bits_status_sie),
    .io_deq_bits_cmd_status_uie     (io_dma_req_bits_status_uie),
    .io_deq_bits_rob_id_valid       (_cmd_io_deq_bits_rob_id_valid),
    .io_deq_bits_rob_id_bits        (_cmd_io_deq_bits_rob_id_bits),
    .io_deq_bits_from_matmul_fsm    (_cmd_io_deq_bits_from_matmul_fsm),
    .io_deq_bits_from_conv_fsm      (_cmd_io_deq_bits_from_conv_fsm)
  );
  DMACommandTracker_1 cmd_tracker (	// @[StoreController.scala:152:27]
    .clock                            (clock),
    .reset                            (reset),
    .io_alloc_valid                   (_cmd_tracker_io_alloc_valid_T_2),	// @[StoreController.scala:181:84]
    .io_alloc_bits_tag_rob_id         (_cmd_io_deq_bits_rob_id_bits),	// @[Decoupled.scala:375:21]
    .io_alloc_bits_bytes_to_read      ((|pool_stride) ? {7'h0, pool_porows} * {7'h0, pool_pocols} * _GEN_6 * _GEN_6 : mvout_1d_enabled ? mvout_1d_rows[14:0] : {3'h0, {7'h0, _cmd_io_deq_bits_cmd_rs2[52:48]} * {5'h0, blocks}}),	// @[Decoupled.scala:375:21, StoreController.scala:58:24, :61:24, :62:24, :73:58, :74:44, :82:{37,51,63}, :87:44, :91:{55,78}, :127:54, :139:34, :182:{49,74,112}]
    .io_request_returned_valid        (io_dma_resp_valid),
    .io_request_returned_bits_cmd_id  (io_dma_resp_bits_cmd_id[0]),	// @[StoreController.scala:186:47]
    .io_cmd_completed_ready           (io_completed_ready),
    .io_alloc_ready                   (_cmd_tracker_io_alloc_ready),
    .io_alloc_bits_cmd_id             (_cmd_tracker_io_alloc_bits_cmd_id),
    .io_cmd_completed_valid           (io_completed_valid),
    .io_cmd_completed_bits_tag_rob_id (io_completed_bits),
    .io_busy                          (_cmd_tracker_io_busy)
  );
  assign io_dma_req_valid = _io_dma_req_valid_output;	// @[StoreController.scala:157:88]
  assign io_dma_req_bits_vaddr = _T_17 ? _cmd_io_deq_bits_cmd_rs1[39:0] + {24'h0, {8'h0, porow_counter} * {8'h0, pool_out_dim} + {8'h0, pocol_counter}} * stride : _cmd_io_deq_bits_cmd_rs1[39:0] + {28'h0, row_counter} * stride;	// @[Decoupled.scala:375:21, StoreController.scala:39:19, :54:28, :55:30, :60:25, :68:30, :69:30, :123:{29,43}, :131:{26,43,58,75}, :160:{31,51}]
  assign io_dma_req_bits_laddr_is_acc_addr = _GEN_7 | _cmd_io_deq_bits_cmd_rs2[31];	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :161:31]
  assign io_dma_req_bits_laddr_accumulate = _GEN_7 | _cmd_io_deq_bits_cmd_rs2[30];	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :161:31]
  assign io_dma_req_bits_laddr_read_full_acc_row = _io_dma_req_bits_laddr_read_full_acc_row_output;	// @[StoreController.scala:161:31]
  assign io_dma_req_bits_laddr_garbage = _cmd_io_deq_bits_cmd_rs2[25:15];	// @[Decoupled.scala:375:21, StoreController.scala:87:44]
  assign io_dma_req_bits_laddr_garbage_bit = _GEN_7 | _cmd_io_deq_bits_cmd_rs2[14];	// @[Decoupled.scala:375:21, StoreController.scala:87:44, :161:31]
  assign io_dma_req_bits_laddr_data = (|pool_stride) ? (_T_8 ? 14'h3FFF : _cmd_io_deq_bits_cmd_rs2[13:0] + {3'h0, orow} * {6'h0, pool_ocols} + {3'h0, ocol}) : _cmd_io_deq_bits_cmd_rs2[13:0] + {1'h0, {1'h0, block_counter, 4'h0} + {1'h0, row_counter}};	// @[Decoupled.scala:375:21, LocalAddr.scala:51:{17,25}, :99:{10,13}, StoreController.scala:37:30, :54:28, :55:30, :58:24, :64:23, :73:58, :76:58, :79:58, :87:44, :91:55, :124:78, :126:{41,54}, :127:{54,68,91}, :161:31, :182:74]
  assign io_dma_req_bits_acc_act = activation;	// @[StoreController.scala:45:23]
  assign io_dma_req_bits_acc_scale = acc_scale_bits;	// @[StoreController.scala:51:22]
  assign io_dma_req_bits_len = {11'h0, block_counter == _GEN_8 ? _io_dma_req_bits_len_T_5[4:0] + 5'h1 : 5'h10};	// @[StoreController.scala:55:30, :91:63, :126:41, :173:{23,29,44,76,92}, Util.scala:19:14]
  assign io_dma_req_bits_block = block_counter;	// @[StoreController.scala:55:30]
  assign io_dma_req_bits_cmd_id = {7'h0, _T_36 ? _cmd_tracker_io_alloc_bits_cmd_id : cmd_id_buf};	// @[DMACommandTracker.scala:27:40, Reg.scala:19:16, StoreController.scala:91:55, :152:27, :191:26, Util.scala:91:8]
  assign io_dma_req_bits_pool_en = (|pool_stride) & ((|wrow_counter) | (|wcol_counter));	// @[StoreController.scala:58:24, :70:29, :71:29, :73:58, :158:{49,73}, :176:{49,74}]
  assign io_dma_req_bits_store_en = (|pool_stride) ? wrow_counter == _io_dma_req_bits_store_en_T_1 & wcol_counter == _io_dma_req_bits_store_en_T_1 : block_counter == _GEN_8;	// @[StoreController.scala:55:30, :58:24, :70:29, :71:29, :73:58, :173:44, :177:{34,68,82,88,104}, :178:19]
  assign io_busy = _cmd_io_deq_valid | _cmd_tracker_io_busy;	// @[Decoupled.scala:375:21, StoreController.scala:152:27, :196:24]
  assign io_counter_event_signal_11 = _T_53;	// @[StoreController.scala:156:19]
  assign io_counter_event_signal_12 = _T_50 | (&control_state);	// @[StoreController.scala:37:30, :157:20, :158:20, :316:97]
  assign io_counter_event_signal_13 = |pool_stride;	// @[StoreController.scala:58:24, :73:58]
  assign io_counter_event_signal_14 = _io_dma_req_valid_output & ~io_dma_req_ready;	// @[StoreController.scala:157:88, :319:{92,95}]
endmodule

