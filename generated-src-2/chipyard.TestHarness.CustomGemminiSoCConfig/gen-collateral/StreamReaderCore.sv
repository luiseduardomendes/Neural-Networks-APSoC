// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module StreamReaderCore(
  input          clock,
                 reset,
                 auto_out_a_ready,
                 auto_out_d_valid,
  input  [2:0]   auto_out_d_bits_opcode,
  input  [3:0]   auto_out_d_bits_size,
                 auto_out_d_bits_source,
  input  [127:0] auto_out_d_bits_data,
  input          io_req_valid,
  input  [39:0]  io_req_bits_vaddr,
  input  [13:0]  io_req_bits_spaddr,
  input          io_req_bits_is_acc,
                 io_req_bits_accumulate,
                 io_req_bits_has_acc_bitwidth,
  input  [31:0]  io_req_bits_scale,
  input          io_req_bits_status_debug,
                 io_req_bits_status_cease,
                 io_req_bits_status_wfi,
  input  [31:0]  io_req_bits_status_isa,
  input  [1:0]   io_req_bits_status_dprv,
  input          io_req_bits_status_dv,
  input  [1:0]   io_req_bits_status_prv,
  input          io_req_bits_status_v,
                 io_req_bits_status_sd,
  input  [22:0]  io_req_bits_status_zero2,
  input          io_req_bits_status_mpv,
                 io_req_bits_status_gva,
                 io_req_bits_status_mbe,
                 io_req_bits_status_sbe,
  input  [1:0]   io_req_bits_status_sxl,
                 io_req_bits_status_uxl,
  input          io_req_bits_status_sd_rv32,
  input  [7:0]   io_req_bits_status_zero1,
  input          io_req_bits_status_tsr,
                 io_req_bits_status_tw,
                 io_req_bits_status_tvm,
                 io_req_bits_status_mxr,
                 io_req_bits_status_sum,
                 io_req_bits_status_mprv,
  input  [1:0]   io_req_bits_status_xs,
                 io_req_bits_status_fs,
                 io_req_bits_status_mpp,
                 io_req_bits_status_vs,
  input          io_req_bits_status_spp,
                 io_req_bits_status_mpie,
                 io_req_bits_status_ube,
                 io_req_bits_status_spie,
                 io_req_bits_status_upie,
                 io_req_bits_status_mie,
                 io_req_bits_status_hie,
                 io_req_bits_status_sie,
                 io_req_bits_status_uie,
  input  [15:0]  io_req_bits_len,
                 io_req_bits_repeats,
  input  [7:0]   io_req_bits_pixel_repeats,
  input  [15:0]  io_req_bits_block_stride,
  input  [7:0]   io_req_bits_cmd_id,
  input          io_reserve_ready,
  input  [3:0]   io_reserve_xactid,
  input          io_beatData_ready,
                 io_tlb_resp_miss,
  input  [31:0]  io_tlb_resp_paddr,
  input          io_counter_external_reset,
  output         auto_out_a_valid,
  output [2:0]   auto_out_a_bits_opcode,
                 auto_out_a_bits_param,
  output [3:0]   auto_out_a_bits_size,
                 auto_out_a_bits_source,
  output [31:0]  auto_out_a_bits_address,
  output [15:0]  auto_out_a_bits_mask,
  output [127:0] auto_out_a_bits_data,
  output         auto_out_a_bits_corrupt,
                 auto_out_d_ready,
                 io_req_ready,
                 io_reserve_valid,
  output [5:0]   io_reserve_entry_shift,
  output [13:0]  io_reserve_entry_addr,
  output         io_reserve_entry_is_acc,
                 io_reserve_entry_accumulate,
                 io_reserve_entry_has_acc_bitwidth,
  output [31:0]  io_reserve_entry_scale,
  output [15:0]  io_reserve_entry_repeats,
  output [7:0]   io_reserve_entry_pixel_repeats,
  output [15:0]  io_reserve_entry_len,
                 io_reserve_entry_block_stride,
  output [8:0]   io_reserve_entry_spad_row_offset,
  output [6:0]   io_reserve_entry_bytes_to_read,
  output         io_reserve_entry_cmd_id,
                 io_beatData_valid,
  output [3:0]   io_beatData_bits_xactid,
  output [127:0] io_beatData_bits_data,
  output [2:0]   io_beatData_bits_lg_len_req,
  output         io_beatData_bits_last,
                 io_tlb_req_valid,
  output [39:0]  io_tlb_req_bits_tlb_req_vaddr,
  output         io_tlb_req_bits_status_debug,
                 io_tlb_req_bits_status_mxr,
                 io_tlb_req_bits_status_sum,
                 io_counter_event_signal_18,
                 io_counter_event_signal_19,
                 io_counter_event_signal_20,
  output [31:0]  io_counter_external_values_4
);

  wire         _translate_q_io_enq_ready;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_valid;	// @[DMA.scala:240:29]
  wire [2:0]   _translate_q_io_deq_bits_tl_a_opcode;	// @[DMA.scala:240:29]
  wire [2:0]   _translate_q_io_deq_bits_tl_a_param;	// @[DMA.scala:240:29]
  wire [3:0]   _translate_q_io_deq_bits_tl_a_size;	// @[DMA.scala:240:29]
  wire [3:0]   _translate_q_io_deq_bits_tl_a_source;	// @[DMA.scala:240:29]
  wire [31:0]  _translate_q_io_deq_bits_tl_a_address;	// @[DMA.scala:240:29]
  wire [15:0]  _translate_q_io_deq_bits_tl_a_mask;	// @[DMA.scala:240:29]
  wire [127:0] _translate_q_io_deq_bits_tl_a_data;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_tl_a_corrupt;	// @[DMA.scala:240:29]
  wire [38:0]  _translate_q_io_deq_bits_vaddr;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_debug;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_cease;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_wfi;	// @[DMA.scala:240:29]
  wire [31:0]  _translate_q_io_deq_bits_status_isa;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_dprv;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_dv;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_prv;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_v;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_sd;	// @[DMA.scala:240:29]
  wire [22:0]  _translate_q_io_deq_bits_status_zero2;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mpv;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_gva;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mbe;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_sbe;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_sxl;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_uxl;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_sd_rv32;	// @[DMA.scala:240:29]
  wire [7:0]   _translate_q_io_deq_bits_status_zero1;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_tsr;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_tw;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_tvm;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mxr;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_sum;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mprv;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_xs;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_fs;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_mpp;	// @[DMA.scala:240:29]
  wire [1:0]   _translate_q_io_deq_bits_status_vs;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_spp;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mpie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_ube;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_spie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_upie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_mie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_hie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_sie;	// @[DMA.scala:240:29]
  wire         _translate_q_io_deq_bits_status_uie;	// @[DMA.scala:240:29]
  wire         _tlb_q_io_enq_ready;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_valid;	// @[DMA.scala:230:23]
  wire [2:0]   _tlb_q_io_deq_bits_tl_a_opcode;	// @[DMA.scala:230:23]
  wire [2:0]   _tlb_q_io_deq_bits_tl_a_param;	// @[DMA.scala:230:23]
  wire [3:0]   _tlb_q_io_deq_bits_tl_a_size;	// @[DMA.scala:230:23]
  wire [3:0]   _tlb_q_io_deq_bits_tl_a_source;	// @[DMA.scala:230:23]
  wire [31:0]  _tlb_q_io_deq_bits_tl_a_address;	// @[DMA.scala:230:23]
  wire [15:0]  _tlb_q_io_deq_bits_tl_a_mask;	// @[DMA.scala:230:23]
  wire [127:0] _tlb_q_io_deq_bits_tl_a_data;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_tl_a_corrupt;	// @[DMA.scala:230:23]
  wire [38:0]  _tlb_q_io_deq_bits_vaddr;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_debug;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_cease;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_wfi;	// @[DMA.scala:230:23]
  wire [31:0]  _tlb_q_io_deq_bits_status_isa;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_dprv;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_dv;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_prv;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_v;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_sd;	// @[DMA.scala:230:23]
  wire [22:0]  _tlb_q_io_deq_bits_status_zero2;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mpv;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_gva;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mbe;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_sbe;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_sxl;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_uxl;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_sd_rv32;	// @[DMA.scala:230:23]
  wire [7:0]   _tlb_q_io_deq_bits_status_zero1;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_tsr;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_tw;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_tvm;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mxr;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_sum;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mprv;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_xs;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_fs;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_mpp;	// @[DMA.scala:230:23]
  wire [1:0]   _tlb_q_io_deq_bits_status_vs;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_spp;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mpie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_ube;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_spie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_upie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_mie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_hie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_sie;	// @[DMA.scala:230:23]
  wire         _tlb_q_io_deq_bits_status_uie;	// @[DMA.scala:230:23]
  wire         _tlb_arb_io_in_0_ready;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_in_1_ready;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_valid;	// @[DMA.scala:226:25]
  wire [2:0]   _tlb_arb_io_out_bits_tl_a_opcode;	// @[DMA.scala:226:25]
  wire [2:0]   _tlb_arb_io_out_bits_tl_a_param;	// @[DMA.scala:226:25]
  wire [3:0]   _tlb_arb_io_out_bits_tl_a_size;	// @[DMA.scala:226:25]
  wire [3:0]   _tlb_arb_io_out_bits_tl_a_source;	// @[DMA.scala:226:25]
  wire [31:0]  _tlb_arb_io_out_bits_tl_a_address;	// @[DMA.scala:226:25]
  wire [15:0]  _tlb_arb_io_out_bits_tl_a_mask;	// @[DMA.scala:226:25]
  wire [127:0] _tlb_arb_io_out_bits_tl_a_data;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_tl_a_corrupt;	// @[DMA.scala:226:25]
  wire [38:0]  _tlb_arb_io_out_bits_vaddr;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_debug;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_cease;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_wfi;	// @[DMA.scala:226:25]
  wire [31:0]  _tlb_arb_io_out_bits_status_isa;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_dprv;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_dv;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_prv;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_v;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_sd;	// @[DMA.scala:226:25]
  wire [22:0]  _tlb_arb_io_out_bits_status_zero2;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mpv;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_gva;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mbe;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_sbe;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_sxl;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_uxl;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_sd_rv32;	// @[DMA.scala:226:25]
  wire [7:0]   _tlb_arb_io_out_bits_status_zero1;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_tsr;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_tw;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_tvm;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mxr;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_sum;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mprv;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_xs;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_fs;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_mpp;	// @[DMA.scala:226:25]
  wire [1:0]   _tlb_arb_io_out_bits_status_vs;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_spp;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mpie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_ube;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_spie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_upie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_mie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_hie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_sie;	// @[DMA.scala:226:25]
  wire         _tlb_arb_io_out_bits_status_uie;	// @[DMA.scala:226:25]
  reg          state;	// @[DMA.scala:157:24]
  reg  [39:0]  req_vaddr;	// @[DMA.scala:159:18]
  reg  [13:0]  req_spaddr;	// @[DMA.scala:159:18]
  reg          req_is_acc;	// @[DMA.scala:159:18]
  reg          req_accumulate;	// @[DMA.scala:159:18]
  reg          req_has_acc_bitwidth;	// @[DMA.scala:159:18]
  reg  [31:0]  req_scale;	// @[DMA.scala:159:18]
  reg          req_status_debug;	// @[DMA.scala:159:18]
  reg          req_status_cease;	// @[DMA.scala:159:18]
  reg          req_status_wfi;	// @[DMA.scala:159:18]
  reg  [31:0]  req_status_isa;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_dprv;	// @[DMA.scala:159:18]
  reg          req_status_dv;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_prv;	// @[DMA.scala:159:18]
  reg          req_status_v;	// @[DMA.scala:159:18]
  reg          req_status_sd;	// @[DMA.scala:159:18]
  reg  [22:0]  req_status_zero2;	// @[DMA.scala:159:18]
  reg          req_status_mpv;	// @[DMA.scala:159:18]
  reg          req_status_gva;	// @[DMA.scala:159:18]
  reg          req_status_mbe;	// @[DMA.scala:159:18]
  reg          req_status_sbe;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_sxl;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_uxl;	// @[DMA.scala:159:18]
  reg          req_status_sd_rv32;	// @[DMA.scala:159:18]
  reg  [7:0]   req_status_zero1;	// @[DMA.scala:159:18]
  reg          req_status_tsr;	// @[DMA.scala:159:18]
  reg          req_status_tw;	// @[DMA.scala:159:18]
  reg          req_status_tvm;	// @[DMA.scala:159:18]
  reg          req_status_mxr;	// @[DMA.scala:159:18]
  reg          req_status_sum;	// @[DMA.scala:159:18]
  reg          req_status_mprv;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_xs;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_fs;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_mpp;	// @[DMA.scala:159:18]
  reg  [1:0]   req_status_vs;	// @[DMA.scala:159:18]
  reg          req_status_spp;	// @[DMA.scala:159:18]
  reg          req_status_mpie;	// @[DMA.scala:159:18]
  reg          req_status_ube;	// @[DMA.scala:159:18]
  reg          req_status_spie;	// @[DMA.scala:159:18]
  reg          req_status_upie;	// @[DMA.scala:159:18]
  reg          req_status_mie;	// @[DMA.scala:159:18]
  reg          req_status_hie;	// @[DMA.scala:159:18]
  reg          req_status_sie;	// @[DMA.scala:159:18]
  reg          req_status_uie;	// @[DMA.scala:159:18]
  reg  [15:0]  req_len;	// @[DMA.scala:159:18]
  reg  [15:0]  req_repeats;	// @[DMA.scala:159:18]
  reg  [7:0]   req_pixel_repeats;	// @[DMA.scala:159:18]
  reg  [15:0]  req_block_stride;	// @[DMA.scala:159:18]
  reg  [7:0]   req_cmd_id;	// @[DMA.scala:159:18]
  reg  [5:0]   bytesRequested;	// @[DMA.scala:162:29]
  wire [18:0]  bytesLeft = (req_has_acc_bitwidth ? {1'h0, req_len, 2'h0} : {3'h0, req_len}) - {13'h0, bytesRequested};	// @[DMA.scala:159:18, :162:29, :163:{24,55,135}, Util.scala:109:12]
  wire [4:0]   _read_packets_packet_bytes_read_T_1 = 5'h10 - {1'h0, req_vaddr[3:0]};	// @[DMA.scala:159:18, :186:42, :191:38, :272:81]
  wire [6:0]   read_packets_0_bytes_read = {14'h0, _read_packets_packet_bytes_read_T_1} < bytesLeft ? {2'h0, _read_packets_packet_bytes_read_T_1} : bytesLeft[6:0];	// @[DMA.scala:163:{24,135}, :191:38, Util.scala:109:{8,12}]
  wire [5:0]   _read_packets_packet_bytes_read_T_5 = 6'h20 - {1'h0, req_vaddr[4:0]};	// @[DMA.scala:159:18, :186:42, :191:38]
  wire [6:0]   read_packets_1_bytes_read = {13'h0, _read_packets_packet_bytes_read_T_5} < bytesLeft ? {1'h0, _read_packets_packet_bytes_read_T_5} : bytesLeft[6:0];	// @[DMA.scala:163:135, :191:38, Util.scala:109:{8,12}]
  wire [6:0]   _read_packets_packet_bytes_read_T_9 = 7'h40 - {1'h0, req_vaddr[5:0]};	// @[DMA.scala:159:18, :186:42, :189:19, :191:38]
  wire [6:0]   read_packets_2_bytes_read = {12'h0, _read_packets_packet_bytes_read_T_9} < bytesLeft ? _read_packets_packet_bytes_read_T_9 : bytesLeft[6:0];	// @[DMA.scala:163:135, :191:38, Util.scala:109:{8,12}]
  wire         _read_packet_T = read_packets_1_bytes_read > read_packets_0_bytes_read;	// @[DMA.scala:198:24, Util.scala:109:8]
  wire [6:0]   _read_packet_T_1_bytes_read = _read_packet_T ? read_packets_1_bytes_read : read_packets_0_bytes_read;	// @[DMA.scala:198:{10,24}, Util.scala:109:8]
  wire         _read_packet_T_2 = read_packets_2_bytes_read > _read_packet_T_1_bytes_read;	// @[DMA.scala:198:{10,24}, Util.scala:109:8]
  wire [6:0]   read_packet_bytes_read = _read_packet_T_2 ? read_packets_2_bytes_read : _read_packet_T_1_bytes_read;	// @[DMA.scala:198:{10,24}, Util.scala:109:8]
  wire         untranslated_a_valid = state & io_reserve_ready;	// @[DMA.scala:157:24, :219:55]
  wire         tl_a_valid = _translate_q_io_deq_valid & ~io_tlb_resp_miss;	// @[DMA.scala:240:29, :248:{44,47}]
  wire [6:0]   _io_reserve_entry_spad_row_offset_T = {1'h0, bytesRequested} % 7'h40;	// @[DMA.scala:162:29, :189:19, :273:82]
  wire [5:0]   _io_reserve_entry_spad_row_offset_T_1 = bytesRequested % 6'h10;	// @[DMA.scala:162:29, :272:81, :273:116]
  wire         _T_3 = _tlb_arb_io_in_1_ready & untranslated_a_valid;	// @[DMA.scala:219:55, :226:25, Decoupled.scala:51:35]
  wire         _GEN = _T_3 & {12'h0, read_packet_bytes_read} >= bytesLeft;	// @[DMA.scala:163:135, :165:47, :198:10, :275:32, :283:{29,43}, :285:37, Decoupled.scala:51:35, Util.scala:109:12]
  wire         state_machine_ready_for_req = _GEN | ~state;	// @[DMA.scala:157:24, :165:{47,54}, :275:32, :283:43, :285:37]
  wire [26:0]  _io_beatData_bits_last_beats1_decode_T_1 = 27'hFFF << auto_out_d_bits_size;	// @[package.scala:235:71]
  reg  [7:0]   io_beatData_bits_last_counter;	// @[Edges.scala:228:27]
  reg  [31:0]  total_bytes_read;	// @[DMA.scala:314:35]
  wire         _T_9 = io_beatData_ready & auto_out_d_valid;	// @[Decoupled.scala:51:35]
  wire         _T_5 = state_machine_ready_for_req & io_req_valid;	// @[DMA.scala:165:47, :275:32, :283:43, :285:37, Decoupled.scala:51:35]
  always @(posedge clock) begin
    if (reset) begin
      state <= 1'h0;	// @[DMA.scala:157:24]
      io_beatData_bits_last_counter <= 8'h0;	// @[Edges.scala:228:27]
      total_bytes_read <= 32'h0;	// @[CounterFile.scala:140:39, DMA.scala:314:35]
    end
    else begin
      state <= _T_5 | ~_GEN & state;	// @[DMA.scala:157:24, :165:47, :275:32, :283:43, :285:37, :286:15, :300:24, :304:13, Decoupled.scala:51:35]
      if (_T_9) begin	// @[Decoupled.scala:51:35]
        if (io_beatData_bits_last_counter == 8'h0) begin	// @[Edges.scala:228:27, :230:25]
          if (auto_out_d_bits_opcode[0])	// @[Edges.scala:105:36]
            io_beatData_bits_last_counter <= ~(_io_beatData_bits_last_beats1_decode_T_1[11:4]);	// @[Edges.scala:228:27, package.scala:235:{46,71,76}]
          else	// @[Edges.scala:105:36]
            io_beatData_bits_last_counter <= 8'h0;	// @[Edges.scala:228:27]
        end
        else	// @[Edges.scala:230:25]
          io_beatData_bits_last_counter <= io_beatData_bits_last_counter - 8'h1;	// @[Edges.scala:228:27, :229:28]
      end
      if (io_counter_external_reset)
        total_bytes_read <= 32'h0;	// @[CounterFile.scala:140:39, DMA.scala:314:35]
      else if (_T_9)	// @[Decoupled.scala:51:35]
        total_bytes_read <= total_bytes_read + {16'h0, 16'h1 << auto_out_d_bits_size};	// @[DMA.scala:163:55, :314:35, :318:{44,51}]
    end
    if (_T_5) begin	// @[Decoupled.scala:51:35]
      req_vaddr <= io_req_bits_vaddr;	// @[DMA.scala:159:18]
      req_spaddr <= io_req_bits_spaddr;	// @[DMA.scala:159:18]
      req_is_acc <= io_req_bits_is_acc;	// @[DMA.scala:159:18]
      req_accumulate <= io_req_bits_accumulate;	// @[DMA.scala:159:18]
      req_has_acc_bitwidth <= io_req_bits_has_acc_bitwidth;	// @[DMA.scala:159:18]
      req_scale <= io_req_bits_scale;	// @[DMA.scala:159:18]
      req_status_debug <= io_req_bits_status_debug;	// @[DMA.scala:159:18]
      req_status_cease <= io_req_bits_status_cease;	// @[DMA.scala:159:18]
      req_status_wfi <= io_req_bits_status_wfi;	// @[DMA.scala:159:18]
      req_status_isa <= io_req_bits_status_isa;	// @[DMA.scala:159:18]
      req_status_dprv <= io_req_bits_status_dprv;	// @[DMA.scala:159:18]
      req_status_dv <= io_req_bits_status_dv;	// @[DMA.scala:159:18]
      req_status_prv <= io_req_bits_status_prv;	// @[DMA.scala:159:18]
      req_status_v <= io_req_bits_status_v;	// @[DMA.scala:159:18]
      req_status_sd <= io_req_bits_status_sd;	// @[DMA.scala:159:18]
      req_status_zero2 <= io_req_bits_status_zero2;	// @[DMA.scala:159:18]
      req_status_mpv <= io_req_bits_status_mpv;	// @[DMA.scala:159:18]
      req_status_gva <= io_req_bits_status_gva;	// @[DMA.scala:159:18]
      req_status_mbe <= io_req_bits_status_mbe;	// @[DMA.scala:159:18]
      req_status_sbe <= io_req_bits_status_sbe;	// @[DMA.scala:159:18]
      req_status_sxl <= io_req_bits_status_sxl;	// @[DMA.scala:159:18]
      req_status_uxl <= io_req_bits_status_uxl;	// @[DMA.scala:159:18]
      req_status_sd_rv32 <= io_req_bits_status_sd_rv32;	// @[DMA.scala:159:18]
      req_status_zero1 <= io_req_bits_status_zero1;	// @[DMA.scala:159:18]
      req_status_tsr <= io_req_bits_status_tsr;	// @[DMA.scala:159:18]
      req_status_tw <= io_req_bits_status_tw;	// @[DMA.scala:159:18]
      req_status_tvm <= io_req_bits_status_tvm;	// @[DMA.scala:159:18]
      req_status_mxr <= io_req_bits_status_mxr;	// @[DMA.scala:159:18]
      req_status_sum <= io_req_bits_status_sum;	// @[DMA.scala:159:18]
      req_status_mprv <= io_req_bits_status_mprv;	// @[DMA.scala:159:18]
      req_status_xs <= io_req_bits_status_xs;	// @[DMA.scala:159:18]
      req_status_fs <= io_req_bits_status_fs;	// @[DMA.scala:159:18]
      req_status_mpp <= io_req_bits_status_mpp;	// @[DMA.scala:159:18]
      req_status_vs <= io_req_bits_status_vs;	// @[DMA.scala:159:18]
      req_status_spp <= io_req_bits_status_spp;	// @[DMA.scala:159:18]
      req_status_mpie <= io_req_bits_status_mpie;	// @[DMA.scala:159:18]
      req_status_ube <= io_req_bits_status_ube;	// @[DMA.scala:159:18]
      req_status_spie <= io_req_bits_status_spie;	// @[DMA.scala:159:18]
      req_status_upie <= io_req_bits_status_upie;	// @[DMA.scala:159:18]
      req_status_mie <= io_req_bits_status_mie;	// @[DMA.scala:159:18]
      req_status_hie <= io_req_bits_status_hie;	// @[DMA.scala:159:18]
      req_status_sie <= io_req_bits_status_sie;	// @[DMA.scala:159:18]
      req_status_uie <= io_req_bits_status_uie;	// @[DMA.scala:159:18]
      req_len <= io_req_bits_len;	// @[DMA.scala:159:18]
      req_repeats <= io_req_bits_repeats;	// @[DMA.scala:159:18]
      req_pixel_repeats <= io_req_bits_pixel_repeats;	// @[DMA.scala:159:18]
      req_block_stride <= io_req_bits_block_stride;	// @[DMA.scala:159:18]
      req_cmd_id <= io_req_bits_cmd_id;	// @[DMA.scala:159:18]
      bytesRequested <= 6'h0;	// @[Cat.scala:33:92, DMA.scala:162:29]
    end
    else if (_T_3) begin	// @[Decoupled.scala:51:35]
      req_vaddr <= req_vaddr + {33'h0, read_packet_bytes_read};	// @[DMA.scala:159:18, :198:10, :276:34]
      bytesRequested <= bytesRequested + read_packet_bytes_read[5:0];	// @[DMA.scala:162:29, :198:10, :280:40]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    always @(posedge clock) begin	// @[DMA.scala:246:11]
      if (~reset & ~_tlb_arb_io_in_0_ready) begin	// @[DMA.scala:226:25, :246:11]
        if (`ASSERT_VERBOSE_COND_)	// @[DMA.scala:246:11]
          $error("Assertion failed\n    at DMA.scala:246 assert(retry_a.ready)\n");	// @[DMA.scala:246:11]
        if (`STOP_COND_)	// @[DMA.scala:246:11]
          $fatal;	// @[DMA.scala:246:11]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        state = _RANDOM_0[0];	// @[DMA.scala:157:24]
        req_vaddr = {_RANDOM_0[31:1], _RANDOM_1[8:0]};	// @[DMA.scala:157:24, :159:18]
        req_spaddr = _RANDOM_1[22:9];	// @[DMA.scala:159:18]
        req_is_acc = _RANDOM_1[23];	// @[DMA.scala:159:18]
        req_accumulate = _RANDOM_1[24];	// @[DMA.scala:159:18]
        req_has_acc_bitwidth = _RANDOM_1[25];	// @[DMA.scala:159:18]
        req_scale = {_RANDOM_1[31:26], _RANDOM_2[25:0]};	// @[DMA.scala:159:18]
        req_status_debug = _RANDOM_2[26];	// @[DMA.scala:159:18]
        req_status_cease = _RANDOM_2[27];	// @[DMA.scala:159:18]
        req_status_wfi = _RANDOM_2[28];	// @[DMA.scala:159:18]
        req_status_isa = {_RANDOM_2[31:29], _RANDOM_3[28:0]};	// @[DMA.scala:159:18]
        req_status_dprv = _RANDOM_3[30:29];	// @[DMA.scala:159:18]
        req_status_dv = _RANDOM_3[31];	// @[DMA.scala:159:18]
        req_status_prv = _RANDOM_4[1:0];	// @[DMA.scala:159:18]
        req_status_v = _RANDOM_4[2];	// @[DMA.scala:159:18]
        req_status_sd = _RANDOM_4[3];	// @[DMA.scala:159:18]
        req_status_zero2 = _RANDOM_4[26:4];	// @[DMA.scala:159:18]
        req_status_mpv = _RANDOM_4[27];	// @[DMA.scala:159:18]
        req_status_gva = _RANDOM_4[28];	// @[DMA.scala:159:18]
        req_status_mbe = _RANDOM_4[29];	// @[DMA.scala:159:18]
        req_status_sbe = _RANDOM_4[30];	// @[DMA.scala:159:18]
        req_status_sxl = {_RANDOM_4[31], _RANDOM_5[0]};	// @[DMA.scala:159:18]
        req_status_uxl = _RANDOM_5[2:1];	// @[DMA.scala:159:18]
        req_status_sd_rv32 = _RANDOM_5[3];	// @[DMA.scala:159:18]
        req_status_zero1 = _RANDOM_5[11:4];	// @[DMA.scala:159:18]
        req_status_tsr = _RANDOM_5[12];	// @[DMA.scala:159:18]
        req_status_tw = _RANDOM_5[13];	// @[DMA.scala:159:18]
        req_status_tvm = _RANDOM_5[14];	// @[DMA.scala:159:18]
        req_status_mxr = _RANDOM_5[15];	// @[DMA.scala:159:18]
        req_status_sum = _RANDOM_5[16];	// @[DMA.scala:159:18]
        req_status_mprv = _RANDOM_5[17];	// @[DMA.scala:159:18]
        req_status_xs = _RANDOM_5[19:18];	// @[DMA.scala:159:18]
        req_status_fs = _RANDOM_5[21:20];	// @[DMA.scala:159:18]
        req_status_mpp = _RANDOM_5[23:22];	// @[DMA.scala:159:18]
        req_status_vs = _RANDOM_5[25:24];	// @[DMA.scala:159:18]
        req_status_spp = _RANDOM_5[26];	// @[DMA.scala:159:18]
        req_status_mpie = _RANDOM_5[27];	// @[DMA.scala:159:18]
        req_status_ube = _RANDOM_5[28];	// @[DMA.scala:159:18]
        req_status_spie = _RANDOM_5[29];	// @[DMA.scala:159:18]
        req_status_upie = _RANDOM_5[30];	// @[DMA.scala:159:18]
        req_status_mie = _RANDOM_5[31];	// @[DMA.scala:159:18]
        req_status_hie = _RANDOM_6[0];	// @[DMA.scala:159:18]
        req_status_sie = _RANDOM_6[1];	// @[DMA.scala:159:18]
        req_status_uie = _RANDOM_6[2];	// @[DMA.scala:159:18]
        req_len = _RANDOM_6[18:3];	// @[DMA.scala:159:18]
        req_repeats = {_RANDOM_6[31:19], _RANDOM_7[2:0]};	// @[DMA.scala:159:18]
        req_pixel_repeats = _RANDOM_7[10:3];	// @[DMA.scala:159:18]
        req_block_stride = _RANDOM_7[26:11];	// @[DMA.scala:159:18]
        req_cmd_id = {_RANDOM_7[31:27], _RANDOM_8[2:0]};	// @[DMA.scala:159:18]
        bytesRequested = _RANDOM_8[8:3];	// @[DMA.scala:159:18, :162:29]
        io_beatData_bits_last_counter = _RANDOM_8[16:9];	// @[DMA.scala:159:18, Edges.scala:228:27]
        total_bytes_read = {_RANDOM_8[31:17], _RANDOM_9[16:0]};	// @[DMA.scala:159:18, :314:35]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Arbiter tlb_arb (	// @[DMA.scala:226:25]
    .io_in_0_valid               (_translate_q_io_deq_valid & (io_tlb_resp_miss | ~auto_out_a_ready)),	// @[DMA.scala:240:29, :244:{47,68,71}]
    .io_in_0_bits_tl_a_opcode    (_translate_q_io_deq_bits_tl_a_opcode),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_param     (_translate_q_io_deq_bits_tl_a_param),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_size      (_translate_q_io_deq_bits_tl_a_size),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_source    (_translate_q_io_deq_bits_tl_a_source),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_address   (_translate_q_io_deq_bits_tl_a_address),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_mask      (_translate_q_io_deq_bits_tl_a_mask),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_data      (_translate_q_io_deq_bits_tl_a_data),	// @[DMA.scala:240:29]
    .io_in_0_bits_tl_a_corrupt   (_translate_q_io_deq_bits_tl_a_corrupt),	// @[DMA.scala:240:29]
    .io_in_0_bits_vaddr          (_translate_q_io_deq_bits_vaddr),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_debug   (_translate_q_io_deq_bits_status_debug),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_cease   (_translate_q_io_deq_bits_status_cease),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_wfi     (_translate_q_io_deq_bits_status_wfi),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_isa     (_translate_q_io_deq_bits_status_isa),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_dprv    (_translate_q_io_deq_bits_status_dprv),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_dv      (_translate_q_io_deq_bits_status_dv),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_prv     (_translate_q_io_deq_bits_status_prv),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_v       (_translate_q_io_deq_bits_status_v),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sd      (_translate_q_io_deq_bits_status_sd),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_zero2   (_translate_q_io_deq_bits_status_zero2),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mpv     (_translate_q_io_deq_bits_status_mpv),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_gva     (_translate_q_io_deq_bits_status_gva),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mbe     (_translate_q_io_deq_bits_status_mbe),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sbe     (_translate_q_io_deq_bits_status_sbe),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sxl     (_translate_q_io_deq_bits_status_sxl),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_uxl     (_translate_q_io_deq_bits_status_uxl),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sd_rv32 (_translate_q_io_deq_bits_status_sd_rv32),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_zero1   (_translate_q_io_deq_bits_status_zero1),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_tsr     (_translate_q_io_deq_bits_status_tsr),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_tw      (_translate_q_io_deq_bits_status_tw),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_tvm     (_translate_q_io_deq_bits_status_tvm),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mxr     (_translate_q_io_deq_bits_status_mxr),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sum     (_translate_q_io_deq_bits_status_sum),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mprv    (_translate_q_io_deq_bits_status_mprv),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_xs      (_translate_q_io_deq_bits_status_xs),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_fs      (_translate_q_io_deq_bits_status_fs),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mpp     (_translate_q_io_deq_bits_status_mpp),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_vs      (_translate_q_io_deq_bits_status_vs),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_spp     (_translate_q_io_deq_bits_status_spp),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mpie    (_translate_q_io_deq_bits_status_mpie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_ube     (_translate_q_io_deq_bits_status_ube),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_spie    (_translate_q_io_deq_bits_status_spie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_upie    (_translate_q_io_deq_bits_status_upie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_mie     (_translate_q_io_deq_bits_status_mie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_hie     (_translate_q_io_deq_bits_status_hie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_sie     (_translate_q_io_deq_bits_status_sie),	// @[DMA.scala:240:29]
    .io_in_0_bits_status_uie     (_translate_q_io_deq_bits_status_uie),	// @[DMA.scala:240:29]
    .io_in_1_valid               (untranslated_a_valid),	// @[DMA.scala:219:55]
    .io_in_1_bits_tl_a_size      ({1'h0, _read_packet_T_2 ? 3'h6 : {2'h2, _read_packet_T}}),	// @[DMA.scala:190:22, :198:{10,24}, Edges.scala:450:15]
    .io_in_1_bits_tl_a_source    (io_reserve_xactid),
    .io_in_1_bits_tl_a_mask      (16'hFFFF),	// @[Cat.scala:33:92]
    .io_in_1_bits_vaddr          (_read_packet_T_2 ? {req_vaddr[38:6], 6'h0} : _read_packet_T ? {req_vaddr[38:5], 5'h0} : {req_vaddr[38:4], 4'h0}),	// @[Cat.scala:33:92, DMA.scala:159:18, :185:67, :198:{10,24}]
    .io_in_1_bits_status_debug   (req_status_debug),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_cease   (req_status_cease),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_wfi     (req_status_wfi),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_isa     (req_status_isa),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_dprv    (req_status_dprv),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_dv      (req_status_dv),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_prv     (req_status_prv),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_v       (req_status_v),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sd      (req_status_sd),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_zero2   (req_status_zero2),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mpv     (req_status_mpv),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_gva     (req_status_gva),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mbe     (req_status_mbe),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sbe     (req_status_sbe),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sxl     (req_status_sxl),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_uxl     (req_status_uxl),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sd_rv32 (req_status_sd_rv32),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_zero1   (req_status_zero1),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_tsr     (req_status_tsr),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_tw      (req_status_tw),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_tvm     (req_status_tvm),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mxr     (req_status_mxr),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sum     (req_status_sum),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mprv    (req_status_mprv),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_xs      (req_status_xs),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_fs      (req_status_fs),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mpp     (req_status_mpp),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_vs      (req_status_vs),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_spp     (req_status_spp),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mpie    (req_status_mpie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_ube     (req_status_ube),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_spie    (req_status_spie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_upie    (req_status_upie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_mie     (req_status_mie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_hie     (req_status_hie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_sie     (req_status_sie),	// @[DMA.scala:159:18]
    .io_in_1_bits_status_uie     (req_status_uie),	// @[DMA.scala:159:18]
    .io_out_ready                (_tlb_q_io_enq_ready),	// @[DMA.scala:230:23]
    .io_in_0_ready               (_tlb_arb_io_in_0_ready),
    .io_in_1_ready               (_tlb_arb_io_in_1_ready),
    .io_out_valid                (_tlb_arb_io_out_valid),
    .io_out_bits_tl_a_opcode     (_tlb_arb_io_out_bits_tl_a_opcode),
    .io_out_bits_tl_a_param      (_tlb_arb_io_out_bits_tl_a_param),
    .io_out_bits_tl_a_size       (_tlb_arb_io_out_bits_tl_a_size),
    .io_out_bits_tl_a_source     (_tlb_arb_io_out_bits_tl_a_source),
    .io_out_bits_tl_a_address    (_tlb_arb_io_out_bits_tl_a_address),
    .io_out_bits_tl_a_mask       (_tlb_arb_io_out_bits_tl_a_mask),
    .io_out_bits_tl_a_data       (_tlb_arb_io_out_bits_tl_a_data),
    .io_out_bits_tl_a_corrupt    (_tlb_arb_io_out_bits_tl_a_corrupt),
    .io_out_bits_vaddr           (_tlb_arb_io_out_bits_vaddr),
    .io_out_bits_status_debug    (_tlb_arb_io_out_bits_status_debug),
    .io_out_bits_status_cease    (_tlb_arb_io_out_bits_status_cease),
    .io_out_bits_status_wfi      (_tlb_arb_io_out_bits_status_wfi),
    .io_out_bits_status_isa      (_tlb_arb_io_out_bits_status_isa),
    .io_out_bits_status_dprv     (_tlb_arb_io_out_bits_status_dprv),
    .io_out_bits_status_dv       (_tlb_arb_io_out_bits_status_dv),
    .io_out_bits_status_prv      (_tlb_arb_io_out_bits_status_prv),
    .io_out_bits_status_v        (_tlb_arb_io_out_bits_status_v),
    .io_out_bits_status_sd       (_tlb_arb_io_out_bits_status_sd),
    .io_out_bits_status_zero2    (_tlb_arb_io_out_bits_status_zero2),
    .io_out_bits_status_mpv      (_tlb_arb_io_out_bits_status_mpv),
    .io_out_bits_status_gva      (_tlb_arb_io_out_bits_status_gva),
    .io_out_bits_status_mbe      (_tlb_arb_io_out_bits_status_mbe),
    .io_out_bits_status_sbe      (_tlb_arb_io_out_bits_status_sbe),
    .io_out_bits_status_sxl      (_tlb_arb_io_out_bits_status_sxl),
    .io_out_bits_status_uxl      (_tlb_arb_io_out_bits_status_uxl),
    .io_out_bits_status_sd_rv32  (_tlb_arb_io_out_bits_status_sd_rv32),
    .io_out_bits_status_zero1    (_tlb_arb_io_out_bits_status_zero1),
    .io_out_bits_status_tsr      (_tlb_arb_io_out_bits_status_tsr),
    .io_out_bits_status_tw       (_tlb_arb_io_out_bits_status_tw),
    .io_out_bits_status_tvm      (_tlb_arb_io_out_bits_status_tvm),
    .io_out_bits_status_mxr      (_tlb_arb_io_out_bits_status_mxr),
    .io_out_bits_status_sum      (_tlb_arb_io_out_bits_status_sum),
    .io_out_bits_status_mprv     (_tlb_arb_io_out_bits_status_mprv),
    .io_out_bits_status_xs       (_tlb_arb_io_out_bits_status_xs),
    .io_out_bits_status_fs       (_tlb_arb_io_out_bits_status_fs),
    .io_out_bits_status_mpp      (_tlb_arb_io_out_bits_status_mpp),
    .io_out_bits_status_vs       (_tlb_arb_io_out_bits_status_vs),
    .io_out_bits_status_spp      (_tlb_arb_io_out_bits_status_spp),
    .io_out_bits_status_mpie     (_tlb_arb_io_out_bits_status_mpie),
    .io_out_bits_status_ube      (_tlb_arb_io_out_bits_status_ube),
    .io_out_bits_status_spie     (_tlb_arb_io_out_bits_status_spie),
    .io_out_bits_status_upie     (_tlb_arb_io_out_bits_status_upie),
    .io_out_bits_status_mie      (_tlb_arb_io_out_bits_status_mie),
    .io_out_bits_status_hie      (_tlb_arb_io_out_bits_status_hie),
    .io_out_bits_status_sie      (_tlb_arb_io_out_bits_status_sie),
    .io_out_bits_status_uie      (_tlb_arb_io_out_bits_status_uie)
  );
  Queue_68 tlb_q (	// @[DMA.scala:230:23]
    .clock                      (clock),
    .reset                      (reset),
    .io_enq_valid               (_tlb_arb_io_out_valid),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_opcode    (_tlb_arb_io_out_bits_tl_a_opcode),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_param     (_tlb_arb_io_out_bits_tl_a_param),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_size      (_tlb_arb_io_out_bits_tl_a_size),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_source    (_tlb_arb_io_out_bits_tl_a_source),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_address   (_tlb_arb_io_out_bits_tl_a_address),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_mask      (_tlb_arb_io_out_bits_tl_a_mask),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_data      (_tlb_arb_io_out_bits_tl_a_data),	// @[DMA.scala:226:25]
    .io_enq_bits_tl_a_corrupt   (_tlb_arb_io_out_bits_tl_a_corrupt),	// @[DMA.scala:226:25]
    .io_enq_bits_vaddr          (_tlb_arb_io_out_bits_vaddr),	// @[DMA.scala:226:25]
    .io_enq_bits_status_debug   (_tlb_arb_io_out_bits_status_debug),	// @[DMA.scala:226:25]
    .io_enq_bits_status_cease   (_tlb_arb_io_out_bits_status_cease),	// @[DMA.scala:226:25]
    .io_enq_bits_status_wfi     (_tlb_arb_io_out_bits_status_wfi),	// @[DMA.scala:226:25]
    .io_enq_bits_status_isa     (_tlb_arb_io_out_bits_status_isa),	// @[DMA.scala:226:25]
    .io_enq_bits_status_dprv    (_tlb_arb_io_out_bits_status_dprv),	// @[DMA.scala:226:25]
    .io_enq_bits_status_dv      (_tlb_arb_io_out_bits_status_dv),	// @[DMA.scala:226:25]
    .io_enq_bits_status_prv     (_tlb_arb_io_out_bits_status_prv),	// @[DMA.scala:226:25]
    .io_enq_bits_status_v       (_tlb_arb_io_out_bits_status_v),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sd      (_tlb_arb_io_out_bits_status_sd),	// @[DMA.scala:226:25]
    .io_enq_bits_status_zero2   (_tlb_arb_io_out_bits_status_zero2),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mpv     (_tlb_arb_io_out_bits_status_mpv),	// @[DMA.scala:226:25]
    .io_enq_bits_status_gva     (_tlb_arb_io_out_bits_status_gva),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mbe     (_tlb_arb_io_out_bits_status_mbe),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sbe     (_tlb_arb_io_out_bits_status_sbe),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sxl     (_tlb_arb_io_out_bits_status_sxl),	// @[DMA.scala:226:25]
    .io_enq_bits_status_uxl     (_tlb_arb_io_out_bits_status_uxl),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sd_rv32 (_tlb_arb_io_out_bits_status_sd_rv32),	// @[DMA.scala:226:25]
    .io_enq_bits_status_zero1   (_tlb_arb_io_out_bits_status_zero1),	// @[DMA.scala:226:25]
    .io_enq_bits_status_tsr     (_tlb_arb_io_out_bits_status_tsr),	// @[DMA.scala:226:25]
    .io_enq_bits_status_tw      (_tlb_arb_io_out_bits_status_tw),	// @[DMA.scala:226:25]
    .io_enq_bits_status_tvm     (_tlb_arb_io_out_bits_status_tvm),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mxr     (_tlb_arb_io_out_bits_status_mxr),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sum     (_tlb_arb_io_out_bits_status_sum),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mprv    (_tlb_arb_io_out_bits_status_mprv),	// @[DMA.scala:226:25]
    .io_enq_bits_status_xs      (_tlb_arb_io_out_bits_status_xs),	// @[DMA.scala:226:25]
    .io_enq_bits_status_fs      (_tlb_arb_io_out_bits_status_fs),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mpp     (_tlb_arb_io_out_bits_status_mpp),	// @[DMA.scala:226:25]
    .io_enq_bits_status_vs      (_tlb_arb_io_out_bits_status_vs),	// @[DMA.scala:226:25]
    .io_enq_bits_status_spp     (_tlb_arb_io_out_bits_status_spp),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mpie    (_tlb_arb_io_out_bits_status_mpie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_ube     (_tlb_arb_io_out_bits_status_ube),	// @[DMA.scala:226:25]
    .io_enq_bits_status_spie    (_tlb_arb_io_out_bits_status_spie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_upie    (_tlb_arb_io_out_bits_status_upie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_mie     (_tlb_arb_io_out_bits_status_mie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_hie     (_tlb_arb_io_out_bits_status_hie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_sie     (_tlb_arb_io_out_bits_status_sie),	// @[DMA.scala:226:25]
    .io_enq_bits_status_uie     (_tlb_arb_io_out_bits_status_uie),	// @[DMA.scala:226:25]
    .io_deq_ready               (_translate_q_io_enq_ready),	// @[DMA.scala:240:29]
    .io_enq_ready               (_tlb_q_io_enq_ready),
    .io_deq_valid               (_tlb_q_io_deq_valid),
    .io_deq_bits_tl_a_opcode    (_tlb_q_io_deq_bits_tl_a_opcode),
    .io_deq_bits_tl_a_param     (_tlb_q_io_deq_bits_tl_a_param),
    .io_deq_bits_tl_a_size      (_tlb_q_io_deq_bits_tl_a_size),
    .io_deq_bits_tl_a_source    (_tlb_q_io_deq_bits_tl_a_source),
    .io_deq_bits_tl_a_address   (_tlb_q_io_deq_bits_tl_a_address),
    .io_deq_bits_tl_a_mask      (_tlb_q_io_deq_bits_tl_a_mask),
    .io_deq_bits_tl_a_data      (_tlb_q_io_deq_bits_tl_a_data),
    .io_deq_bits_tl_a_corrupt   (_tlb_q_io_deq_bits_tl_a_corrupt),
    .io_deq_bits_vaddr          (_tlb_q_io_deq_bits_vaddr),
    .io_deq_bits_status_debug   (_tlb_q_io_deq_bits_status_debug),
    .io_deq_bits_status_cease   (_tlb_q_io_deq_bits_status_cease),
    .io_deq_bits_status_wfi     (_tlb_q_io_deq_bits_status_wfi),
    .io_deq_bits_status_isa     (_tlb_q_io_deq_bits_status_isa),
    .io_deq_bits_status_dprv    (_tlb_q_io_deq_bits_status_dprv),
    .io_deq_bits_status_dv      (_tlb_q_io_deq_bits_status_dv),
    .io_deq_bits_status_prv     (_tlb_q_io_deq_bits_status_prv),
    .io_deq_bits_status_v       (_tlb_q_io_deq_bits_status_v),
    .io_deq_bits_status_sd      (_tlb_q_io_deq_bits_status_sd),
    .io_deq_bits_status_zero2   (_tlb_q_io_deq_bits_status_zero2),
    .io_deq_bits_status_mpv     (_tlb_q_io_deq_bits_status_mpv),
    .io_deq_bits_status_gva     (_tlb_q_io_deq_bits_status_gva),
    .io_deq_bits_status_mbe     (_tlb_q_io_deq_bits_status_mbe),
    .io_deq_bits_status_sbe     (_tlb_q_io_deq_bits_status_sbe),
    .io_deq_bits_status_sxl     (_tlb_q_io_deq_bits_status_sxl),
    .io_deq_bits_status_uxl     (_tlb_q_io_deq_bits_status_uxl),
    .io_deq_bits_status_sd_rv32 (_tlb_q_io_deq_bits_status_sd_rv32),
    .io_deq_bits_status_zero1   (_tlb_q_io_deq_bits_status_zero1),
    .io_deq_bits_status_tsr     (_tlb_q_io_deq_bits_status_tsr),
    .io_deq_bits_status_tw      (_tlb_q_io_deq_bits_status_tw),
    .io_deq_bits_status_tvm     (_tlb_q_io_deq_bits_status_tvm),
    .io_deq_bits_status_mxr     (_tlb_q_io_deq_bits_status_mxr),
    .io_deq_bits_status_sum     (_tlb_q_io_deq_bits_status_sum),
    .io_deq_bits_status_mprv    (_tlb_q_io_deq_bits_status_mprv),
    .io_deq_bits_status_xs      (_tlb_q_io_deq_bits_status_xs),
    .io_deq_bits_status_fs      (_tlb_q_io_deq_bits_status_fs),
    .io_deq_bits_status_mpp     (_tlb_q_io_deq_bits_status_mpp),
    .io_deq_bits_status_vs      (_tlb_q_io_deq_bits_status_vs),
    .io_deq_bits_status_spp     (_tlb_q_io_deq_bits_status_spp),
    .io_deq_bits_status_mpie    (_tlb_q_io_deq_bits_status_mpie),
    .io_deq_bits_status_ube     (_tlb_q_io_deq_bits_status_ube),
    .io_deq_bits_status_spie    (_tlb_q_io_deq_bits_status_spie),
    .io_deq_bits_status_upie    (_tlb_q_io_deq_bits_status_upie),
    .io_deq_bits_status_mie     (_tlb_q_io_deq_bits_status_mie),
    .io_deq_bits_status_hie     (_tlb_q_io_deq_bits_status_hie),
    .io_deq_bits_status_sie     (_tlb_q_io_deq_bits_status_sie),
    .io_deq_bits_status_uie     (_tlb_q_io_deq_bits_status_uie)
  );
  Queue_68 translate_q (	// @[DMA.scala:240:29]
    .clock                      (clock),
    .reset                      (reset),
    .io_enq_valid               (_tlb_q_io_deq_valid),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_opcode    (_tlb_q_io_deq_bits_tl_a_opcode),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_param     (_tlb_q_io_deq_bits_tl_a_param),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_size      (_tlb_q_io_deq_bits_tl_a_size),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_source    (_tlb_q_io_deq_bits_tl_a_source),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_address   (_tlb_q_io_deq_bits_tl_a_address),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_mask      (_tlb_q_io_deq_bits_tl_a_mask),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_data      (_tlb_q_io_deq_bits_tl_a_data),	// @[DMA.scala:230:23]
    .io_enq_bits_tl_a_corrupt   (_tlb_q_io_deq_bits_tl_a_corrupt),	// @[DMA.scala:230:23]
    .io_enq_bits_vaddr          (_tlb_q_io_deq_bits_vaddr),	// @[DMA.scala:230:23]
    .io_enq_bits_status_debug   (_tlb_q_io_deq_bits_status_debug),	// @[DMA.scala:230:23]
    .io_enq_bits_status_cease   (_tlb_q_io_deq_bits_status_cease),	// @[DMA.scala:230:23]
    .io_enq_bits_status_wfi     (_tlb_q_io_deq_bits_status_wfi),	// @[DMA.scala:230:23]
    .io_enq_bits_status_isa     (_tlb_q_io_deq_bits_status_isa),	// @[DMA.scala:230:23]
    .io_enq_bits_status_dprv    (_tlb_q_io_deq_bits_status_dprv),	// @[DMA.scala:230:23]
    .io_enq_bits_status_dv      (_tlb_q_io_deq_bits_status_dv),	// @[DMA.scala:230:23]
    .io_enq_bits_status_prv     (_tlb_q_io_deq_bits_status_prv),	// @[DMA.scala:230:23]
    .io_enq_bits_status_v       (_tlb_q_io_deq_bits_status_v),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sd      (_tlb_q_io_deq_bits_status_sd),	// @[DMA.scala:230:23]
    .io_enq_bits_status_zero2   (_tlb_q_io_deq_bits_status_zero2),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mpv     (_tlb_q_io_deq_bits_status_mpv),	// @[DMA.scala:230:23]
    .io_enq_bits_status_gva     (_tlb_q_io_deq_bits_status_gva),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mbe     (_tlb_q_io_deq_bits_status_mbe),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sbe     (_tlb_q_io_deq_bits_status_sbe),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sxl     (_tlb_q_io_deq_bits_status_sxl),	// @[DMA.scala:230:23]
    .io_enq_bits_status_uxl     (_tlb_q_io_deq_bits_status_uxl),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sd_rv32 (_tlb_q_io_deq_bits_status_sd_rv32),	// @[DMA.scala:230:23]
    .io_enq_bits_status_zero1   (_tlb_q_io_deq_bits_status_zero1),	// @[DMA.scala:230:23]
    .io_enq_bits_status_tsr     (_tlb_q_io_deq_bits_status_tsr),	// @[DMA.scala:230:23]
    .io_enq_bits_status_tw      (_tlb_q_io_deq_bits_status_tw),	// @[DMA.scala:230:23]
    .io_enq_bits_status_tvm     (_tlb_q_io_deq_bits_status_tvm),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mxr     (_tlb_q_io_deq_bits_status_mxr),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sum     (_tlb_q_io_deq_bits_status_sum),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mprv    (_tlb_q_io_deq_bits_status_mprv),	// @[DMA.scala:230:23]
    .io_enq_bits_status_xs      (_tlb_q_io_deq_bits_status_xs),	// @[DMA.scala:230:23]
    .io_enq_bits_status_fs      (_tlb_q_io_deq_bits_status_fs),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mpp     (_tlb_q_io_deq_bits_status_mpp),	// @[DMA.scala:230:23]
    .io_enq_bits_status_vs      (_tlb_q_io_deq_bits_status_vs),	// @[DMA.scala:230:23]
    .io_enq_bits_status_spp     (_tlb_q_io_deq_bits_status_spp),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mpie    (_tlb_q_io_deq_bits_status_mpie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_ube     (_tlb_q_io_deq_bits_status_ube),	// @[DMA.scala:230:23]
    .io_enq_bits_status_spie    (_tlb_q_io_deq_bits_status_spie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_upie    (_tlb_q_io_deq_bits_status_upie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_mie     (_tlb_q_io_deq_bits_status_mie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_hie     (_tlb_q_io_deq_bits_status_hie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_sie     (_tlb_q_io_deq_bits_status_sie),	// @[DMA.scala:230:23]
    .io_enq_bits_status_uie     (_tlb_q_io_deq_bits_status_uie),	// @[DMA.scala:230:23]
    .io_deq_ready               (1'h1),	// @[DMA.scala:163:98]
    .io_enq_ready               (_translate_q_io_enq_ready),
    .io_deq_valid               (_translate_q_io_deq_valid),
    .io_deq_bits_tl_a_opcode    (_translate_q_io_deq_bits_tl_a_opcode),
    .io_deq_bits_tl_a_param     (_translate_q_io_deq_bits_tl_a_param),
    .io_deq_bits_tl_a_size      (_translate_q_io_deq_bits_tl_a_size),
    .io_deq_bits_tl_a_source    (_translate_q_io_deq_bits_tl_a_source),
    .io_deq_bits_tl_a_address   (_translate_q_io_deq_bits_tl_a_address),
    .io_deq_bits_tl_a_mask      (_translate_q_io_deq_bits_tl_a_mask),
    .io_deq_bits_tl_a_data      (_translate_q_io_deq_bits_tl_a_data),
    .io_deq_bits_tl_a_corrupt   (_translate_q_io_deq_bits_tl_a_corrupt),
    .io_deq_bits_vaddr          (_translate_q_io_deq_bits_vaddr),
    .io_deq_bits_status_debug   (_translate_q_io_deq_bits_status_debug),
    .io_deq_bits_status_cease   (_translate_q_io_deq_bits_status_cease),
    .io_deq_bits_status_wfi     (_translate_q_io_deq_bits_status_wfi),
    .io_deq_bits_status_isa     (_translate_q_io_deq_bits_status_isa),
    .io_deq_bits_status_dprv    (_translate_q_io_deq_bits_status_dprv),
    .io_deq_bits_status_dv      (_translate_q_io_deq_bits_status_dv),
    .io_deq_bits_status_prv     (_translate_q_io_deq_bits_status_prv),
    .io_deq_bits_status_v       (_translate_q_io_deq_bits_status_v),
    .io_deq_bits_status_sd      (_translate_q_io_deq_bits_status_sd),
    .io_deq_bits_status_zero2   (_translate_q_io_deq_bits_status_zero2),
    .io_deq_bits_status_mpv     (_translate_q_io_deq_bits_status_mpv),
    .io_deq_bits_status_gva     (_translate_q_io_deq_bits_status_gva),
    .io_deq_bits_status_mbe     (_translate_q_io_deq_bits_status_mbe),
    .io_deq_bits_status_sbe     (_translate_q_io_deq_bits_status_sbe),
    .io_deq_bits_status_sxl     (_translate_q_io_deq_bits_status_sxl),
    .io_deq_bits_status_uxl     (_translate_q_io_deq_bits_status_uxl),
    .io_deq_bits_status_sd_rv32 (_translate_q_io_deq_bits_status_sd_rv32),
    .io_deq_bits_status_zero1   (_translate_q_io_deq_bits_status_zero1),
    .io_deq_bits_status_tsr     (_translate_q_io_deq_bits_status_tsr),
    .io_deq_bits_status_tw      (_translate_q_io_deq_bits_status_tw),
    .io_deq_bits_status_tvm     (_translate_q_io_deq_bits_status_tvm),
    .io_deq_bits_status_mxr     (_translate_q_io_deq_bits_status_mxr),
    .io_deq_bits_status_sum     (_translate_q_io_deq_bits_status_sum),
    .io_deq_bits_status_mprv    (_translate_q_io_deq_bits_status_mprv),
    .io_deq_bits_status_xs      (_translate_q_io_deq_bits_status_xs),
    .io_deq_bits_status_fs      (_translate_q_io_deq_bits_status_fs),
    .io_deq_bits_status_mpp     (_translate_q_io_deq_bits_status_mpp),
    .io_deq_bits_status_vs      (_translate_q_io_deq_bits_status_vs),
    .io_deq_bits_status_spp     (_translate_q_io_deq_bits_status_spp),
    .io_deq_bits_status_mpie    (_translate_q_io_deq_bits_status_mpie),
    .io_deq_bits_status_ube     (_translate_q_io_deq_bits_status_ube),
    .io_deq_bits_status_spie    (_translate_q_io_deq_bits_status_spie),
    .io_deq_bits_status_upie    (_translate_q_io_deq_bits_status_upie),
    .io_deq_bits_status_mie     (_translate_q_io_deq_bits_status_mie),
    .io_deq_bits_status_hie     (_translate_q_io_deq_bits_status_hie),
    .io_deq_bits_status_sie     (_translate_q_io_deq_bits_status_sie),
    .io_deq_bits_status_uie     (_translate_q_io_deq_bits_status_uie)
  );
  assign auto_out_a_valid = tl_a_valid;	// @[DMA.scala:248:44]
  assign auto_out_a_bits_opcode = _translate_q_io_deq_bits_tl_a_opcode;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_param = _translate_q_io_deq_bits_tl_a_param;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_size = _translate_q_io_deq_bits_tl_a_size;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_source = _translate_q_io_deq_bits_tl_a_source;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_address = io_tlb_resp_paddr;
  assign auto_out_a_bits_mask = _translate_q_io_deq_bits_tl_a_mask;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_data = _translate_q_io_deq_bits_tl_a_data;	// @[DMA.scala:240:29]
  assign auto_out_a_bits_corrupt = _translate_q_io_deq_bits_tl_a_corrupt;	// @[DMA.scala:240:29]
  assign auto_out_d_ready = io_beatData_ready;
  assign io_req_ready = state_machine_ready_for_req;	// @[DMA.scala:165:47, :275:32, :283:43, :285:37]
  assign io_reserve_valid = state & _tlb_arb_io_in_1_ready;	// @[DMA.scala:157:24, :226:25, :252:51]
  assign io_reserve_entry_shift = _read_packet_T_2 ? req_vaddr[5:0] : _read_packet_T ? {1'h0, req_vaddr[4:0]} : {2'h0, req_vaddr[3:0]};	// @[DMA.scala:159:18, :163:24, :186:42, :191:38, :192:20, :198:{10,24}]
  assign io_reserve_entry_addr = req_spaddr + req_block_stride[13:0] * {8'h0, req_has_acc_bitwidth ? 6'h0 : bytesRequested / 6'h10};	// @[Cat.scala:33:92, DMA.scala:159:18, :162:29, :266:{41,60}, :267:10, :272:81, Edges.scala:228:27]
  assign io_reserve_entry_is_acc = req_is_acc;	// @[DMA.scala:159:18]
  assign io_reserve_entry_accumulate = req_accumulate;	// @[DMA.scala:159:18]
  assign io_reserve_entry_has_acc_bitwidth = req_has_acc_bitwidth;	// @[DMA.scala:159:18]
  assign io_reserve_entry_scale = req_scale;	// @[DMA.scala:159:18]
  assign io_reserve_entry_repeats = req_repeats;	// @[DMA.scala:159:18]
  assign io_reserve_entry_pixel_repeats = req_pixel_repeats;	// @[DMA.scala:159:18]
  assign io_reserve_entry_len = req_len;	// @[DMA.scala:159:18]
  assign io_reserve_entry_block_stride = req_block_stride;	// @[DMA.scala:159:18]
  assign io_reserve_entry_spad_row_offset = {3'h0, req_has_acc_bitwidth ? _io_reserve_entry_spad_row_offset_T[5:0] : {1'h0, _io_reserve_entry_spad_row_offset_T_1[4:0]}};	// @[DMA.scala:159:18, :163:55, :273:{38,44,82,116}]
  assign io_reserve_entry_bytes_to_read = read_packet_bytes_read;	// @[DMA.scala:198:10]
  assign io_reserve_entry_cmd_id = req_cmd_id[0];	// @[DMA.scala:159:18, :264:29]
  assign io_beatData_valid = auto_out_d_valid;
  assign io_beatData_bits_xactid = auto_out_d_bits_source;
  assign io_beatData_bits_data = auto_out_d_bits_data;
  assign io_beatData_bits_lg_len_req = auto_out_d_bits_size[2:0];	// @[DMA.scala:295:33]
  assign io_beatData_bits_last = io_beatData_bits_last_counter == 8'h1 | (auto_out_d_bits_opcode[0] ? ~(_io_beatData_bits_last_beats1_decode_T_1[11:4]) : 8'h0) == 8'h0;	// @[Edges.scala:105:36, :220:14, :228:27, :231:{25,37,47}, package.scala:235:{46,71,76}]
  assign io_tlb_req_valid = _tlb_q_io_deq_valid;	// @[DMA.scala:230:23]
  assign io_tlb_req_bits_tlb_req_vaddr = {1'h0, _tlb_q_io_deq_bits_vaddr};	// @[DMA.scala:230:23, :234:35]
  assign io_tlb_req_bits_status_debug = _tlb_q_io_deq_bits_status_debug;	// @[DMA.scala:230:23]
  assign io_tlb_req_bits_status_mxr = _tlb_q_io_deq_bits_status_mxr;	// @[DMA.scala:230:23]
  assign io_tlb_req_bits_status_sum = _tlb_q_io_deq_bits_status_sum;	// @[DMA.scala:230:23]
  assign io_counter_event_signal_18 = state;	// @[DMA.scala:157:24]
  assign io_counter_event_signal_19 = io_tlb_resp_miss;
  assign io_counter_event_signal_20 = tl_a_valid & ~auto_out_a_ready;	// @[DMA.scala:244:71, :248:44, :311:80]
  assign io_counter_external_values_4 = total_bytes_read;	// @[DMA.scala:314:35]
endmodule

