// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VectorScalarMultiplier_1(
  input         clock,
                reset,
                io_req_valid,
  input  [31:0] io_req_bits_in_0,
                io_req_bits_in_1,
                io_req_bits_in_2,
                io_req_bits_in_3,
                io_req_bits_in_4,
                io_req_bits_in_5,
                io_req_bits_in_6,
                io_req_bits_in_7,
                io_req_bits_in_8,
                io_req_bits_in_9,
                io_req_bits_in_10,
                io_req_bits_in_11,
                io_req_bits_in_12,
                io_req_bits_in_13,
                io_req_bits_in_14,
                io_req_bits_in_15,
  input  [15:0] io_req_bits_repeats,
  input         io_req_bits_last,
  input  [13:0] io_req_bits_tag_addr,
  input         io_req_bits_tag_mask_0,
                io_req_bits_tag_mask_1,
                io_req_bits_tag_mask_2,
                io_req_bits_tag_mask_3,
                io_req_bits_tag_mask_4,
                io_req_bits_tag_mask_5,
                io_req_bits_tag_mask_6,
                io_req_bits_tag_mask_7,
                io_req_bits_tag_mask_8,
                io_req_bits_tag_mask_9,
                io_req_bits_tag_mask_10,
                io_req_bits_tag_mask_11,
                io_req_bits_tag_mask_12,
                io_req_bits_tag_mask_13,
                io_req_bits_tag_mask_14,
                io_req_bits_tag_mask_15,
                io_req_bits_tag_mask_16,
                io_req_bits_tag_mask_17,
                io_req_bits_tag_mask_18,
                io_req_bits_tag_mask_19,
                io_req_bits_tag_mask_20,
                io_req_bits_tag_mask_21,
                io_req_bits_tag_mask_22,
                io_req_bits_tag_mask_23,
                io_req_bits_tag_mask_24,
                io_req_bits_tag_mask_25,
                io_req_bits_tag_mask_26,
                io_req_bits_tag_mask_27,
                io_req_bits_tag_mask_28,
                io_req_bits_tag_mask_29,
                io_req_bits_tag_mask_30,
                io_req_bits_tag_mask_31,
                io_req_bits_tag_mask_32,
                io_req_bits_tag_mask_33,
                io_req_bits_tag_mask_34,
                io_req_bits_tag_mask_35,
                io_req_bits_tag_mask_36,
                io_req_bits_tag_mask_37,
                io_req_bits_tag_mask_38,
                io_req_bits_tag_mask_39,
                io_req_bits_tag_mask_40,
                io_req_bits_tag_mask_41,
                io_req_bits_tag_mask_42,
                io_req_bits_tag_mask_43,
                io_req_bits_tag_mask_44,
                io_req_bits_tag_mask_45,
                io_req_bits_tag_mask_46,
                io_req_bits_tag_mask_47,
                io_req_bits_tag_mask_48,
                io_req_bits_tag_mask_49,
                io_req_bits_tag_mask_50,
                io_req_bits_tag_mask_51,
                io_req_bits_tag_mask_52,
                io_req_bits_tag_mask_53,
                io_req_bits_tag_mask_54,
                io_req_bits_tag_mask_55,
                io_req_bits_tag_mask_56,
                io_req_bits_tag_mask_57,
                io_req_bits_tag_mask_58,
                io_req_bits_tag_mask_59,
                io_req_bits_tag_mask_60,
                io_req_bits_tag_mask_61,
                io_req_bits_tag_mask_62,
                io_req_bits_tag_mask_63,
                io_req_bits_tag_is_acc,
                io_req_bits_tag_accumulate,
  input  [7:0]  io_req_bits_tag_bytes_read,
                io_req_bits_tag_cmd_id,
  input         io_resp_ready,
  output        io_req_ready,
                io_resp_valid,
  output [31:0] io_resp_bits_out_0,
                io_resp_bits_out_1,
                io_resp_bits_out_2,
                io_resp_bits_out_3,
                io_resp_bits_out_4,
                io_resp_bits_out_5,
                io_resp_bits_out_6,
                io_resp_bits_out_7,
                io_resp_bits_out_8,
                io_resp_bits_out_9,
                io_resp_bits_out_10,
                io_resp_bits_out_11,
                io_resp_bits_out_12,
                io_resp_bits_out_13,
                io_resp_bits_out_14,
                io_resp_bits_out_15,
  output [15:0] io_resp_bits_row,
  output        io_resp_bits_last,
  output [13:0] io_resp_bits_tag_addr,
  output        io_resp_bits_tag_mask_0,
                io_resp_bits_tag_mask_1,
                io_resp_bits_tag_mask_2,
                io_resp_bits_tag_mask_3,
                io_resp_bits_tag_mask_4,
                io_resp_bits_tag_mask_5,
                io_resp_bits_tag_mask_6,
                io_resp_bits_tag_mask_7,
                io_resp_bits_tag_mask_8,
                io_resp_bits_tag_mask_9,
                io_resp_bits_tag_mask_10,
                io_resp_bits_tag_mask_11,
                io_resp_bits_tag_mask_12,
                io_resp_bits_tag_mask_13,
                io_resp_bits_tag_mask_14,
                io_resp_bits_tag_mask_15,
                io_resp_bits_tag_mask_16,
                io_resp_bits_tag_mask_17,
                io_resp_bits_tag_mask_18,
                io_resp_bits_tag_mask_19,
                io_resp_bits_tag_mask_20,
                io_resp_bits_tag_mask_21,
                io_resp_bits_tag_mask_22,
                io_resp_bits_tag_mask_23,
                io_resp_bits_tag_mask_24,
                io_resp_bits_tag_mask_25,
                io_resp_bits_tag_mask_26,
                io_resp_bits_tag_mask_27,
                io_resp_bits_tag_mask_28,
                io_resp_bits_tag_mask_29,
                io_resp_bits_tag_mask_30,
                io_resp_bits_tag_mask_31,
                io_resp_bits_tag_mask_32,
                io_resp_bits_tag_mask_33,
                io_resp_bits_tag_mask_34,
                io_resp_bits_tag_mask_35,
                io_resp_bits_tag_mask_36,
                io_resp_bits_tag_mask_37,
                io_resp_bits_tag_mask_38,
                io_resp_bits_tag_mask_39,
                io_resp_bits_tag_mask_40,
                io_resp_bits_tag_mask_41,
                io_resp_bits_tag_mask_42,
                io_resp_bits_tag_mask_43,
                io_resp_bits_tag_mask_44,
                io_resp_bits_tag_mask_45,
                io_resp_bits_tag_mask_46,
                io_resp_bits_tag_mask_47,
                io_resp_bits_tag_mask_48,
                io_resp_bits_tag_mask_49,
                io_resp_bits_tag_mask_50,
                io_resp_bits_tag_mask_51,
                io_resp_bits_tag_mask_52,
                io_resp_bits_tag_mask_53,
                io_resp_bits_tag_mask_54,
                io_resp_bits_tag_mask_55,
                io_resp_bits_tag_mask_56,
                io_resp_bits_tag_mask_57,
                io_resp_bits_tag_mask_58,
                io_resp_bits_tag_mask_59,
                io_resp_bits_tag_mask_60,
                io_resp_bits_tag_mask_61,
                io_resp_bits_tag_mask_62,
                io_resp_bits_tag_mask_63,
                io_resp_bits_tag_is_acc,
                io_resp_bits_tag_accumulate,
  output [7:0]  io_resp_bits_tag_bytes_read,
                io_resp_bits_tag_cmd_id
);

  wire        in_fire;	// @[Decoupled.scala:51:35]
  wire        _pipe_io_in_ready;	// @[VectorScalarMultiplier.scala:83:22]
  reg         in_valid;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [15:0] in_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_last;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [13:0] in_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_16;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_17;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_18;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_19;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_20;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_21;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_22;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_23;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_24;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_25;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_26;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_27;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_28;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_29;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_30;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_31;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_32;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_33;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_34;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_35;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_36;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_37;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_38;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_39;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_40;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_41;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_42;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_43;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_44;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_45;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_46;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_47;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_48;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_49;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_50;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_51;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_52;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_53;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_54;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_55;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_56;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_57;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_58;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_59;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_60;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_61;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_62;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_63;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15]
  wire        _pipe_io_in_bits_last_T = in_bits_repeats == 16'h0;	// @[VectorScalarMultiplier.scala:65:15, :67:49]
  wire        _io_req_ready_output = ~in_valid | _pipe_io_in_bits_last_T & in_fire;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:65:15, :67:{19,29,49,57}]
  assign in_fire = _pipe_io_in_ready & in_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:65:15, :83:22]
  wire        _T = _io_req_ready_output & io_req_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:67:29]
  always @(posedge clock) begin
    if (reset)
      in_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15]
    else if (_T)	// @[Decoupled.scala:51:35]
      in_valid <= io_req_valid;	// @[VectorScalarMultiplier.scala:65:15]
    else	// @[Decoupled.scala:51:35]
      in_valid <= ~(in_fire & _pipe_io_in_bits_last_T) & in_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:65:15, :67:49, :72:25, :73:36, :74:16]
    if (_T) begin	// @[Decoupled.scala:51:35]
      in_bits_in_0 <= io_req_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_1 <= io_req_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_2 <= io_req_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_3 <= io_req_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_4 <= io_req_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_5 <= io_req_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_6 <= io_req_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_7 <= io_req_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_8 <= io_req_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_9 <= io_req_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_10 <= io_req_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_11 <= io_req_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_12 <= io_req_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_13 <= io_req_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_14 <= io_req_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_15 <= io_req_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_repeats <= io_req_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_last <= io_req_bits_last;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_addr <= io_req_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_0 <= io_req_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_1 <= io_req_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_2 <= io_req_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_3 <= io_req_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_4 <= io_req_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_5 <= io_req_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_6 <= io_req_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_7 <= io_req_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_8 <= io_req_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_9 <= io_req_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_10 <= io_req_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_11 <= io_req_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_12 <= io_req_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_13 <= io_req_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_14 <= io_req_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_15 <= io_req_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_16 <= io_req_bits_tag_mask_16;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_17 <= io_req_bits_tag_mask_17;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_18 <= io_req_bits_tag_mask_18;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_19 <= io_req_bits_tag_mask_19;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_20 <= io_req_bits_tag_mask_20;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_21 <= io_req_bits_tag_mask_21;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_22 <= io_req_bits_tag_mask_22;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_23 <= io_req_bits_tag_mask_23;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_24 <= io_req_bits_tag_mask_24;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_25 <= io_req_bits_tag_mask_25;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_26 <= io_req_bits_tag_mask_26;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_27 <= io_req_bits_tag_mask_27;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_28 <= io_req_bits_tag_mask_28;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_29 <= io_req_bits_tag_mask_29;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_30 <= io_req_bits_tag_mask_30;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_31 <= io_req_bits_tag_mask_31;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_32 <= io_req_bits_tag_mask_32;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_33 <= io_req_bits_tag_mask_33;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_34 <= io_req_bits_tag_mask_34;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_35 <= io_req_bits_tag_mask_35;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_36 <= io_req_bits_tag_mask_36;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_37 <= io_req_bits_tag_mask_37;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_38 <= io_req_bits_tag_mask_38;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_39 <= io_req_bits_tag_mask_39;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_40 <= io_req_bits_tag_mask_40;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_41 <= io_req_bits_tag_mask_41;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_42 <= io_req_bits_tag_mask_42;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_43 <= io_req_bits_tag_mask_43;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_44 <= io_req_bits_tag_mask_44;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_45 <= io_req_bits_tag_mask_45;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_46 <= io_req_bits_tag_mask_46;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_47 <= io_req_bits_tag_mask_47;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_48 <= io_req_bits_tag_mask_48;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_49 <= io_req_bits_tag_mask_49;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_50 <= io_req_bits_tag_mask_50;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_51 <= io_req_bits_tag_mask_51;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_52 <= io_req_bits_tag_mask_52;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_53 <= io_req_bits_tag_mask_53;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_54 <= io_req_bits_tag_mask_54;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_55 <= io_req_bits_tag_mask_55;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_56 <= io_req_bits_tag_mask_56;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_57 <= io_req_bits_tag_mask_57;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_58 <= io_req_bits_tag_mask_58;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_59 <= io_req_bits_tag_mask_59;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_60 <= io_req_bits_tag_mask_60;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_61 <= io_req_bits_tag_mask_61;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_62 <= io_req_bits_tag_mask_62;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_63 <= io_req_bits_tag_mask_63;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_is_acc <= io_req_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_accumulate <= io_req_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_bytes_read <= io_req_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_cmd_id <= io_req_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15]
    end
    else if (in_fire)	// @[Decoupled.scala:51:35]
      in_bits_repeats <= in_bits_repeats - 16'h1;	// @[VectorScalarMultiplier.scala:65:15, :76:40]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        in_valid = _RANDOM_0[0];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_0 = {_RANDOM_0[31:1], _RANDOM_1[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_1 = {_RANDOM_1[31:1], _RANDOM_2[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_2 = {_RANDOM_2[31:1], _RANDOM_3[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_3 = {_RANDOM_3[31:1], _RANDOM_4[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_4 = {_RANDOM_4[31:1], _RANDOM_5[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_5 = {_RANDOM_5[31:1], _RANDOM_6[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_6 = {_RANDOM_6[31:1], _RANDOM_7[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_7 = {_RANDOM_7[31:1], _RANDOM_8[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_8 = {_RANDOM_8[31:1], _RANDOM_9[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_9 = {_RANDOM_9[31:1], _RANDOM_10[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_10 = {_RANDOM_10[31:1], _RANDOM_11[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_11 = {_RANDOM_11[31:1], _RANDOM_12[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_12 = {_RANDOM_12[31:1], _RANDOM_13[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_13 = {_RANDOM_13[31:1], _RANDOM_14[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_14 = {_RANDOM_14[31:1], _RANDOM_15[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_15 = {_RANDOM_15[31:1], _RANDOM_16[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_repeats = _RANDOM_16[17:2];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_last = _RANDOM_16[26];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_addr = {_RANDOM_32[31:27], _RANDOM_33[8:0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_0 = _RANDOM_33[9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_1 = _RANDOM_33[10];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_2 = _RANDOM_33[11];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_3 = _RANDOM_33[12];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_4 = _RANDOM_33[13];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_5 = _RANDOM_33[14];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_6 = _RANDOM_33[15];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_7 = _RANDOM_33[16];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_8 = _RANDOM_33[17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_9 = _RANDOM_33[18];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_10 = _RANDOM_33[19];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_11 = _RANDOM_33[20];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_12 = _RANDOM_33[21];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_13 = _RANDOM_33[22];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_14 = _RANDOM_33[23];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_15 = _RANDOM_33[24];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_16 = _RANDOM_33[25];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_17 = _RANDOM_33[26];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_18 = _RANDOM_33[27];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_19 = _RANDOM_33[28];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_20 = _RANDOM_33[29];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_21 = _RANDOM_33[30];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_22 = _RANDOM_33[31];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_23 = _RANDOM_34[0];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_24 = _RANDOM_34[1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_25 = _RANDOM_34[2];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_26 = _RANDOM_34[3];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_27 = _RANDOM_34[4];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_28 = _RANDOM_34[5];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_29 = _RANDOM_34[6];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_30 = _RANDOM_34[7];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_31 = _RANDOM_34[8];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_32 = _RANDOM_34[9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_33 = _RANDOM_34[10];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_34 = _RANDOM_34[11];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_35 = _RANDOM_34[12];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_36 = _RANDOM_34[13];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_37 = _RANDOM_34[14];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_38 = _RANDOM_34[15];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_39 = _RANDOM_34[16];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_40 = _RANDOM_34[17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_41 = _RANDOM_34[18];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_42 = _RANDOM_34[19];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_43 = _RANDOM_34[20];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_44 = _RANDOM_34[21];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_45 = _RANDOM_34[22];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_46 = _RANDOM_34[23];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_47 = _RANDOM_34[24];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_48 = _RANDOM_34[25];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_49 = _RANDOM_34[26];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_50 = _RANDOM_34[27];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_51 = _RANDOM_34[28];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_52 = _RANDOM_34[29];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_53 = _RANDOM_34[30];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_54 = _RANDOM_34[31];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_55 = _RANDOM_35[0];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_56 = _RANDOM_35[1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_57 = _RANDOM_35[2];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_58 = _RANDOM_35[3];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_59 = _RANDOM_35[4];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_60 = _RANDOM_35[5];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_61 = _RANDOM_35[6];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_62 = _RANDOM_35[7];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_63 = _RANDOM_35[8];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_is_acc = _RANDOM_35[9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_accumulate = _RANDOM_35[10];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_bytes_read = {_RANDOM_37[31:29], _RANDOM_38[4:0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_cmd_id = _RANDOM_38[12:5];	// @[VectorScalarMultiplier.scala:65:15]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Pipeline pipe (	// @[VectorScalarMultiplier.scala:83:22]
    .io_in_valid                (in_valid),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_0           (in_bits_in_0),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_1           (in_bits_in_1),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_2           (in_bits_in_2),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_3           (in_bits_in_3),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_4           (in_bits_in_4),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_5           (in_bits_in_5),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_6           (in_bits_in_6),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_7           (in_bits_in_7),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_8           (in_bits_in_8),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_9           (in_bits_in_9),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_10          (in_bits_in_10),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_11          (in_bits_in_11),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_12          (in_bits_in_12),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_13          (in_bits_in_13),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_14          (in_bits_in_14),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_out_15          (in_bits_in_15),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_row             (in_bits_repeats),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_last            (_pipe_io_in_bits_last_T & in_bits_last),	// @[VectorScalarMultiplier.scala:65:15, :67:49, :92:53]
    .io_in_bits_tag_addr        (in_bits_tag_addr),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_0      (in_bits_tag_mask_0),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_1      (in_bits_tag_mask_1),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_2      (in_bits_tag_mask_2),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_3      (in_bits_tag_mask_3),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_4      (in_bits_tag_mask_4),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_5      (in_bits_tag_mask_5),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_6      (in_bits_tag_mask_6),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_7      (in_bits_tag_mask_7),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_8      (in_bits_tag_mask_8),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_9      (in_bits_tag_mask_9),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_10     (in_bits_tag_mask_10),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_11     (in_bits_tag_mask_11),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_12     (in_bits_tag_mask_12),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_13     (in_bits_tag_mask_13),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_14     (in_bits_tag_mask_14),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_15     (in_bits_tag_mask_15),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_16     (in_bits_tag_mask_16),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_17     (in_bits_tag_mask_17),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_18     (in_bits_tag_mask_18),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_19     (in_bits_tag_mask_19),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_20     (in_bits_tag_mask_20),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_21     (in_bits_tag_mask_21),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_22     (in_bits_tag_mask_22),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_23     (in_bits_tag_mask_23),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_24     (in_bits_tag_mask_24),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_25     (in_bits_tag_mask_25),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_26     (in_bits_tag_mask_26),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_27     (in_bits_tag_mask_27),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_28     (in_bits_tag_mask_28),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_29     (in_bits_tag_mask_29),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_30     (in_bits_tag_mask_30),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_31     (in_bits_tag_mask_31),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_32     (in_bits_tag_mask_32),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_33     (in_bits_tag_mask_33),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_34     (in_bits_tag_mask_34),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_35     (in_bits_tag_mask_35),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_36     (in_bits_tag_mask_36),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_37     (in_bits_tag_mask_37),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_38     (in_bits_tag_mask_38),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_39     (in_bits_tag_mask_39),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_40     (in_bits_tag_mask_40),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_41     (in_bits_tag_mask_41),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_42     (in_bits_tag_mask_42),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_43     (in_bits_tag_mask_43),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_44     (in_bits_tag_mask_44),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_45     (in_bits_tag_mask_45),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_46     (in_bits_tag_mask_46),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_47     (in_bits_tag_mask_47),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_48     (in_bits_tag_mask_48),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_49     (in_bits_tag_mask_49),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_50     (in_bits_tag_mask_50),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_51     (in_bits_tag_mask_51),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_52     (in_bits_tag_mask_52),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_53     (in_bits_tag_mask_53),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_54     (in_bits_tag_mask_54),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_55     (in_bits_tag_mask_55),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_56     (in_bits_tag_mask_56),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_57     (in_bits_tag_mask_57),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_58     (in_bits_tag_mask_58),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_59     (in_bits_tag_mask_59),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_60     (in_bits_tag_mask_60),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_61     (in_bits_tag_mask_61),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_62     (in_bits_tag_mask_62),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_mask_63     (in_bits_tag_mask_63),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_is_acc      (in_bits_tag_is_acc),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_accumulate  (in_bits_tag_accumulate),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_bytes_read  (in_bits_tag_bytes_read),	// @[VectorScalarMultiplier.scala:65:15]
    .io_in_bits_tag_cmd_id      (in_bits_tag_cmd_id),	// @[VectorScalarMultiplier.scala:65:15]
    .io_out_ready               (io_resp_ready),
    .io_in_ready                (_pipe_io_in_ready),
    .io_out_valid               (io_resp_valid),
    .io_out_bits_out_0          (io_resp_bits_out_0),
    .io_out_bits_out_1          (io_resp_bits_out_1),
    .io_out_bits_out_2          (io_resp_bits_out_2),
    .io_out_bits_out_3          (io_resp_bits_out_3),
    .io_out_bits_out_4          (io_resp_bits_out_4),
    .io_out_bits_out_5          (io_resp_bits_out_5),
    .io_out_bits_out_6          (io_resp_bits_out_6),
    .io_out_bits_out_7          (io_resp_bits_out_7),
    .io_out_bits_out_8          (io_resp_bits_out_8),
    .io_out_bits_out_9          (io_resp_bits_out_9),
    .io_out_bits_out_10         (io_resp_bits_out_10),
    .io_out_bits_out_11         (io_resp_bits_out_11),
    .io_out_bits_out_12         (io_resp_bits_out_12),
    .io_out_bits_out_13         (io_resp_bits_out_13),
    .io_out_bits_out_14         (io_resp_bits_out_14),
    .io_out_bits_out_15         (io_resp_bits_out_15),
    .io_out_bits_row            (io_resp_bits_row),
    .io_out_bits_last           (io_resp_bits_last),
    .io_out_bits_tag_addr       (io_resp_bits_tag_addr),
    .io_out_bits_tag_mask_0     (io_resp_bits_tag_mask_0),
    .io_out_bits_tag_mask_1     (io_resp_bits_tag_mask_1),
    .io_out_bits_tag_mask_2     (io_resp_bits_tag_mask_2),
    .io_out_bits_tag_mask_3     (io_resp_bits_tag_mask_3),
    .io_out_bits_tag_mask_4     (io_resp_bits_tag_mask_4),
    .io_out_bits_tag_mask_5     (io_resp_bits_tag_mask_5),
    .io_out_bits_tag_mask_6     (io_resp_bits_tag_mask_6),
    .io_out_bits_tag_mask_7     (io_resp_bits_tag_mask_7),
    .io_out_bits_tag_mask_8     (io_resp_bits_tag_mask_8),
    .io_out_bits_tag_mask_9     (io_resp_bits_tag_mask_9),
    .io_out_bits_tag_mask_10    (io_resp_bits_tag_mask_10),
    .io_out_bits_tag_mask_11    (io_resp_bits_tag_mask_11),
    .io_out_bits_tag_mask_12    (io_resp_bits_tag_mask_12),
    .io_out_bits_tag_mask_13    (io_resp_bits_tag_mask_13),
    .io_out_bits_tag_mask_14    (io_resp_bits_tag_mask_14),
    .io_out_bits_tag_mask_15    (io_resp_bits_tag_mask_15),
    .io_out_bits_tag_mask_16    (io_resp_bits_tag_mask_16),
    .io_out_bits_tag_mask_17    (io_resp_bits_tag_mask_17),
    .io_out_bits_tag_mask_18    (io_resp_bits_tag_mask_18),
    .io_out_bits_tag_mask_19    (io_resp_bits_tag_mask_19),
    .io_out_bits_tag_mask_20    (io_resp_bits_tag_mask_20),
    .io_out_bits_tag_mask_21    (io_resp_bits_tag_mask_21),
    .io_out_bits_tag_mask_22    (io_resp_bits_tag_mask_22),
    .io_out_bits_tag_mask_23    (io_resp_bits_tag_mask_23),
    .io_out_bits_tag_mask_24    (io_resp_bits_tag_mask_24),
    .io_out_bits_tag_mask_25    (io_resp_bits_tag_mask_25),
    .io_out_bits_tag_mask_26    (io_resp_bits_tag_mask_26),
    .io_out_bits_tag_mask_27    (io_resp_bits_tag_mask_27),
    .io_out_bits_tag_mask_28    (io_resp_bits_tag_mask_28),
    .io_out_bits_tag_mask_29    (io_resp_bits_tag_mask_29),
    .io_out_bits_tag_mask_30    (io_resp_bits_tag_mask_30),
    .io_out_bits_tag_mask_31    (io_resp_bits_tag_mask_31),
    .io_out_bits_tag_mask_32    (io_resp_bits_tag_mask_32),
    .io_out_bits_tag_mask_33    (io_resp_bits_tag_mask_33),
    .io_out_bits_tag_mask_34    (io_resp_bits_tag_mask_34),
    .io_out_bits_tag_mask_35    (io_resp_bits_tag_mask_35),
    .io_out_bits_tag_mask_36    (io_resp_bits_tag_mask_36),
    .io_out_bits_tag_mask_37    (io_resp_bits_tag_mask_37),
    .io_out_bits_tag_mask_38    (io_resp_bits_tag_mask_38),
    .io_out_bits_tag_mask_39    (io_resp_bits_tag_mask_39),
    .io_out_bits_tag_mask_40    (io_resp_bits_tag_mask_40),
    .io_out_bits_tag_mask_41    (io_resp_bits_tag_mask_41),
    .io_out_bits_tag_mask_42    (io_resp_bits_tag_mask_42),
    .io_out_bits_tag_mask_43    (io_resp_bits_tag_mask_43),
    .io_out_bits_tag_mask_44    (io_resp_bits_tag_mask_44),
    .io_out_bits_tag_mask_45    (io_resp_bits_tag_mask_45),
    .io_out_bits_tag_mask_46    (io_resp_bits_tag_mask_46),
    .io_out_bits_tag_mask_47    (io_resp_bits_tag_mask_47),
    .io_out_bits_tag_mask_48    (io_resp_bits_tag_mask_48),
    .io_out_bits_tag_mask_49    (io_resp_bits_tag_mask_49),
    .io_out_bits_tag_mask_50    (io_resp_bits_tag_mask_50),
    .io_out_bits_tag_mask_51    (io_resp_bits_tag_mask_51),
    .io_out_bits_tag_mask_52    (io_resp_bits_tag_mask_52),
    .io_out_bits_tag_mask_53    (io_resp_bits_tag_mask_53),
    .io_out_bits_tag_mask_54    (io_resp_bits_tag_mask_54),
    .io_out_bits_tag_mask_55    (io_resp_bits_tag_mask_55),
    .io_out_bits_tag_mask_56    (io_resp_bits_tag_mask_56),
    .io_out_bits_tag_mask_57    (io_resp_bits_tag_mask_57),
    .io_out_bits_tag_mask_58    (io_resp_bits_tag_mask_58),
    .io_out_bits_tag_mask_59    (io_resp_bits_tag_mask_59),
    .io_out_bits_tag_mask_60    (io_resp_bits_tag_mask_60),
    .io_out_bits_tag_mask_61    (io_resp_bits_tag_mask_61),
    .io_out_bits_tag_mask_62    (io_resp_bits_tag_mask_62),
    .io_out_bits_tag_mask_63    (io_resp_bits_tag_mask_63),
    .io_out_bits_tag_is_acc     (io_resp_bits_tag_is_acc),
    .io_out_bits_tag_accumulate (io_resp_bits_tag_accumulate),
    .io_out_bits_tag_bytes_read (io_resp_bits_tag_bytes_read),
    .io_out_bits_tag_cmd_id     (io_resp_bits_tag_cmd_id)
  );
  assign io_req_ready = _io_req_ready_output;	// @[VectorScalarMultiplier.scala:67:29]
endmodule

