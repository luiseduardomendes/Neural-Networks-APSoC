// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module RoccCommandRouter(
  input         clock,
                reset,
                io_in_valid,
  input  [6:0]  io_in_bits_inst_funct,
  input  [4:0]  io_in_bits_inst_rs2,
                io_in_bits_inst_rs1,
  input         io_in_bits_inst_xd,
                io_in_bits_inst_xs1,
                io_in_bits_inst_xs2,
  input  [4:0]  io_in_bits_inst_rd,
  input  [6:0]  io_in_bits_inst_opcode,
  input  [63:0] io_in_bits_rs1,
                io_in_bits_rs2,
  input         io_in_bits_status_debug,
                io_in_bits_status_cease,
                io_in_bits_status_wfi,
  input  [31:0] io_in_bits_status_isa,
  input  [1:0]  io_in_bits_status_dprv,
                io_in_bits_status_prv,
  input         io_in_bits_status_gva,
                io_in_bits_status_tsr,
                io_in_bits_status_tw,
                io_in_bits_status_tvm,
                io_in_bits_status_mxr,
                io_in_bits_status_sum,
                io_in_bits_status_mprv,
  input  [1:0]  io_in_bits_status_fs,
                io_in_bits_status_mpp,
  input         io_in_bits_status_spp,
                io_in_bits_status_mpie,
                io_in_bits_status_spie,
                io_in_bits_status_mie,
                io_in_bits_status_sie,
                io_out_0_ready,
  output        io_in_ready,
                io_out_0_valid,
  output [6:0]  io_out_0_bits_inst_funct,
  output [4:0]  io_out_0_bits_inst_rs2,
                io_out_0_bits_inst_rs1,
  output        io_out_0_bits_inst_xd,
                io_out_0_bits_inst_xs1,
                io_out_0_bits_inst_xs2,
  output [4:0]  io_out_0_bits_inst_rd,
  output [6:0]  io_out_0_bits_inst_opcode,
  output [63:0] io_out_0_bits_rs1,
                io_out_0_bits_rs2,
  output        io_out_0_bits_status_debug,
                io_out_0_bits_status_cease,
                io_out_0_bits_status_wfi,
  output [31:0] io_out_0_bits_status_isa,
  output [1:0]  io_out_0_bits_status_dprv,
  output        io_out_0_bits_status_dv,
  output [1:0]  io_out_0_bits_status_prv,
  output        io_out_0_bits_status_v,
                io_out_0_bits_status_sd,
  output [22:0] io_out_0_bits_status_zero2,
  output        io_out_0_bits_status_mpv,
                io_out_0_bits_status_gva,
                io_out_0_bits_status_mbe,
                io_out_0_bits_status_sbe,
  output [1:0]  io_out_0_bits_status_sxl,
                io_out_0_bits_status_uxl,
  output        io_out_0_bits_status_sd_rv32,
  output [7:0]  io_out_0_bits_status_zero1,
  output        io_out_0_bits_status_tsr,
                io_out_0_bits_status_tw,
                io_out_0_bits_status_tvm,
                io_out_0_bits_status_mxr,
                io_out_0_bits_status_sum,
                io_out_0_bits_status_mprv,
  output [1:0]  io_out_0_bits_status_xs,
                io_out_0_bits_status_fs,
                io_out_0_bits_status_mpp,
                io_out_0_bits_status_vs,
  output        io_out_0_bits_status_spp,
                io_out_0_bits_status_mpie,
                io_out_0_bits_status_ube,
                io_out_0_bits_status_spie,
                io_out_0_bits_status_upie,
                io_out_0_bits_status_mie,
                io_out_0_bits_status_hie,
                io_out_0_bits_status_sie,
                io_out_0_bits_status_uie,
                io_busy
);

  wire       _cmd_io_deq_valid;	// @[Decoupled.scala:375:21]
  wire [6:0] _cmd_io_deq_bits_inst_opcode;	// @[Decoupled.scala:375:21]
  wire       cmdReadys_me = _cmd_io_deq_bits_inst_opcode == 7'h7B;	// @[Decoupled.scala:375:21, LazyRoCC.scala:390:41]
  Queue_100 cmd (	// @[Decoupled.scala:375:21]
    .clock                      (clock),
    .reset                      (reset),
    .io_enq_valid               (io_in_valid),
    .io_enq_bits_inst_funct     (io_in_bits_inst_funct),
    .io_enq_bits_inst_rs2       (io_in_bits_inst_rs2),
    .io_enq_bits_inst_rs1       (io_in_bits_inst_rs1),
    .io_enq_bits_inst_xd        (io_in_bits_inst_xd),
    .io_enq_bits_inst_xs1       (io_in_bits_inst_xs1),
    .io_enq_bits_inst_xs2       (io_in_bits_inst_xs2),
    .io_enq_bits_inst_rd        (io_in_bits_inst_rd),
    .io_enq_bits_inst_opcode    (io_in_bits_inst_opcode),
    .io_enq_bits_rs1            (io_in_bits_rs1),
    .io_enq_bits_rs2            (io_in_bits_rs2),
    .io_enq_bits_status_debug   (io_in_bits_status_debug),
    .io_enq_bits_status_cease   (io_in_bits_status_cease),
    .io_enq_bits_status_wfi     (io_in_bits_status_wfi),
    .io_enq_bits_status_isa     (io_in_bits_status_isa),
    .io_enq_bits_status_dprv    (io_in_bits_status_dprv),
    .io_enq_bits_status_prv     (io_in_bits_status_prv),
    .io_enq_bits_status_gva     (io_in_bits_status_gva),
    .io_enq_bits_status_tsr     (io_in_bits_status_tsr),
    .io_enq_bits_status_tw      (io_in_bits_status_tw),
    .io_enq_bits_status_tvm     (io_in_bits_status_tvm),
    .io_enq_bits_status_mxr     (io_in_bits_status_mxr),
    .io_enq_bits_status_sum     (io_in_bits_status_sum),
    .io_enq_bits_status_mprv    (io_in_bits_status_mprv),
    .io_enq_bits_status_fs      (io_in_bits_status_fs),
    .io_enq_bits_status_mpp     (io_in_bits_status_mpp),
    .io_enq_bits_status_spp     (io_in_bits_status_spp),
    .io_enq_bits_status_mpie    (io_in_bits_status_mpie),
    .io_enq_bits_status_spie    (io_in_bits_status_spie),
    .io_enq_bits_status_mie     (io_in_bits_status_mie),
    .io_enq_bits_status_sie     (io_in_bits_status_sie),
    .io_deq_ready               (io_out_0_ready & cmdReadys_me),	// @[LazyRoCC.scala:390:41, :414:15]
    .io_enq_ready               (io_in_ready),
    .io_deq_valid               (_cmd_io_deq_valid),
    .io_deq_bits_inst_funct     (io_out_0_bits_inst_funct),
    .io_deq_bits_inst_rs2       (io_out_0_bits_inst_rs2),
    .io_deq_bits_inst_rs1       (io_out_0_bits_inst_rs1),
    .io_deq_bits_inst_xd        (io_out_0_bits_inst_xd),
    .io_deq_bits_inst_xs1       (io_out_0_bits_inst_xs1),
    .io_deq_bits_inst_xs2       (io_out_0_bits_inst_xs2),
    .io_deq_bits_inst_rd        (io_out_0_bits_inst_rd),
    .io_deq_bits_inst_opcode    (_cmd_io_deq_bits_inst_opcode),
    .io_deq_bits_rs1            (io_out_0_bits_rs1),
    .io_deq_bits_rs2            (io_out_0_bits_rs2),
    .io_deq_bits_status_debug   (io_out_0_bits_status_debug),
    .io_deq_bits_status_cease   (io_out_0_bits_status_cease),
    .io_deq_bits_status_wfi     (io_out_0_bits_status_wfi),
    .io_deq_bits_status_isa     (io_out_0_bits_status_isa),
    .io_deq_bits_status_dprv    (io_out_0_bits_status_dprv),
    .io_deq_bits_status_dv      (io_out_0_bits_status_dv),
    .io_deq_bits_status_prv     (io_out_0_bits_status_prv),
    .io_deq_bits_status_v       (io_out_0_bits_status_v),
    .io_deq_bits_status_sd      (io_out_0_bits_status_sd),
    .io_deq_bits_status_zero2   (io_out_0_bits_status_zero2),
    .io_deq_bits_status_mpv     (io_out_0_bits_status_mpv),
    .io_deq_bits_status_gva     (io_out_0_bits_status_gva),
    .io_deq_bits_status_mbe     (io_out_0_bits_status_mbe),
    .io_deq_bits_status_sbe     (io_out_0_bits_status_sbe),
    .io_deq_bits_status_sxl     (io_out_0_bits_status_sxl),
    .io_deq_bits_status_uxl     (io_out_0_bits_status_uxl),
    .io_deq_bits_status_sd_rv32 (io_out_0_bits_status_sd_rv32),
    .io_deq_bits_status_zero1   (io_out_0_bits_status_zero1),
    .io_deq_bits_status_tsr     (io_out_0_bits_status_tsr),
    .io_deq_bits_status_tw      (io_out_0_bits_status_tw),
    .io_deq_bits_status_tvm     (io_out_0_bits_status_tvm),
    .io_deq_bits_status_mxr     (io_out_0_bits_status_mxr),
    .io_deq_bits_status_sum     (io_out_0_bits_status_sum),
    .io_deq_bits_status_mprv    (io_out_0_bits_status_mprv),
    .io_deq_bits_status_xs      (io_out_0_bits_status_xs),
    .io_deq_bits_status_fs      (io_out_0_bits_status_fs),
    .io_deq_bits_status_mpp     (io_out_0_bits_status_mpp),
    .io_deq_bits_status_vs      (io_out_0_bits_status_vs),
    .io_deq_bits_status_spp     (io_out_0_bits_status_spp),
    .io_deq_bits_status_mpie    (io_out_0_bits_status_mpie),
    .io_deq_bits_status_ube     (io_out_0_bits_status_ube),
    .io_deq_bits_status_spie    (io_out_0_bits_status_spie),
    .io_deq_bits_status_upie    (io_out_0_bits_status_upie),
    .io_deq_bits_status_mie     (io_out_0_bits_status_mie),
    .io_deq_bits_status_hie     (io_out_0_bits_status_hie),
    .io_deq_bits_status_sie     (io_out_0_bits_status_sie),
    .io_deq_bits_status_uie     (io_out_0_bits_status_uie)
  );
  assign io_out_0_valid = _cmd_io_deq_valid & cmdReadys_me;	// @[Decoupled.scala:375:21, LazyRoCC.scala:390:41, :412:28]
  assign io_out_0_bits_inst_opcode = _cmd_io_deq_bits_inst_opcode;	// @[Decoupled.scala:375:21]
  assign io_busy = _cmd_io_deq_valid;	// @[Decoupled.scala:375:21]
endmodule

