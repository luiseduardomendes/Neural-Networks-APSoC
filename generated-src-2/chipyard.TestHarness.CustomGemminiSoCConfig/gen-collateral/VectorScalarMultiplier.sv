// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VectorScalarMultiplier(
  input         clock,
                reset,
                io_req_valid,
  input  [7:0]  io_req_bits_in_0,
                io_req_bits_in_1,
                io_req_bits_in_2,
                io_req_bits_in_3,
                io_req_bits_in_4,
                io_req_bits_in_5,
                io_req_bits_in_6,
                io_req_bits_in_7,
                io_req_bits_in_8,
                io_req_bits_in_9,
                io_req_bits_in_10,
                io_req_bits_in_11,
                io_req_bits_in_12,
                io_req_bits_in_13,
                io_req_bits_in_14,
                io_req_bits_in_15,
  input  [31:0] io_req_bits_scale_bits,
  input  [15:0] io_req_bits_repeats,
  input         io_req_bits_last,
  input  [13:0] io_req_bits_tag_addr,
  input         io_req_bits_tag_mask_0,
                io_req_bits_tag_mask_1,
                io_req_bits_tag_mask_2,
                io_req_bits_tag_mask_3,
                io_req_bits_tag_mask_4,
                io_req_bits_tag_mask_5,
                io_req_bits_tag_mask_6,
                io_req_bits_tag_mask_7,
                io_req_bits_tag_mask_8,
                io_req_bits_tag_mask_9,
                io_req_bits_tag_mask_10,
                io_req_bits_tag_mask_11,
                io_req_bits_tag_mask_12,
                io_req_bits_tag_mask_13,
                io_req_bits_tag_mask_14,
                io_req_bits_tag_mask_15,
                io_req_bits_tag_is_acc,
                io_req_bits_tag_accumulate,
  input  [15:0] io_req_bits_tag_pixel_repeats,
                io_req_bits_tag_len,
  input  [7:0]  io_req_bits_tag_bytes_read,
                io_req_bits_tag_cmd_id,
  input         io_resp_ready,
  output        io_req_ready,
                io_resp_valid,
  output [7:0]  io_resp_bits_out_0,
                io_resp_bits_out_1,
                io_resp_bits_out_2,
                io_resp_bits_out_3,
                io_resp_bits_out_4,
                io_resp_bits_out_5,
                io_resp_bits_out_6,
                io_resp_bits_out_7,
                io_resp_bits_out_8,
                io_resp_bits_out_9,
                io_resp_bits_out_10,
                io_resp_bits_out_11,
                io_resp_bits_out_12,
                io_resp_bits_out_13,
                io_resp_bits_out_14,
                io_resp_bits_out_15,
  output [15:0] io_resp_bits_row,
  output        io_resp_bits_last,
  output [13:0] io_resp_bits_tag_addr,
  output        io_resp_bits_tag_mask_0,
                io_resp_bits_tag_mask_1,
                io_resp_bits_tag_mask_2,
                io_resp_bits_tag_mask_3,
                io_resp_bits_tag_mask_4,
                io_resp_bits_tag_mask_5,
                io_resp_bits_tag_mask_6,
                io_resp_bits_tag_mask_7,
                io_resp_bits_tag_mask_8,
                io_resp_bits_tag_mask_9,
                io_resp_bits_tag_mask_10,
                io_resp_bits_tag_mask_11,
                io_resp_bits_tag_mask_12,
                io_resp_bits_tag_mask_13,
                io_resp_bits_tag_mask_14,
                io_resp_bits_tag_mask_15,
                io_resp_bits_tag_is_acc,
                io_resp_bits_tag_accumulate,
  output [15:0] io_resp_bits_tag_pixel_repeats,
                io_resp_bits_tag_len,
  output [7:0]  io_resp_bits_tag_bytes_read,
                io_resp_bits_tag_cmd_id
);

  wire        in_fire;	// @[VectorScalarMultiplier.scala:119:26]
  wire        _pipe_3_io_out_valid;	// @[VectorScalarMultiplier.scala:170:24]
  wire [7:0]  _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:170:24]
  wire [1:0]  _pipe_3_io_out_bits_id;	// @[VectorScalarMultiplier.scala:170:24]
  wire [3:0]  _pipe_3_io_out_bits_index;	// @[VectorScalarMultiplier.scala:170:24]
  wire        _arb_3_io_in_0_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_1_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_2_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_3_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_4_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_5_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_6_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_7_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_8_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_9_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_10_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_in_11_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_3_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23]
  wire [7:0]  _arb_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23]
  wire [31:0] _arb_3_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23]
  wire [1:0]  _arb_3_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23]
  wire [3:0]  _arb_3_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _pipe_2_io_out_valid;	// @[VectorScalarMultiplier.scala:170:24]
  wire [7:0]  _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:170:24]
  wire [1:0]  _pipe_2_io_out_bits_id;	// @[VectorScalarMultiplier.scala:170:24]
  wire [3:0]  _pipe_2_io_out_bits_index;	// @[VectorScalarMultiplier.scala:170:24]
  wire        _arb_2_io_in_0_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_1_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_2_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_3_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_4_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_5_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_6_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_7_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_8_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_9_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_10_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_in_11_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_2_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23]
  wire [7:0]  _arb_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23]
  wire [31:0] _arb_2_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23]
  wire [1:0]  _arb_2_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23]
  wire [3:0]  _arb_2_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _pipe_1_io_out_valid;	// @[VectorScalarMultiplier.scala:170:24]
  wire [7:0]  _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:170:24]
  wire [1:0]  _pipe_1_io_out_bits_id;	// @[VectorScalarMultiplier.scala:170:24]
  wire [3:0]  _pipe_1_io_out_bits_index;	// @[VectorScalarMultiplier.scala:170:24]
  wire        _arb_1_io_in_0_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_1_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_2_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_3_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_4_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_5_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_6_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_7_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_8_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_9_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_10_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_in_11_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_1_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23]
  wire [7:0]  _arb_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23]
  wire [31:0] _arb_1_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23]
  wire [1:0]  _arb_1_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23]
  wire [3:0]  _arb_1_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _pipe_io_out_valid;	// @[VectorScalarMultiplier.scala:170:24]
  wire [7:0]  _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:170:24]
  wire [1:0]  _pipe_io_out_bits_id;	// @[VectorScalarMultiplier.scala:170:24]
  wire [3:0]  _pipe_io_out_bits_index;	// @[VectorScalarMultiplier.scala:170:24]
  wire        _arb_io_in_0_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_1_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_2_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_3_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_4_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_5_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_6_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_7_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_8_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_9_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_10_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_in_11_ready;	// @[VectorScalarMultiplier.scala:160:23]
  wire        _arb_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23]
  wire [7:0]  _arb_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23]
  wire [31:0] _arb_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23]
  wire [1:0]  _arb_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23]
  wire [3:0]  _arb_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23]
  reg         in_valid;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [31:0] in_bits_scale_bits;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [15:0] in_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_last;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [13:0] in_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15]
  reg         in_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [15:0] in_bits_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [15:0] in_bits_tag_len;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15]
  reg  [7:0]  in_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15]
  wire        _out_regs_2_last_T = in_bits_repeats == 16'h0;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:65:15, :67:49]
  wire        _io_req_ready_output = ~in_valid | _out_regs_2_last_T & in_fire;	// @[VectorScalarMultiplier.scala:65:15, :67:{19,29,49,57}, :119:26]
  reg         regs_0_valid;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_0;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_1;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_2;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_3;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_4;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_5;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_6;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_7;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_8;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_9;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_10;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_11;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_12;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_13;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_14;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_0_bits_in_15;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [31:0] regs_0_bits_scale_bits;	// @[VectorScalarMultiplier.scala:101:19]
  reg         regs_1_valid;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_0;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_1;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_2;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_3;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_4;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_5;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_6;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_7;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_8;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_9;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_10;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_11;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_12;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_13;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_14;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_1_bits_in_15;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [31:0] regs_1_bits_scale_bits;	// @[VectorScalarMultiplier.scala:101:19]
  reg         regs_2_valid;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_0;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_1;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_2;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_3;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_4;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_5;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_6;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_7;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_8;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_9;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_10;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_11;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_12;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_13;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_14;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  regs_2_bits_in_15;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [31:0] regs_2_bits_scale_bits;	// @[VectorScalarMultiplier.scala:101:19]
  reg  [7:0]  out_regs_0_out_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_out_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_0_row;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_last;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [13:0] out_regs_0_tag_addr;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_mask_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_is_acc;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_0_tag_accumulate;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_0_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_0_tag_len;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_tag_bytes_read;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_0_tag_cmd_id;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_out_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_1_row;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_last;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [13:0] out_regs_1_tag_addr;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_mask_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_is_acc;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_1_tag_accumulate;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_1_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_1_tag_len;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_tag_bytes_read;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_1_tag_cmd_id;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_out_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_2_row;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_last;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [13:0] out_regs_2_tag_addr;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_0;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_1;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_2;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_3;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_4;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_5;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_6;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_7;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_8;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_9;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_10;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_11;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_12;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_13;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_14;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_mask_15;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_is_acc;	// @[VectorScalarMultiplier.scala:102:23]
  reg         out_regs_2_tag_accumulate;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_2_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [15:0] out_regs_2_tag_len;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_tag_bytes_read;	// @[VectorScalarMultiplier.scala:102:23]
  reg  [7:0]  out_regs_2_tag_cmd_id;	// @[VectorScalarMultiplier.scala:102:23]
  reg         fired_masks_0_0;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_1;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_2;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_3;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_4;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_5;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_6;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_7;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_8;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_9;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_10;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_11;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_12;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_13;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_14;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_0_15;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_0;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_1;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_2;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_3;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_4;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_5;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_6;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_7;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_8;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_9;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_10;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_11;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_12;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_13;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_14;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_1_15;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_0;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_1;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_2;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_3;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_4;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_5;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_6;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_7;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_8;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_9;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_10;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_11;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_12;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_13;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_14;	// @[VectorScalarMultiplier.scala:104:26]
  reg         fired_masks_2_15;	// @[VectorScalarMultiplier.scala:104:26]
  reg         completed_masks_0_0;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_1;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_2;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_3;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_4;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_5;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_6;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_7;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_8;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_9;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_10;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_11;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_12;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_13;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_14;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_0_15;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_0;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_1;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_2;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_3;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_4;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_5;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_6;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_7;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_8;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_9;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_10;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_11;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_12;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_13;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_14;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_1_15;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_0;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_1;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_2;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_3;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_4;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_5;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_6;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_7;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_8;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_9;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_10;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_11;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_12;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_13;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_14;	// @[VectorScalarMultiplier.scala:105:30]
  reg         completed_masks_2_15;	// @[VectorScalarMultiplier.scala:105:30]
  reg  [2:0]  head_oh;	// @[VectorScalarMultiplier.scala:106:26]
  reg  [2:0]  tail_oh;	// @[VectorScalarMultiplier.scala:107:26]
  wire        _io_resp_valid_WIRE = head_oh[0] & regs_0_valid & completed_masks_0_0 & completed_masks_0_1 & completed_masks_0_2 & completed_masks_0_3 & completed_masks_0_4 & completed_masks_0_5 & completed_masks_0_6 & completed_masks_0_7 & completed_masks_0_8 & completed_masks_0_9 & completed_masks_0_10 & completed_masks_0_11 & completed_masks_0_12 & completed_masks_0_13 & completed_masks_0_14 & completed_masks_0_15 | head_oh[1] & regs_1_valid & completed_masks_1_0 & completed_masks_1_1 & completed_masks_1_2 & completed_masks_1_3 & completed_masks_1_4 & completed_masks_1_5 & completed_masks_1_6 & completed_masks_1_7 & completed_masks_1_8 & completed_masks_1_9 & completed_masks_1_10 & completed_masks_1_11 & completed_masks_1_12 & completed_masks_1_13 & completed_masks_1_14 & completed_masks_1_15 | head_oh[2] & regs_2_valid & completed_masks_2_0 & completed_masks_2_1 & completed_masks_2_2 & completed_masks_2_3 & completed_masks_2_4 & completed_masks_2_5 & completed_masks_2_6 & completed_masks_2_7 & completed_masks_2_8 & completed_masks_2_9 & completed_masks_2_10 & completed_masks_2_11 & completed_masks_2_12 & completed_masks_2_13 & completed_masks_2_14 & completed_masks_2_15;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:101:19, :105:30, :106:26, :109:36]
  assign in_fire = in_valid & ~(tail_oh[0] & regs_0_valid | tail_oh[1] & regs_1_valid | tail_oh[2] & regs_2_valid);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:65:15, :101:19, :107:26, :119:26, :120:{8,23}]
  wire        inputs_0_valid = regs_0_valid & ~fired_masks_0_0;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_1_valid = regs_0_valid & ~fired_masks_0_1;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_2_valid = regs_0_valid & ~fired_masks_0_2;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_3_valid = regs_0_valid & ~fired_masks_0_3;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_4_valid = regs_0_valid & ~fired_masks_0_4;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_5_valid = regs_0_valid & ~fired_masks_0_5;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_6_valid = regs_0_valid & ~fired_masks_0_6;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_7_valid = regs_0_valid & ~fired_masks_0_7;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_8_valid = regs_0_valid & ~fired_masks_0_8;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_9_valid = regs_0_valid & ~fired_masks_0_9;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_10_valid = regs_0_valid & ~fired_masks_0_10;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_11_valid = regs_0_valid & ~fired_masks_0_11;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_12_valid = regs_0_valid & ~fired_masks_0_12;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_13_valid = regs_0_valid & ~fired_masks_0_13;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_14_valid = regs_0_valid & ~fired_masks_0_14;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_15_valid = regs_0_valid & ~fired_masks_0_15;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_16_valid = regs_1_valid & ~fired_masks_1_0;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_17_valid = regs_1_valid & ~fired_masks_1_1;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_18_valid = regs_1_valid & ~fired_masks_1_2;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_19_valid = regs_1_valid & ~fired_masks_1_3;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_20_valid = regs_1_valid & ~fired_masks_1_4;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_21_valid = regs_1_valid & ~fired_masks_1_5;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_22_valid = regs_1_valid & ~fired_masks_1_6;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_23_valid = regs_1_valid & ~fired_masks_1_7;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_24_valid = regs_1_valid & ~fired_masks_1_8;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_25_valid = regs_1_valid & ~fired_masks_1_9;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_26_valid = regs_1_valid & ~fired_masks_1_10;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_27_valid = regs_1_valid & ~fired_masks_1_11;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_28_valid = regs_1_valid & ~fired_masks_1_12;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_29_valid = regs_1_valid & ~fired_masks_1_13;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_30_valid = regs_1_valid & ~fired_masks_1_14;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_31_valid = regs_1_valid & ~fired_masks_1_15;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_32_valid = regs_2_valid & ~fired_masks_2_0;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_33_valid = regs_2_valid & ~fired_masks_2_1;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_34_valid = regs_2_valid & ~fired_masks_2_2;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_35_valid = regs_2_valid & ~fired_masks_2_3;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_36_valid = regs_2_valid & ~fired_masks_2_4;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_37_valid = regs_2_valid & ~fired_masks_2_5;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_38_valid = regs_2_valid & ~fired_masks_2_6;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_39_valid = regs_2_valid & ~fired_masks_2_7;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_40_valid = regs_2_valid & ~fired_masks_2_8;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_41_valid = regs_2_valid & ~fired_masks_2_9;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_42_valid = regs_2_valid & ~fired_masks_2_10;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_43_valid = regs_2_valid & ~fired_masks_2_11;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_44_valid = regs_2_valid & ~fired_masks_2_12;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_45_valid = regs_2_valid & ~fired_masks_2_13;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_46_valid = regs_2_valid & ~fired_masks_2_14;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  wire        inputs_47_valid = regs_2_valid & ~fired_masks_2_15;	// @[VectorScalarMultiplier.scala:101:19, :104:26, :148:{44,47}]
  reg         arbOut_valid;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [7:0]  arbOut_bits_data;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [31:0] arbOut_bits_scale_bits;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [1:0]  arbOut_bits_id;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [3:0]  arbOut_bits_index;	// @[VectorScalarMultiplier.scala:163:23]
  reg         arbOut_1_valid;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [7:0]  arbOut_1_bits_data;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [31:0] arbOut_1_bits_scale_bits;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [1:0]  arbOut_1_bits_id;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [3:0]  arbOut_1_bits_index;	// @[VectorScalarMultiplier.scala:163:23]
  reg         arbOut_2_valid;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [7:0]  arbOut_2_bits_data;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [31:0] arbOut_2_bits_scale_bits;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [1:0]  arbOut_2_bits_id;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [3:0]  arbOut_2_bits_index;	// @[VectorScalarMultiplier.scala:163:23]
  reg         arbOut_3_valid;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [7:0]  arbOut_3_bits_data;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [31:0] arbOut_3_bits_scale_bits;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [1:0]  arbOut_3_bits_id;	// @[VectorScalarMultiplier.scala:163:23]
  reg  [3:0]  arbOut_3_bits_index;	// @[VectorScalarMultiplier.scala:163:23]
  wire        _T_3 = io_resp_ready & _io_resp_valid_WIRE;	// @[Decoupled.scala:51:35, Mux.scala:27:73]
  wire        _T = _io_req_ready_output & io_req_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:67:29]
  wire        _GEN = in_fire & tail_oh[0];	// @[VectorScalarMultiplier.scala:107:26, :111:25, :119:26, :120:23, :122:20, :124:27, :125:25]
  wire        _completed_masks_0_15_T_1 = in_bits_scale_bits == 32'h3F800000;	// @[Cat.scala:33:92, VectorScalarMultiplier.scala:65:15, :137:60]
  wire        _GEN_0 = in_fire & tail_oh[1];	// @[VectorScalarMultiplier.scala:107:26, :111:25, :119:26, :120:23, :122:20, :124:27, :125:25]
  wire        _completed_masks_1_15_T_1 = in_bits_scale_bits == 32'h3F800000;	// @[Cat.scala:33:92, VectorScalarMultiplier.scala:65:15, :137:60]
  wire        _GEN_1 = in_fire & tail_oh[2];	// @[VectorScalarMultiplier.scala:107:26, :111:25, :119:26, :120:23, :122:20, :124:27, :125:25]
  wire        _completed_masks_2_15_T_1 = in_bits_scale_bits == 32'h3F800000;	// @[Cat.scala:33:92, VectorScalarMultiplier.scala:65:15, :137:60]
  wire        _T_71 = _pipe_io_out_bits_id == 2'h0;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_93 = _pipe_io_out_bits_index == 4'h0;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_62 = _pipe_io_out_valid & _T_71 & _T_93;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_97 = _pipe_io_out_bits_index == 4'h4;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_66 = _pipe_io_out_valid & _T_71 & _T_97;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_101 = _pipe_io_out_bits_index == 4'h8;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_70 = _pipe_io_out_valid & _T_71 & _T_101;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_105 = _pipe_io_out_bits_index == 4'hC;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_74 = _pipe_io_out_valid & _T_71 & _T_105;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_87 = _pipe_io_out_bits_id == 2'h1;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_78 = _pipe_io_out_valid & _T_87 & _T_93;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_82 = _pipe_io_out_valid & _T_87 & _T_97;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_86 = _pipe_io_out_valid & _T_87 & _T_101;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_90 = _pipe_io_out_valid & _T_87 & _T_105;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_103 = _pipe_io_out_bits_id == 2'h2;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:53]
  wire        _T_94 = _pipe_io_out_valid & _T_103 & _T_93;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_98 = _pipe_io_out_valid & _T_103 & _T_97;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_102 = _pipe_io_out_valid & _T_103 & _T_101;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_106 = _pipe_io_out_valid & _T_103 & _T_105;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_120 = _pipe_1_io_out_bits_id == 2'h0;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_142 = _pipe_1_io_out_bits_index == 4'h1;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_111 = _pipe_1_io_out_valid & _T_120 & _T_142;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_146 = _pipe_1_io_out_bits_index == 4'h5;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_115 = _pipe_1_io_out_valid & _T_120 & _T_146;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_150 = _pipe_1_io_out_bits_index == 4'h9;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_119 = _pipe_1_io_out_valid & _T_120 & _T_150;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_154 = _pipe_1_io_out_bits_index == 4'hD;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_123 = _pipe_1_io_out_valid & _T_120 & _T_154;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_136 = _pipe_1_io_out_bits_id == 2'h1;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_127 = _pipe_1_io_out_valid & _T_136 & _T_142;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_131 = _pipe_1_io_out_valid & _T_136 & _T_146;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_135 = _pipe_1_io_out_valid & _T_136 & _T_150;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_139 = _pipe_1_io_out_valid & _T_136 & _T_154;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_152 = _pipe_1_io_out_bits_id == 2'h2;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:53]
  wire        _T_143 = _pipe_1_io_out_valid & _T_152 & _T_142;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_147 = _pipe_1_io_out_valid & _T_152 & _T_146;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_151 = _pipe_1_io_out_valid & _T_152 & _T_150;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_155 = _pipe_1_io_out_valid & _T_152 & _T_154;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_169 = _pipe_2_io_out_bits_id == 2'h0;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_191 = _pipe_2_io_out_bits_index == 4'h2;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_160 = _pipe_2_io_out_valid & _T_169 & _T_191;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_195 = _pipe_2_io_out_bits_index == 4'h6;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_164 = _pipe_2_io_out_valid & _T_169 & _T_195;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_199 = _pipe_2_io_out_bits_index == 4'hA;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_168 = _pipe_2_io_out_valid & _T_169 & _T_199;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_203 = _pipe_2_io_out_bits_index == 4'hE;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_172 = _pipe_2_io_out_valid & _T_169 & _T_203;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_185 = _pipe_2_io_out_bits_id == 2'h1;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_176 = _pipe_2_io_out_valid & _T_185 & _T_191;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_180 = _pipe_2_io_out_valid & _T_185 & _T_195;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_184 = _pipe_2_io_out_valid & _T_185 & _T_199;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_188 = _pipe_2_io_out_valid & _T_185 & _T_203;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_201 = _pipe_2_io_out_bits_id == 2'h2;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:53]
  wire        _T_192 = _pipe_2_io_out_valid & _T_201 & _T_191;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_196 = _pipe_2_io_out_valid & _T_201 & _T_195;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_200 = _pipe_2_io_out_valid & _T_201 & _T_199;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_204 = _pipe_2_io_out_valid & _T_201 & _T_203;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_218 = _pipe_3_io_out_bits_id == 2'h0;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_240 = _pipe_3_io_out_bits_index == 4'h3;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_209 = _pipe_3_io_out_valid & _T_218 & _T_240;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_244 = _pipe_3_io_out_bits_index == 4'h7;	// @[VectorScalarMultiplier.scala:161:17, :170:24, :176:84]
  wire        _T_213 = _pipe_3_io_out_valid & _T_218 & _T_244;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_248 = _pipe_3_io_out_bits_index == 4'hB;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:84]
  wire        _T_217 = _pipe_3_io_out_valid & _T_218 & _T_248;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_221 = _pipe_3_io_out_valid & _T_218 & (&_pipe_3_io_out_bits_index);	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_234 = _pipe_3_io_out_bits_id == 2'h1;	// @[VectorScalarMultiplier.scala:170:24, :176:53]
  wire        _T_225 = _pipe_3_io_out_valid & _T_234 & _T_240;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_229 = _pipe_3_io_out_valid & _T_234 & _T_244;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_233 = _pipe_3_io_out_valid & _T_234 & _T_248;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_237 = _pipe_3_io_out_valid & _T_234 & (&_pipe_3_io_out_bits_index);	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_250 = _pipe_3_io_out_bits_id == 2'h2;	// @[VectorScalarMultiplier.scala:152:26, :170:24, :176:53]
  wire        _T_241 = _pipe_3_io_out_valid & _T_250 & _T_240;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_245 = _pipe_3_io_out_valid & _T_250 & _T_244;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_249 = _pipe_3_io_out_valid & _T_250 & _T_248;	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  wire        _T_253 = _pipe_3_io_out_valid & _T_250 & (&_pipe_3_io_out_bits_index);	// @[VectorScalarMultiplier.scala:170:24, :176:{53,61,84}]
  always @(posedge clock) begin
    if (reset) begin
      in_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15]
      regs_0_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      head_oh <= 3'h1;	// @[VectorScalarMultiplier.scala:106:26]
      tail_oh <= 3'h1;	// @[VectorScalarMultiplier.scala:106:26, :107:26]
      arbOut_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :163:23]
      arbOut_1_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :163:23]
      arbOut_2_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :163:23]
      arbOut_3_valid <= 1'h0;	// @[VectorScalarMultiplier.scala:65:15, :163:23]
    end
    else begin
      if (_T)	// @[Decoupled.scala:51:35]
        in_valid <= io_req_valid;	// @[VectorScalarMultiplier.scala:65:15]
      else	// @[Decoupled.scala:51:35]
        in_valid <= ~(in_fire & _out_regs_2_last_T) & in_valid;	// @[VectorScalarMultiplier.scala:65:15, :67:49, :72:25, :73:36, :74:16, :119:26]
      regs_0_valid <= _GEN | ~(_T_3 & head_oh[0]) & regs_0_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:101:19, :106:26, :109:36, :111:25, :113:27, :114:25, :122:20, :124:27, :125:25]
      regs_1_valid <= _GEN_0 | ~(_T_3 & head_oh[1]) & regs_1_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:101:19, :106:26, :109:36, :111:25, :113:27, :114:25, :122:20, :124:27, :125:25]
      regs_2_valid <= _GEN_1 | ~(_T_3 & head_oh[2]) & regs_2_valid;	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:101:19, :106:26, :109:36, :111:25, :113:27, :114:25, :122:20, :124:27, :125:25]
      if (_T_3)	// @[Decoupled.scala:51:35]
        head_oh <= {head_oh[1:0], head_oh[2]};	// @[VectorScalarMultiplier.scala:106:26, :109:36, :117:15]
      if (in_fire)	// @[VectorScalarMultiplier.scala:119:26]
        tail_oh <= {tail_oh[1:0], tail_oh[2]};	// @[VectorScalarMultiplier.scala:107:26, :120:23, :141:15]
      arbOut_valid <= _arb_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
      arbOut_1_valid <= _arb_1_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
      arbOut_2_valid <= _arb_2_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
      arbOut_3_valid <= _arb_3_io_out_valid;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    end
    if (_T) begin	// @[Decoupled.scala:51:35]
      in_bits_in_0 <= io_req_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_1 <= io_req_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_2 <= io_req_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_3 <= io_req_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_4 <= io_req_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_5 <= io_req_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_6 <= io_req_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_7 <= io_req_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_8 <= io_req_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_9 <= io_req_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_10 <= io_req_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_11 <= io_req_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_12 <= io_req_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_13 <= io_req_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_14 <= io_req_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_in_15 <= io_req_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_scale_bits <= io_req_bits_scale_bits;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_repeats <= io_req_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_last <= io_req_bits_last;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_addr <= io_req_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_0 <= io_req_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_1 <= io_req_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_2 <= io_req_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_3 <= io_req_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_4 <= io_req_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_5 <= io_req_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_6 <= io_req_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_7 <= io_req_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_8 <= io_req_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_9 <= io_req_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_10 <= io_req_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_11 <= io_req_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_12 <= io_req_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_13 <= io_req_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_14 <= io_req_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_mask_15 <= io_req_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_is_acc <= io_req_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_accumulate <= io_req_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_pixel_repeats <= io_req_bits_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_len <= io_req_bits_tag_len;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_bytes_read <= io_req_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15]
      in_bits_tag_cmd_id <= io_req_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15]
    end
    else if (in_fire)	// @[VectorScalarMultiplier.scala:119:26]
      in_bits_repeats <= in_bits_repeats - 16'h1;	// @[VectorScalarMultiplier.scala:65:15, :76:40]
    if (_GEN) begin	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      regs_0_bits_in_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_in_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_0_bits_scale_bits <= in_bits_scale_bits;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      out_regs_0_row <= in_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_last <= _out_regs_2_last_T & in_bits_last;	// @[VectorScalarMultiplier.scala:65:15, :67:49, :102:23, :128:55]
      out_regs_0_tag_addr <= in_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_0 <= in_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_1 <= in_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_2 <= in_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_3 <= in_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_4 <= in_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_5 <= in_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_6 <= in_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_7 <= in_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_8 <= in_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_9 <= in_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_10 <= in_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_11 <= in_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_12 <= in_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_13 <= in_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_14 <= in_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_mask_15 <= in_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_is_acc <= in_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_accumulate <= in_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_pixel_repeats <= in_bits_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_len <= in_bits_tag_len;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_bytes_read <= in_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_0_tag_cmd_id <= in_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    end
    if (_GEN_0) begin	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      regs_1_bits_in_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_in_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_1_bits_scale_bits <= in_bits_scale_bits;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      out_regs_1_row <= in_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_last <= _out_regs_2_last_T & in_bits_last;	// @[VectorScalarMultiplier.scala:65:15, :67:49, :102:23, :128:55]
      out_regs_1_tag_addr <= in_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_0 <= in_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_1 <= in_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_2 <= in_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_3 <= in_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_4 <= in_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_5 <= in_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_6 <= in_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_7 <= in_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_8 <= in_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_9 <= in_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_10 <= in_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_11 <= in_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_12 <= in_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_13 <= in_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_14 <= in_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_mask_15 <= in_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_is_acc <= in_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_accumulate <= in_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_pixel_repeats <= in_bits_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_len <= in_bits_tag_len;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_bytes_read <= in_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_1_tag_cmd_id <= in_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    end
    if (_GEN_1) begin	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      regs_2_bits_in_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_in_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      regs_2_bits_scale_bits <= in_bits_scale_bits;	// @[VectorScalarMultiplier.scala:65:15, :101:19]
      out_regs_2_row <= in_bits_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_last <= _out_regs_2_last_T & in_bits_last;	// @[VectorScalarMultiplier.scala:65:15, :67:49, :102:23, :128:55]
      out_regs_2_tag_addr <= in_bits_tag_addr;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_0 <= in_bits_tag_mask_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_1 <= in_bits_tag_mask_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_2 <= in_bits_tag_mask_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_3 <= in_bits_tag_mask_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_4 <= in_bits_tag_mask_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_5 <= in_bits_tag_mask_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_6 <= in_bits_tag_mask_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_7 <= in_bits_tag_mask_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_8 <= in_bits_tag_mask_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_9 <= in_bits_tag_mask_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_10 <= in_bits_tag_mask_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_11 <= in_bits_tag_mask_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_12 <= in_bits_tag_mask_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_13 <= in_bits_tag_mask_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_14 <= in_bits_tag_mask_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_mask_15 <= in_bits_tag_mask_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_is_acc <= in_bits_tag_is_acc;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_accumulate <= in_bits_tag_accumulate;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_pixel_repeats <= in_bits_tag_pixel_repeats;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_len <= in_bits_tag_len;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_bytes_read <= in_bits_tag_bytes_read;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
      out_regs_2_tag_cmd_id <= in_bits_tag_cmd_id;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    end
    if (_T_62)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_0 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_111)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_1 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_160)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_2 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_209)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_3 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_66)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_4 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_115)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_5 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_164)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_6 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_213)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_7 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_70)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_8 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_119)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_9 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_168)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_10 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_217)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_11 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_74)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_12 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_123)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_13 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_172)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_14 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_221)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_0_out_15 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_0_out_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_78)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_0 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_127)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_1 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_176)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_2 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_225)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_3 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_82)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_4 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_131)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_5 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_180)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_6 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_229)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_7 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_86)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_8 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_135)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_9 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_184)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_10 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_233)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_11 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_90)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_12 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_139)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_13 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_188)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_14 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_237)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_1_out_15 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_0)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_1_out_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_94)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_0 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_0 <= in_bits_in_0;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_143)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_1 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_1 <= in_bits_in_1;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_192)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_2 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_2 <= in_bits_in_2;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_241)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_3 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_3 <= in_bits_in_3;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_98)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_4 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_4 <= in_bits_in_4;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_147)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_5 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_5 <= in_bits_in_5;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_196)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_6 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_6 <= in_bits_in_6;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_245)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_7 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_7 <= in_bits_in_7;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_102)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_8 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_8 <= in_bits_in_8;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_151)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_9 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_9 <= in_bits_in_9;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_200)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_10 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_10 <= in_bits_in_10;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_249)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_11 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_11 <= in_bits_in_11;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_106)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_12 <= _pipe_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_12 <= in_bits_in_12;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_155)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_13 <= _pipe_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_13 <= in_bits_in_13;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_204)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_14 <= _pipe_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_14 <= in_bits_in_14;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    if (_T_253)	// @[VectorScalarMultiplier.scala:176:61]
      out_regs_2_out_15 <= _pipe_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:102:23, :170:24]
    else if (_GEN_1)	// @[VectorScalarMultiplier.scala:111:25, :122:20, :124:27, :125:25]
      out_regs_2_out_15 <= in_bits_in_15;	// @[VectorScalarMultiplier.scala:65:15, :102:23]
    fired_masks_0_0 <= _arb_io_in_0_ready & inputs_0_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_0);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_1 <= _arb_1_io_in_0_ready & inputs_1_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_1);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_2 <= _arb_2_io_in_0_ready & inputs_2_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_2);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_3 <= _arb_3_io_in_0_ready & inputs_3_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_3);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_4 <= _arb_io_in_1_ready & inputs_4_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_4);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_5 <= _arb_1_io_in_1_ready & inputs_5_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_5);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_6 <= _arb_2_io_in_1_ready & inputs_6_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_6);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_7 <= _arb_3_io_in_1_ready & inputs_7_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_7);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_8 <= _arb_io_in_2_ready & inputs_8_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_8);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_9 <= _arb_1_io_in_2_ready & inputs_9_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_9);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_10 <= _arb_2_io_in_2_ready & inputs_10_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_10);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_11 <= _arb_3_io_in_2_ready & inputs_11_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_11);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_12 <= _arb_io_in_3_ready & inputs_12_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_12);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_13 <= _arb_1_io_in_3_ready & inputs_13_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_13);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_14 <= _arb_2_io_in_3_ready & inputs_14_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_14);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_0_15 <= _arb_3_io_in_3_ready & inputs_15_valid | (_GEN ? _completed_masks_0_15_T_1 : fired_masks_0_15);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_0 <= _arb_io_in_4_ready & inputs_16_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_0);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_1 <= _arb_1_io_in_4_ready & inputs_17_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_1);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_2 <= _arb_2_io_in_4_ready & inputs_18_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_2);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_3 <= _arb_3_io_in_4_ready & inputs_19_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_3);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_4 <= _arb_io_in_5_ready & inputs_20_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_4);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_5 <= _arb_1_io_in_5_ready & inputs_21_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_5);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_6 <= _arb_2_io_in_5_ready & inputs_22_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_6);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_7 <= _arb_3_io_in_5_ready & inputs_23_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_7);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_8 <= _arb_io_in_6_ready & inputs_24_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_8);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_9 <= _arb_1_io_in_6_ready & inputs_25_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_9);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_10 <= _arb_2_io_in_6_ready & inputs_26_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_10);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_11 <= _arb_3_io_in_6_ready & inputs_27_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_11);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_12 <= _arb_io_in_7_ready & inputs_28_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_12);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_13 <= _arb_1_io_in_7_ready & inputs_29_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_13);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_14 <= _arb_2_io_in_7_ready & inputs_30_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_14);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_1_15 <= _arb_3_io_in_7_ready & inputs_31_valid | (_GEN_0 ? _completed_masks_1_15_T_1 : fired_masks_1_15);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_0 <= _arb_io_in_8_ready & inputs_32_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_0);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_1 <= _arb_1_io_in_8_ready & inputs_33_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_1);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_2 <= _arb_2_io_in_8_ready & inputs_34_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_2);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_3 <= _arb_3_io_in_8_ready & inputs_35_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_3);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_4 <= _arb_io_in_9_ready & inputs_36_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_4);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_5 <= _arb_1_io_in_9_ready & inputs_37_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_5);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_6 <= _arb_2_io_in_9_ready & inputs_38_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_6);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_7 <= _arb_3_io_in_9_ready & inputs_39_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_7);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_8 <= _arb_io_in_10_ready & inputs_40_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_8);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_9 <= _arb_1_io_in_10_ready & inputs_41_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_9);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_10 <= _arb_2_io_in_10_ready & inputs_42_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_10);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_11 <= _arb_3_io_in_10_ready & inputs_43_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_11);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_12 <= _arb_io_in_11_ready & inputs_44_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_12);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_13 <= _arb_1_io_in_11_ready & inputs_45_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_13);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_14 <= _arb_2_io_in_11_ready & inputs_46_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_14);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    fired_masks_2_15 <= _arb_3_io_in_11_ready & inputs_47_valid | (_GEN_1 ? _completed_masks_2_15_T_1 : fired_masks_2_15);	// @[Decoupled.scala:51:35, VectorScalarMultiplier.scala:104:26, :111:25, :122:20, :124:27, :125:25, :137:{36,60}, :148:44, :153:27, :154:29, :160:23]
    completed_masks_0_0 <= _T_62 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_0);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_1 <= _T_111 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_1);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_2 <= _T_160 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_2);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_3 <= _T_209 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_3);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_4 <= _T_66 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_4);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_5 <= _T_115 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_5);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_6 <= _T_164 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_6);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_7 <= _T_213 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_7);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_8 <= _T_70 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_8);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_9 <= _T_119 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_9);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_10 <= _T_168 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_10);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_11 <= _T_217 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_11);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_12 <= _T_74 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_12);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_13 <= _T_123 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_13);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_14 <= _T_172 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_14);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_0_15 <= _T_221 | (_GEN ? _completed_masks_0_15_T_1 : completed_masks_0_15);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_0 <= _T_78 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_0);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_1 <= _T_127 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_1);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_2 <= _T_176 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_2);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_3 <= _T_225 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_3);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_4 <= _T_82 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_4);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_5 <= _T_131 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_5);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_6 <= _T_180 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_6);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_7 <= _T_229 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_7);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_8 <= _T_86 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_8);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_9 <= _T_135 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_9);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_10 <= _T_184 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_10);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_11 <= _T_233 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_11);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_12 <= _T_90 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_12);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_13 <= _T_139 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_13);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_14 <= _T_188 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_14);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_1_15 <= _T_237 | (_GEN_0 ? _completed_masks_1_15_T_1 : completed_masks_1_15);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_0 <= _T_94 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_0);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_1 <= _T_143 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_1);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_2 <= _T_192 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_2);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_3 <= _T_241 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_3);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_4 <= _T_98 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_4);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_5 <= _T_147 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_5);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_6 <= _T_196 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_6);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_7 <= _T_245 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_7);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_8 <= _T_102 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_8);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_9 <= _T_151 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_9);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_10 <= _T_200 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_10);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_11 <= _T_249 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_11);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_12 <= _T_106 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_12);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_13 <= _T_155 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_13);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_14 <= _T_204 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_14);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    completed_masks_2_15 <= _T_253 | (_GEN_1 ? _completed_masks_2_15_T_1 : completed_masks_2_15);	// @[VectorScalarMultiplier.scala:105:30, :111:25, :122:20, :124:27, :125:25, :137:60, :138:40, :176:{61,93}, :178:37]
    arbOut_bits_data <= _arb_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_bits_scale_bits <= _arb_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_bits_id <= _arb_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_bits_index <= _arb_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_1_bits_data <= _arb_1_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_1_bits_scale_bits <= _arb_1_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_1_bits_id <= _arb_1_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_1_bits_index <= _arb_1_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_2_bits_data <= _arb_2_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_2_bits_scale_bits <= _arb_2_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_2_bits_id <= _arb_2_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_2_bits_index <= _arb_2_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_3_bits_data <= _arb_3_io_out_bits_data;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_3_bits_scale_bits <= _arb_3_io_out_bits_scale_bits;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_3_bits_id <= _arb_3_io_out_bits_id;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
    arbOut_3_bits_index <= _arb_3_io_out_bits_index;	// @[VectorScalarMultiplier.scala:160:23, :163:23]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    logic [31:0] _RANDOM_53;
    logic [31:0] _RANDOM_54;
    logic [31:0] _RANDOM_55;
    logic [31:0] _RANDOM_56;
    logic [31:0] _RANDOM_57;
    logic [31:0] _RANDOM_58;
    logic [31:0] _RANDOM_59;
    logic [31:0] _RANDOM_60;
    logic [31:0] _RANDOM_61;
    logic [31:0] _RANDOM_62;
    logic [31:0] _RANDOM_63;
    logic [31:0] _RANDOM_64;
    logic [31:0] _RANDOM_65;
    logic [31:0] _RANDOM_66;
    logic [31:0] _RANDOM_67;
    logic [31:0] _RANDOM_68;
    logic [31:0] _RANDOM_69;
    logic [31:0] _RANDOM_70;
    logic [31:0] _RANDOM_71;
    logic [31:0] _RANDOM_72;
    logic [31:0] _RANDOM_73;
    logic [31:0] _RANDOM_74;
    logic [31:0] _RANDOM_75;
    logic [31:0] _RANDOM_76;
    logic [31:0] _RANDOM_77;
    logic [31:0] _RANDOM_78;
    logic [31:0] _RANDOM_79;
    logic [31:0] _RANDOM_80;
    logic [31:0] _RANDOM_81;
    logic [31:0] _RANDOM_82;
    logic [31:0] _RANDOM_83;
    logic [31:0] _RANDOM_84;
    logic [31:0] _RANDOM_85;
    logic [31:0] _RANDOM_86;
    logic [31:0] _RANDOM_87;
    logic [31:0] _RANDOM_88;
    logic [31:0] _RANDOM_89;
    logic [31:0] _RANDOM_90;
    logic [31:0] _RANDOM_91;
    logic [31:0] _RANDOM_92;
    logic [31:0] _RANDOM_93;
    logic [31:0] _RANDOM_94;
    logic [31:0] _RANDOM_95;
    logic [31:0] _RANDOM_96;
    logic [31:0] _RANDOM_97;
    logic [31:0] _RANDOM_98;
    logic [31:0] _RANDOM_99;
    logic [31:0] _RANDOM_100;
    logic [31:0] _RANDOM_101;
    logic [31:0] _RANDOM_102;
    logic [31:0] _RANDOM_103;
    logic [31:0] _RANDOM_104;
    logic [31:0] _RANDOM_105;
    logic [31:0] _RANDOM_106;
    logic [31:0] _RANDOM_107;
    logic [31:0] _RANDOM_108;
    logic [31:0] _RANDOM_109;
    logic [31:0] _RANDOM_110;
    logic [31:0] _RANDOM_111;
    logic [31:0] _RANDOM_112;
    logic [31:0] _RANDOM_113;
    logic [31:0] _RANDOM_114;
    logic [31:0] _RANDOM_115;
    logic [31:0] _RANDOM_116;
    logic [31:0] _RANDOM_117;
    logic [31:0] _RANDOM_118;
    logic [31:0] _RANDOM_119;
    logic [31:0] _RANDOM_120;
    logic [31:0] _RANDOM_121;
    logic [31:0] _RANDOM_122;
    logic [31:0] _RANDOM_123;
    logic [31:0] _RANDOM_124;
    logic [31:0] _RANDOM_125;
    logic [31:0] _RANDOM_126;
    logic [31:0] _RANDOM_127;
    logic [31:0] _RANDOM_128;
    logic [31:0] _RANDOM_129;
    logic [31:0] _RANDOM_130;
    logic [31:0] _RANDOM_131;
    logic [31:0] _RANDOM_132;
    logic [31:0] _RANDOM_133;
    logic [31:0] _RANDOM_134;
    logic [31:0] _RANDOM_135;
    logic [31:0] _RANDOM_136;
    logic [31:0] _RANDOM_137;
    logic [31:0] _RANDOM_138;
    logic [31:0] _RANDOM_139;
    logic [31:0] _RANDOM_140;
    logic [31:0] _RANDOM_141;
    logic [31:0] _RANDOM_142;
    logic [31:0] _RANDOM_143;
    logic [31:0] _RANDOM_144;
    logic [31:0] _RANDOM_145;
    logic [31:0] _RANDOM_146;
    logic [31:0] _RANDOM_147;
    logic [31:0] _RANDOM_148;
    logic [31:0] _RANDOM_149;
    logic [31:0] _RANDOM_150;
    logic [31:0] _RANDOM_151;
    logic [31:0] _RANDOM_152;
    logic [31:0] _RANDOM_153;
    logic [31:0] _RANDOM_154;
    logic [31:0] _RANDOM_155;
    logic [31:0] _RANDOM_156;
    logic [31:0] _RANDOM_157;
    logic [31:0] _RANDOM_158;
    logic [31:0] _RANDOM_159;
    logic [31:0] _RANDOM_160;
    logic [31:0] _RANDOM_161;
    logic [31:0] _RANDOM_162;
    logic [31:0] _RANDOM_163;
    logic [31:0] _RANDOM_164;
    logic [31:0] _RANDOM_165;
    logic [31:0] _RANDOM_166;
    logic [31:0] _RANDOM_167;
    logic [31:0] _RANDOM_168;
    logic [31:0] _RANDOM_169;
    logic [31:0] _RANDOM_170;
    logic [31:0] _RANDOM_171;
    logic [31:0] _RANDOM_172;
    logic [31:0] _RANDOM_173;
    logic [31:0] _RANDOM_174;
    logic [31:0] _RANDOM_175;
    logic [31:0] _RANDOM_176;
    logic [31:0] _RANDOM_177;
    logic [31:0] _RANDOM_178;
    logic [31:0] _RANDOM_179;
    logic [31:0] _RANDOM_180;
    logic [31:0] _RANDOM_181;
    logic [31:0] _RANDOM_182;
    logic [31:0] _RANDOM_183;
    logic [31:0] _RANDOM_184;
    logic [31:0] _RANDOM_185;
    logic [31:0] _RANDOM_186;
    logic [31:0] _RANDOM_187;
    logic [31:0] _RANDOM_188;
    logic [31:0] _RANDOM_189;
    logic [31:0] _RANDOM_190;
    logic [31:0] _RANDOM_191;
    logic [31:0] _RANDOM_192;
    logic [31:0] _RANDOM_193;
    logic [31:0] _RANDOM_194;
    logic [31:0] _RANDOM_195;
    logic [31:0] _RANDOM_196;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        _RANDOM_53 = `RANDOM;
        _RANDOM_54 = `RANDOM;
        _RANDOM_55 = `RANDOM;
        _RANDOM_56 = `RANDOM;
        _RANDOM_57 = `RANDOM;
        _RANDOM_58 = `RANDOM;
        _RANDOM_59 = `RANDOM;
        _RANDOM_60 = `RANDOM;
        _RANDOM_61 = `RANDOM;
        _RANDOM_62 = `RANDOM;
        _RANDOM_63 = `RANDOM;
        _RANDOM_64 = `RANDOM;
        _RANDOM_65 = `RANDOM;
        _RANDOM_66 = `RANDOM;
        _RANDOM_67 = `RANDOM;
        _RANDOM_68 = `RANDOM;
        _RANDOM_69 = `RANDOM;
        _RANDOM_70 = `RANDOM;
        _RANDOM_71 = `RANDOM;
        _RANDOM_72 = `RANDOM;
        _RANDOM_73 = `RANDOM;
        _RANDOM_74 = `RANDOM;
        _RANDOM_75 = `RANDOM;
        _RANDOM_76 = `RANDOM;
        _RANDOM_77 = `RANDOM;
        _RANDOM_78 = `RANDOM;
        _RANDOM_79 = `RANDOM;
        _RANDOM_80 = `RANDOM;
        _RANDOM_81 = `RANDOM;
        _RANDOM_82 = `RANDOM;
        _RANDOM_83 = `RANDOM;
        _RANDOM_84 = `RANDOM;
        _RANDOM_85 = `RANDOM;
        _RANDOM_86 = `RANDOM;
        _RANDOM_87 = `RANDOM;
        _RANDOM_88 = `RANDOM;
        _RANDOM_89 = `RANDOM;
        _RANDOM_90 = `RANDOM;
        _RANDOM_91 = `RANDOM;
        _RANDOM_92 = `RANDOM;
        _RANDOM_93 = `RANDOM;
        _RANDOM_94 = `RANDOM;
        _RANDOM_95 = `RANDOM;
        _RANDOM_96 = `RANDOM;
        _RANDOM_97 = `RANDOM;
        _RANDOM_98 = `RANDOM;
        _RANDOM_99 = `RANDOM;
        _RANDOM_100 = `RANDOM;
        _RANDOM_101 = `RANDOM;
        _RANDOM_102 = `RANDOM;
        _RANDOM_103 = `RANDOM;
        _RANDOM_104 = `RANDOM;
        _RANDOM_105 = `RANDOM;
        _RANDOM_106 = `RANDOM;
        _RANDOM_107 = `RANDOM;
        _RANDOM_108 = `RANDOM;
        _RANDOM_109 = `RANDOM;
        _RANDOM_110 = `RANDOM;
        _RANDOM_111 = `RANDOM;
        _RANDOM_112 = `RANDOM;
        _RANDOM_113 = `RANDOM;
        _RANDOM_114 = `RANDOM;
        _RANDOM_115 = `RANDOM;
        _RANDOM_116 = `RANDOM;
        _RANDOM_117 = `RANDOM;
        _RANDOM_118 = `RANDOM;
        _RANDOM_119 = `RANDOM;
        _RANDOM_120 = `RANDOM;
        _RANDOM_121 = `RANDOM;
        _RANDOM_122 = `RANDOM;
        _RANDOM_123 = `RANDOM;
        _RANDOM_124 = `RANDOM;
        _RANDOM_125 = `RANDOM;
        _RANDOM_126 = `RANDOM;
        _RANDOM_127 = `RANDOM;
        _RANDOM_128 = `RANDOM;
        _RANDOM_129 = `RANDOM;
        _RANDOM_130 = `RANDOM;
        _RANDOM_131 = `RANDOM;
        _RANDOM_132 = `RANDOM;
        _RANDOM_133 = `RANDOM;
        _RANDOM_134 = `RANDOM;
        _RANDOM_135 = `RANDOM;
        _RANDOM_136 = `RANDOM;
        _RANDOM_137 = `RANDOM;
        _RANDOM_138 = `RANDOM;
        _RANDOM_139 = `RANDOM;
        _RANDOM_140 = `RANDOM;
        _RANDOM_141 = `RANDOM;
        _RANDOM_142 = `RANDOM;
        _RANDOM_143 = `RANDOM;
        _RANDOM_144 = `RANDOM;
        _RANDOM_145 = `RANDOM;
        _RANDOM_146 = `RANDOM;
        _RANDOM_147 = `RANDOM;
        _RANDOM_148 = `RANDOM;
        _RANDOM_149 = `RANDOM;
        _RANDOM_150 = `RANDOM;
        _RANDOM_151 = `RANDOM;
        _RANDOM_152 = `RANDOM;
        _RANDOM_153 = `RANDOM;
        _RANDOM_154 = `RANDOM;
        _RANDOM_155 = `RANDOM;
        _RANDOM_156 = `RANDOM;
        _RANDOM_157 = `RANDOM;
        _RANDOM_158 = `RANDOM;
        _RANDOM_159 = `RANDOM;
        _RANDOM_160 = `RANDOM;
        _RANDOM_161 = `RANDOM;
        _RANDOM_162 = `RANDOM;
        _RANDOM_163 = `RANDOM;
        _RANDOM_164 = `RANDOM;
        _RANDOM_165 = `RANDOM;
        _RANDOM_166 = `RANDOM;
        _RANDOM_167 = `RANDOM;
        _RANDOM_168 = `RANDOM;
        _RANDOM_169 = `RANDOM;
        _RANDOM_170 = `RANDOM;
        _RANDOM_171 = `RANDOM;
        _RANDOM_172 = `RANDOM;
        _RANDOM_173 = `RANDOM;
        _RANDOM_174 = `RANDOM;
        _RANDOM_175 = `RANDOM;
        _RANDOM_176 = `RANDOM;
        _RANDOM_177 = `RANDOM;
        _RANDOM_178 = `RANDOM;
        _RANDOM_179 = `RANDOM;
        _RANDOM_180 = `RANDOM;
        _RANDOM_181 = `RANDOM;
        _RANDOM_182 = `RANDOM;
        _RANDOM_183 = `RANDOM;
        _RANDOM_184 = `RANDOM;
        _RANDOM_185 = `RANDOM;
        _RANDOM_186 = `RANDOM;
        _RANDOM_187 = `RANDOM;
        _RANDOM_188 = `RANDOM;
        _RANDOM_189 = `RANDOM;
        _RANDOM_190 = `RANDOM;
        _RANDOM_191 = `RANDOM;
        _RANDOM_192 = `RANDOM;
        _RANDOM_193 = `RANDOM;
        _RANDOM_194 = `RANDOM;
        _RANDOM_195 = `RANDOM;
        _RANDOM_196 = `RANDOM;
        in_valid = _RANDOM_0[0];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_0 = _RANDOM_0[8:1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_1 = _RANDOM_0[16:9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_2 = _RANDOM_0[24:17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_3 = {_RANDOM_0[31:25], _RANDOM_1[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_4 = _RANDOM_1[8:1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_5 = _RANDOM_1[16:9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_6 = _RANDOM_1[24:17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_7 = {_RANDOM_1[31:25], _RANDOM_2[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_8 = _RANDOM_2[8:1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_9 = _RANDOM_2[16:9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_10 = _RANDOM_2[24:17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_11 = {_RANDOM_2[31:25], _RANDOM_3[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_12 = _RANDOM_3[8:1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_13 = _RANDOM_3[16:9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_14 = _RANDOM_3[24:17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_in_15 = {_RANDOM_3[31:25], _RANDOM_4[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_scale_bits = {_RANDOM_4[31:1], _RANDOM_5[0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_repeats = _RANDOM_5[16:1];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_last = _RANDOM_5[25];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_addr = {_RANDOM_21[31:26], _RANDOM_22[7:0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_0 = _RANDOM_22[8];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_1 = _RANDOM_22[9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_2 = _RANDOM_22[10];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_3 = _RANDOM_22[11];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_4 = _RANDOM_22[12];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_5 = _RANDOM_22[13];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_6 = _RANDOM_22[14];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_7 = _RANDOM_22[15];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_8 = _RANDOM_22[16];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_9 = _RANDOM_22[17];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_10 = _RANDOM_22[18];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_11 = _RANDOM_22[19];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_12 = _RANDOM_22[20];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_13 = _RANDOM_22[21];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_14 = _RANDOM_22[22];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_mask_15 = _RANDOM_22[23];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_is_acc = _RANDOM_24[8];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_accumulate = _RANDOM_24[9];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_pixel_repeats = {_RANDOM_25[31:27], _RANDOM_26[10:0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_len = _RANDOM_26[26:11];	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_bytes_read = {_RANDOM_26[31:28], _RANDOM_27[3:0]};	// @[VectorScalarMultiplier.scala:65:15]
        in_bits_tag_cmd_id = _RANDOM_27[11:4];	// @[VectorScalarMultiplier.scala:65:15]
        regs_0_valid = _RANDOM_27[12];	// @[VectorScalarMultiplier.scala:65:15, :101:19]
        regs_0_bits_in_0 = _RANDOM_27[20:13];	// @[VectorScalarMultiplier.scala:65:15, :101:19]
        regs_0_bits_in_1 = _RANDOM_27[28:21];	// @[VectorScalarMultiplier.scala:65:15, :101:19]
        regs_0_bits_in_2 = {_RANDOM_27[31:29], _RANDOM_28[4:0]};	// @[VectorScalarMultiplier.scala:65:15, :101:19]
        regs_0_bits_in_3 = _RANDOM_28[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_4 = _RANDOM_28[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_5 = _RANDOM_28[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_6 = {_RANDOM_28[31:29], _RANDOM_29[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_7 = _RANDOM_29[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_8 = _RANDOM_29[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_9 = _RANDOM_29[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_10 = {_RANDOM_29[31:29], _RANDOM_30[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_11 = _RANDOM_30[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_12 = _RANDOM_30[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_13 = _RANDOM_30[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_14 = {_RANDOM_30[31:29], _RANDOM_31[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_in_15 = _RANDOM_31[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_0_bits_scale_bits = {_RANDOM_31[31:13], _RANDOM_32[12:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_valid = _RANDOM_54[24];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_0 = {_RANDOM_54[31:25], _RANDOM_55[0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_1 = _RANDOM_55[8:1];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_2 = _RANDOM_55[16:9];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_3 = _RANDOM_55[24:17];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_4 = {_RANDOM_55[31:25], _RANDOM_56[0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_5 = _RANDOM_56[8:1];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_6 = _RANDOM_56[16:9];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_7 = _RANDOM_56[24:17];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_8 = {_RANDOM_56[31:25], _RANDOM_57[0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_9 = _RANDOM_57[8:1];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_10 = _RANDOM_57[16:9];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_11 = _RANDOM_57[24:17];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_12 = {_RANDOM_57[31:25], _RANDOM_58[0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_13 = _RANDOM_58[8:1];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_14 = _RANDOM_58[16:9];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_in_15 = _RANDOM_58[24:17];	// @[VectorScalarMultiplier.scala:101:19]
        regs_1_bits_scale_bits = {_RANDOM_58[31:25], _RANDOM_59[24:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_valid = _RANDOM_82[4];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_0 = _RANDOM_82[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_1 = _RANDOM_82[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_2 = _RANDOM_82[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_3 = {_RANDOM_82[31:29], _RANDOM_83[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_4 = _RANDOM_83[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_5 = _RANDOM_83[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_6 = _RANDOM_83[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_7 = {_RANDOM_83[31:29], _RANDOM_84[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_8 = _RANDOM_84[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_9 = _RANDOM_84[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_10 = _RANDOM_84[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_11 = {_RANDOM_84[31:29], _RANDOM_85[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_12 = _RANDOM_85[12:5];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_13 = _RANDOM_85[20:13];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_14 = _RANDOM_85[28:21];	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_in_15 = {_RANDOM_85[31:29], _RANDOM_86[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        regs_2_bits_scale_bits = {_RANDOM_86[31:5], _RANDOM_87[4:0]};	// @[VectorScalarMultiplier.scala:101:19]
        out_regs_0_out_0 = _RANDOM_109[23:16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_1 = _RANDOM_109[31:24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_2 = _RANDOM_110[7:0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_3 = _RANDOM_110[15:8];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_4 = _RANDOM_110[23:16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_5 = _RANDOM_110[31:24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_6 = _RANDOM_111[7:0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_7 = _RANDOM_111[15:8];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_8 = _RANDOM_111[23:16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_9 = _RANDOM_111[31:24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_10 = _RANDOM_112[7:0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_11 = _RANDOM_112[15:8];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_12 = _RANDOM_112[23:16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_13 = _RANDOM_112[31:24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_14 = _RANDOM_113[7:0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_out_15 = _RANDOM_113[15:8];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_row = _RANDOM_113[31:16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_last = _RANDOM_114[0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_addr = _RANDOM_130[14:1];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_0 = _RANDOM_130[15];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_1 = _RANDOM_130[16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_2 = _RANDOM_130[17];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_3 = _RANDOM_130[18];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_4 = _RANDOM_130[19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_5 = _RANDOM_130[20];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_6 = _RANDOM_130[21];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_7 = _RANDOM_130[22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_8 = _RANDOM_130[23];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_9 = _RANDOM_130[24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_10 = _RANDOM_130[25];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_11 = _RANDOM_130[26];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_12 = _RANDOM_130[27];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_13 = _RANDOM_130[28];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_14 = _RANDOM_130[29];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_mask_15 = _RANDOM_130[30];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_is_acc = _RANDOM_132[15];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_accumulate = _RANDOM_132[16];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_pixel_repeats = _RANDOM_134[17:2];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_len = {_RANDOM_134[31:18], _RANDOM_135[1:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_bytes_read = _RANDOM_135[10:3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_0_tag_cmd_id = _RANDOM_135[18:11];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_0 = _RANDOM_135[26:19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_1 = {_RANDOM_135[31:27], _RANDOM_136[2:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_2 = _RANDOM_136[10:3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_3 = _RANDOM_136[18:11];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_4 = _RANDOM_136[26:19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_5 = {_RANDOM_136[31:27], _RANDOM_137[2:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_6 = _RANDOM_137[10:3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_7 = _RANDOM_137[18:11];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_8 = _RANDOM_137[26:19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_9 = {_RANDOM_137[31:27], _RANDOM_138[2:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_10 = _RANDOM_138[10:3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_11 = _RANDOM_138[18:11];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_12 = _RANDOM_138[26:19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_13 = {_RANDOM_138[31:27], _RANDOM_139[2:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_14 = _RANDOM_139[10:3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_out_15 = _RANDOM_139[18:11];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_row = {_RANDOM_139[31:19], _RANDOM_140[2:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_last = _RANDOM_140[3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_addr = _RANDOM_156[17:4];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_0 = _RANDOM_156[18];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_1 = _RANDOM_156[19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_2 = _RANDOM_156[20];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_3 = _RANDOM_156[21];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_4 = _RANDOM_156[22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_5 = _RANDOM_156[23];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_6 = _RANDOM_156[24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_7 = _RANDOM_156[25];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_8 = _RANDOM_156[26];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_9 = _RANDOM_156[27];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_10 = _RANDOM_156[28];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_11 = _RANDOM_156[29];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_12 = _RANDOM_156[30];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_13 = _RANDOM_156[31];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_14 = _RANDOM_157[0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_mask_15 = _RANDOM_157[1];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_is_acc = _RANDOM_158[18];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_accumulate = _RANDOM_158[19];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_pixel_repeats = _RANDOM_160[20:5];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_len = {_RANDOM_160[31:21], _RANDOM_161[4:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_bytes_read = _RANDOM_161[13:6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_1_tag_cmd_id = _RANDOM_161[21:14];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_0 = _RANDOM_161[29:22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_1 = {_RANDOM_161[31:30], _RANDOM_162[5:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_2 = _RANDOM_162[13:6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_3 = _RANDOM_162[21:14];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_4 = _RANDOM_162[29:22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_5 = {_RANDOM_162[31:30], _RANDOM_163[5:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_6 = _RANDOM_163[13:6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_7 = _RANDOM_163[21:14];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_8 = _RANDOM_163[29:22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_9 = {_RANDOM_163[31:30], _RANDOM_164[5:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_10 = _RANDOM_164[13:6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_11 = _RANDOM_164[21:14];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_12 = _RANDOM_164[29:22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_13 = {_RANDOM_164[31:30], _RANDOM_165[5:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_14 = _RANDOM_165[13:6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_out_15 = _RANDOM_165[21:14];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_row = {_RANDOM_165[31:22], _RANDOM_166[5:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_last = _RANDOM_166[6];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_addr = _RANDOM_182[20:7];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_0 = _RANDOM_182[21];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_1 = _RANDOM_182[22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_2 = _RANDOM_182[23];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_3 = _RANDOM_182[24];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_4 = _RANDOM_182[25];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_5 = _RANDOM_182[26];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_6 = _RANDOM_182[27];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_7 = _RANDOM_182[28];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_8 = _RANDOM_182[29];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_9 = _RANDOM_182[30];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_10 = _RANDOM_182[31];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_11 = _RANDOM_183[0];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_12 = _RANDOM_183[1];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_13 = _RANDOM_183[2];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_14 = _RANDOM_183[3];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_mask_15 = _RANDOM_183[4];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_is_acc = _RANDOM_184[21];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_accumulate = _RANDOM_184[22];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_pixel_repeats = _RANDOM_186[23:8];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_len = {_RANDOM_186[31:24], _RANDOM_187[7:0]};	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_bytes_read = _RANDOM_187[16:9];	// @[VectorScalarMultiplier.scala:102:23]
        out_regs_2_tag_cmd_id = _RANDOM_187[24:17];	// @[VectorScalarMultiplier.scala:102:23]
        fired_masks_0_0 = _RANDOM_187[25];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_1 = _RANDOM_187[26];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_2 = _RANDOM_187[27];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_3 = _RANDOM_187[28];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_4 = _RANDOM_187[29];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_5 = _RANDOM_187[30];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_6 = _RANDOM_187[31];	// @[VectorScalarMultiplier.scala:102:23, :104:26]
        fired_masks_0_7 = _RANDOM_188[0];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_8 = _RANDOM_188[1];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_9 = _RANDOM_188[2];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_10 = _RANDOM_188[3];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_11 = _RANDOM_188[4];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_12 = _RANDOM_188[5];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_13 = _RANDOM_188[6];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_14 = _RANDOM_188[7];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_0_15 = _RANDOM_188[8];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_0 = _RANDOM_188[9];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_1 = _RANDOM_188[10];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_2 = _RANDOM_188[11];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_3 = _RANDOM_188[12];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_4 = _RANDOM_188[13];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_5 = _RANDOM_188[14];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_6 = _RANDOM_188[15];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_7 = _RANDOM_188[16];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_8 = _RANDOM_188[17];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_9 = _RANDOM_188[18];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_10 = _RANDOM_188[19];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_11 = _RANDOM_188[20];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_12 = _RANDOM_188[21];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_13 = _RANDOM_188[22];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_14 = _RANDOM_188[23];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_1_15 = _RANDOM_188[24];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_0 = _RANDOM_188[25];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_1 = _RANDOM_188[26];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_2 = _RANDOM_188[27];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_3 = _RANDOM_188[28];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_4 = _RANDOM_188[29];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_5 = _RANDOM_188[30];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_6 = _RANDOM_188[31];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_7 = _RANDOM_189[0];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_8 = _RANDOM_189[1];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_9 = _RANDOM_189[2];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_10 = _RANDOM_189[3];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_11 = _RANDOM_189[4];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_12 = _RANDOM_189[5];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_13 = _RANDOM_189[6];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_14 = _RANDOM_189[7];	// @[VectorScalarMultiplier.scala:104:26]
        fired_masks_2_15 = _RANDOM_189[8];	// @[VectorScalarMultiplier.scala:104:26]
        completed_masks_0_0 = _RANDOM_189[9];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_1 = _RANDOM_189[10];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_2 = _RANDOM_189[11];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_3 = _RANDOM_189[12];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_4 = _RANDOM_189[13];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_5 = _RANDOM_189[14];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_6 = _RANDOM_189[15];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_7 = _RANDOM_189[16];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_8 = _RANDOM_189[17];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_9 = _RANDOM_189[18];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_10 = _RANDOM_189[19];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_11 = _RANDOM_189[20];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_12 = _RANDOM_189[21];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_13 = _RANDOM_189[22];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_14 = _RANDOM_189[23];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_0_15 = _RANDOM_189[24];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_0 = _RANDOM_189[25];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_1 = _RANDOM_189[26];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_2 = _RANDOM_189[27];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_3 = _RANDOM_189[28];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_4 = _RANDOM_189[29];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_5 = _RANDOM_189[30];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_6 = _RANDOM_189[31];	// @[VectorScalarMultiplier.scala:104:26, :105:30]
        completed_masks_1_7 = _RANDOM_190[0];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_8 = _RANDOM_190[1];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_9 = _RANDOM_190[2];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_10 = _RANDOM_190[3];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_11 = _RANDOM_190[4];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_12 = _RANDOM_190[5];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_13 = _RANDOM_190[6];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_14 = _RANDOM_190[7];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_1_15 = _RANDOM_190[8];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_0 = _RANDOM_190[9];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_1 = _RANDOM_190[10];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_2 = _RANDOM_190[11];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_3 = _RANDOM_190[12];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_4 = _RANDOM_190[13];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_5 = _RANDOM_190[14];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_6 = _RANDOM_190[15];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_7 = _RANDOM_190[16];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_8 = _RANDOM_190[17];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_9 = _RANDOM_190[18];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_10 = _RANDOM_190[19];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_11 = _RANDOM_190[20];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_12 = _RANDOM_190[21];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_13 = _RANDOM_190[22];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_14 = _RANDOM_190[23];	// @[VectorScalarMultiplier.scala:105:30]
        completed_masks_2_15 = _RANDOM_190[24];	// @[VectorScalarMultiplier.scala:105:30]
        head_oh = _RANDOM_190[27:25];	// @[VectorScalarMultiplier.scala:105:30, :106:26]
        tail_oh = _RANDOM_190[30:28];	// @[VectorScalarMultiplier.scala:105:30, :107:26]
        arbOut_valid = _RANDOM_190[31];	// @[VectorScalarMultiplier.scala:105:30, :163:23]
        arbOut_bits_data = _RANDOM_191[7:0];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_bits_scale_bits = {_RANDOM_191[31:8], _RANDOM_192[7:0]};	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_bits_id = _RANDOM_192[9:8];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_bits_index = _RANDOM_192[13:10];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_1_valid = _RANDOM_192[14];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_1_bits_data = _RANDOM_192[22:15];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_1_bits_scale_bits = {_RANDOM_192[31:23], _RANDOM_193[22:0]};	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_1_bits_id = _RANDOM_193[24:23];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_1_bits_index = _RANDOM_193[28:25];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_2_valid = _RANDOM_193[29];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_2_bits_data = {_RANDOM_193[31:30], _RANDOM_194[5:0]};	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_2_bits_scale_bits = {_RANDOM_194[31:6], _RANDOM_195[5:0]};	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_2_bits_id = _RANDOM_195[7:6];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_2_bits_index = _RANDOM_195[11:8];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_3_valid = _RANDOM_195[12];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_3_bits_data = _RANDOM_195[20:13];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_3_bits_scale_bits = {_RANDOM_195[31:21], _RANDOM_196[20:0]};	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_3_bits_id = _RANDOM_196[22:21];	// @[VectorScalarMultiplier.scala:163:23]
        arbOut_3_bits_index = _RANDOM_196[26:23];	// @[VectorScalarMultiplier.scala:163:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  RRArbiter arb (	// @[VectorScalarMultiplier.scala:160:23]
    .clock                    (clock),
    .io_in_0_valid            (inputs_0_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_0_bits_data        (regs_0_bits_in_0),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_index       (4'h0),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_1_valid            (inputs_4_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_1_bits_data        (regs_0_bits_in_4),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_index       (4'h4),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_2_valid            (inputs_8_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_2_bits_data        (regs_0_bits_in_8),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_index       (4'h8),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_3_valid            (inputs_12_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_3_bits_data        (regs_0_bits_in_12),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_index       (4'hC),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_4_valid            (inputs_16_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_4_bits_data        (regs_1_bits_in_0),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_index       (4'h0),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_5_valid            (inputs_20_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_5_bits_data        (regs_1_bits_in_4),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_index       (4'h4),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_6_valid            (inputs_24_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_6_bits_data        (regs_1_bits_in_8),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_index       (4'h8),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_7_valid            (inputs_28_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_7_bits_data        (regs_1_bits_in_12),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_index       (4'hC),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_8_valid            (inputs_32_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_8_bits_data        (regs_2_bits_in_0),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_index       (4'h0),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_9_valid            (inputs_36_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_9_bits_data        (regs_2_bits_in_4),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_index       (4'h4),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_10_valid           (inputs_40_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_10_bits_data       (regs_2_bits_in_8),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_index      (4'h8),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_11_valid           (inputs_44_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_11_bits_data       (regs_2_bits_in_12),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_index      (4'hC),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_0_ready            (_arb_io_in_0_ready),
    .io_in_1_ready            (_arb_io_in_1_ready),
    .io_in_2_ready            (_arb_io_in_2_ready),
    .io_in_3_ready            (_arb_io_in_3_ready),
    .io_in_4_ready            (_arb_io_in_4_ready),
    .io_in_5_ready            (_arb_io_in_5_ready),
    .io_in_6_ready            (_arb_io_in_6_ready),
    .io_in_7_ready            (_arb_io_in_7_ready),
    .io_in_8_ready            (_arb_io_in_8_ready),
    .io_in_9_ready            (_arb_io_in_9_ready),
    .io_in_10_ready           (_arb_io_in_10_ready),
    .io_in_11_ready           (_arb_io_in_11_ready),
    .io_out_valid             (_arb_io_out_valid),
    .io_out_bits_data         (_arb_io_out_bits_data),
    .io_out_bits_scale_bits   (_arb_io_out_bits_scale_bits),
    .io_out_bits_id           (_arb_io_out_bits_id),
    .io_out_bits_index        (_arb_io_out_bits_index)
  );
  ScalePipe pipe (	// @[VectorScalarMultiplier.scala:170:24]
    .clock                 (clock),
    .reset                 (reset),
    .io_in_valid           (arbOut_valid),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_data       (arbOut_bits_data),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_scale_bits (arbOut_bits_scale_bits),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_id         (arbOut_bits_id),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_index      (arbOut_bits_index),	// @[VectorScalarMultiplier.scala:163:23]
    .io_out_valid          (_pipe_io_out_valid),
    .io_out_bits_data      (_pipe_io_out_bits_data),
    .io_out_bits_id        (_pipe_io_out_bits_id),
    .io_out_bits_index     (_pipe_io_out_bits_index)
  );
  RRArbiter arb_1 (	// @[VectorScalarMultiplier.scala:160:23]
    .clock                    (clock),
    .io_in_0_valid            (inputs_1_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_0_bits_data        (regs_0_bits_in_1),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_index       (4'h1),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_1_valid            (inputs_5_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_1_bits_data        (regs_0_bits_in_5),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_index       (4'h5),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_2_valid            (inputs_9_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_2_bits_data        (regs_0_bits_in_9),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_index       (4'h9),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_3_valid            (inputs_13_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_3_bits_data        (regs_0_bits_in_13),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_index       (4'hD),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_4_valid            (inputs_17_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_4_bits_data        (regs_1_bits_in_1),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_index       (4'h1),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_5_valid            (inputs_21_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_5_bits_data        (regs_1_bits_in_5),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_index       (4'h5),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_6_valid            (inputs_25_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_6_bits_data        (regs_1_bits_in_9),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_index       (4'h9),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_7_valid            (inputs_29_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_7_bits_data        (regs_1_bits_in_13),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_index       (4'hD),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_8_valid            (inputs_33_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_8_bits_data        (regs_2_bits_in_1),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_index       (4'h1),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_9_valid            (inputs_37_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_9_bits_data        (regs_2_bits_in_5),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_index       (4'h5),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_10_valid           (inputs_41_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_10_bits_data       (regs_2_bits_in_9),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_index      (4'h9),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_11_valid           (inputs_45_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_11_bits_data       (regs_2_bits_in_13),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_index      (4'hD),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_0_ready            (_arb_1_io_in_0_ready),
    .io_in_1_ready            (_arb_1_io_in_1_ready),
    .io_in_2_ready            (_arb_1_io_in_2_ready),
    .io_in_3_ready            (_arb_1_io_in_3_ready),
    .io_in_4_ready            (_arb_1_io_in_4_ready),
    .io_in_5_ready            (_arb_1_io_in_5_ready),
    .io_in_6_ready            (_arb_1_io_in_6_ready),
    .io_in_7_ready            (_arb_1_io_in_7_ready),
    .io_in_8_ready            (_arb_1_io_in_8_ready),
    .io_in_9_ready            (_arb_1_io_in_9_ready),
    .io_in_10_ready           (_arb_1_io_in_10_ready),
    .io_in_11_ready           (_arb_1_io_in_11_ready),
    .io_out_valid             (_arb_1_io_out_valid),
    .io_out_bits_data         (_arb_1_io_out_bits_data),
    .io_out_bits_scale_bits   (_arb_1_io_out_bits_scale_bits),
    .io_out_bits_id           (_arb_1_io_out_bits_id),
    .io_out_bits_index        (_arb_1_io_out_bits_index)
  );
  ScalePipe pipe_1 (	// @[VectorScalarMultiplier.scala:170:24]
    .clock                 (clock),
    .reset                 (reset),
    .io_in_valid           (arbOut_1_valid),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_data       (arbOut_1_bits_data),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_scale_bits (arbOut_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_id         (arbOut_1_bits_id),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_index      (arbOut_1_bits_index),	// @[VectorScalarMultiplier.scala:163:23]
    .io_out_valid          (_pipe_1_io_out_valid),
    .io_out_bits_data      (_pipe_1_io_out_bits_data),
    .io_out_bits_id        (_pipe_1_io_out_bits_id),
    .io_out_bits_index     (_pipe_1_io_out_bits_index)
  );
  RRArbiter arb_2 (	// @[VectorScalarMultiplier.scala:160:23]
    .clock                    (clock),
    .io_in_0_valid            (inputs_2_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_0_bits_data        (regs_0_bits_in_2),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_index       (4'h2),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_1_valid            (inputs_6_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_1_bits_data        (regs_0_bits_in_6),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_index       (4'h6),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_2_valid            (inputs_10_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_2_bits_data        (regs_0_bits_in_10),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_index       (4'hA),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_3_valid            (inputs_14_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_3_bits_data        (regs_0_bits_in_14),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_index       (4'hE),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_4_valid            (inputs_18_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_4_bits_data        (regs_1_bits_in_2),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_index       (4'h2),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_5_valid            (inputs_22_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_5_bits_data        (regs_1_bits_in_6),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_index       (4'h6),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_6_valid            (inputs_26_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_6_bits_data        (regs_1_bits_in_10),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_index       (4'hA),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_7_valid            (inputs_30_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_7_bits_data        (regs_1_bits_in_14),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_index       (4'hE),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_8_valid            (inputs_34_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_8_bits_data        (regs_2_bits_in_2),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_index       (4'h2),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_9_valid            (inputs_38_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_9_bits_data        (regs_2_bits_in_6),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_index       (4'h6),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_10_valid           (inputs_42_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_10_bits_data       (regs_2_bits_in_10),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_index      (4'hA),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_11_valid           (inputs_46_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_11_bits_data       (regs_2_bits_in_14),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_index      (4'hE),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_0_ready            (_arb_2_io_in_0_ready),
    .io_in_1_ready            (_arb_2_io_in_1_ready),
    .io_in_2_ready            (_arb_2_io_in_2_ready),
    .io_in_3_ready            (_arb_2_io_in_3_ready),
    .io_in_4_ready            (_arb_2_io_in_4_ready),
    .io_in_5_ready            (_arb_2_io_in_5_ready),
    .io_in_6_ready            (_arb_2_io_in_6_ready),
    .io_in_7_ready            (_arb_2_io_in_7_ready),
    .io_in_8_ready            (_arb_2_io_in_8_ready),
    .io_in_9_ready            (_arb_2_io_in_9_ready),
    .io_in_10_ready           (_arb_2_io_in_10_ready),
    .io_in_11_ready           (_arb_2_io_in_11_ready),
    .io_out_valid             (_arb_2_io_out_valid),
    .io_out_bits_data         (_arb_2_io_out_bits_data),
    .io_out_bits_scale_bits   (_arb_2_io_out_bits_scale_bits),
    .io_out_bits_id           (_arb_2_io_out_bits_id),
    .io_out_bits_index        (_arb_2_io_out_bits_index)
  );
  ScalePipe pipe_2 (	// @[VectorScalarMultiplier.scala:170:24]
    .clock                 (clock),
    .reset                 (reset),
    .io_in_valid           (arbOut_2_valid),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_data       (arbOut_2_bits_data),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_scale_bits (arbOut_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_id         (arbOut_2_bits_id),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_index      (arbOut_2_bits_index),	// @[VectorScalarMultiplier.scala:163:23]
    .io_out_valid          (_pipe_2_io_out_valid),
    .io_out_bits_data      (_pipe_2_io_out_bits_data),
    .io_out_bits_id        (_pipe_2_io_out_bits_id),
    .io_out_bits_index     (_pipe_2_io_out_bits_index)
  );
  RRArbiter arb_3 (	// @[VectorScalarMultiplier.scala:160:23]
    .clock                    (clock),
    .io_in_0_valid            (inputs_3_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_0_bits_data        (regs_0_bits_in_3),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_0_bits_index       (4'h3),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_1_valid            (inputs_7_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_1_bits_data        (regs_0_bits_in_7),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_1_bits_index       (4'h7),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_2_valid            (inputs_11_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_2_bits_data        (regs_0_bits_in_11),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_2_bits_index       (4'hB),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_3_valid            (inputs_15_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_3_bits_data        (regs_0_bits_in_15),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_scale_bits  (regs_0_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_3_bits_index       (4'hF),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_4_valid            (inputs_19_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_4_bits_data        (regs_1_bits_in_3),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_4_bits_index       (4'h3),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_5_valid            (inputs_23_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_5_bits_data        (regs_1_bits_in_7),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_5_bits_index       (4'h7),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_6_valid            (inputs_27_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_6_bits_data        (regs_1_bits_in_11),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_6_bits_index       (4'hB),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_7_valid            (inputs_31_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_7_bits_data        (regs_1_bits_in_15),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_scale_bits  (regs_1_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_7_bits_index       (4'hF),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_8_valid            (inputs_35_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_8_bits_data        (regs_2_bits_in_3),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_8_bits_index       (4'h3),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_9_valid            (inputs_39_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_9_bits_data        (regs_2_bits_in_7),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_scale_bits  (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_9_bits_index       (4'h7),	// @[VectorScalarMultiplier.scala:161:17]
    .io_in_10_valid           (inputs_43_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_10_bits_data       (regs_2_bits_in_11),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_10_bits_index      (4'hB),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_11_valid           (inputs_47_valid),	// @[VectorScalarMultiplier.scala:148:44]
    .io_in_11_bits_data       (regs_2_bits_in_15),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_scale_bits (regs_2_bits_scale_bits),	// @[VectorScalarMultiplier.scala:101:19]
    .io_in_11_bits_index      (4'hF),	// @[VectorScalarMultiplier.scala:152:26]
    .io_in_0_ready            (_arb_3_io_in_0_ready),
    .io_in_1_ready            (_arb_3_io_in_1_ready),
    .io_in_2_ready            (_arb_3_io_in_2_ready),
    .io_in_3_ready            (_arb_3_io_in_3_ready),
    .io_in_4_ready            (_arb_3_io_in_4_ready),
    .io_in_5_ready            (_arb_3_io_in_5_ready),
    .io_in_6_ready            (_arb_3_io_in_6_ready),
    .io_in_7_ready            (_arb_3_io_in_7_ready),
    .io_in_8_ready            (_arb_3_io_in_8_ready),
    .io_in_9_ready            (_arb_3_io_in_9_ready),
    .io_in_10_ready           (_arb_3_io_in_10_ready),
    .io_in_11_ready           (_arb_3_io_in_11_ready),
    .io_out_valid             (_arb_3_io_out_valid),
    .io_out_bits_data         (_arb_3_io_out_bits_data),
    .io_out_bits_scale_bits   (_arb_3_io_out_bits_scale_bits),
    .io_out_bits_id           (_arb_3_io_out_bits_id),
    .io_out_bits_index        (_arb_3_io_out_bits_index)
  );
  ScalePipe pipe_3 (	// @[VectorScalarMultiplier.scala:170:24]
    .clock                 (clock),
    .reset                 (reset),
    .io_in_valid           (arbOut_3_valid),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_data       (arbOut_3_bits_data),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_scale_bits (arbOut_3_bits_scale_bits),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_id         (arbOut_3_bits_id),	// @[VectorScalarMultiplier.scala:163:23]
    .io_in_bits_index      (arbOut_3_bits_index),	// @[VectorScalarMultiplier.scala:163:23]
    .io_out_valid          (_pipe_3_io_out_valid),
    .io_out_bits_data      (_pipe_3_io_out_bits_data),
    .io_out_bits_id        (_pipe_3_io_out_bits_id),
    .io_out_bits_index     (_pipe_3_io_out_bits_index)
  );
  assign io_req_ready = _io_req_ready_output;	// @[VectorScalarMultiplier.scala:67:29]
  assign io_resp_valid = _io_resp_valid_WIRE;	// @[Mux.scala:27:73]
  assign io_resp_bits_out_0 = (head_oh[0] ? out_regs_0_out_0 : 8'h0) | (head_oh[1] ? out_regs_1_out_0 : 8'h0) | (head_oh[2] ? out_regs_2_out_0 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_1 = (head_oh[0] ? out_regs_0_out_1 : 8'h0) | (head_oh[1] ? out_regs_1_out_1 : 8'h0) | (head_oh[2] ? out_regs_2_out_1 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_2 = (head_oh[0] ? out_regs_0_out_2 : 8'h0) | (head_oh[1] ? out_regs_1_out_2 : 8'h0) | (head_oh[2] ? out_regs_2_out_2 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_3 = (head_oh[0] ? out_regs_0_out_3 : 8'h0) | (head_oh[1] ? out_regs_1_out_3 : 8'h0) | (head_oh[2] ? out_regs_2_out_3 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_4 = (head_oh[0] ? out_regs_0_out_4 : 8'h0) | (head_oh[1] ? out_regs_1_out_4 : 8'h0) | (head_oh[2] ? out_regs_2_out_4 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_5 = (head_oh[0] ? out_regs_0_out_5 : 8'h0) | (head_oh[1] ? out_regs_1_out_5 : 8'h0) | (head_oh[2] ? out_regs_2_out_5 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_6 = (head_oh[0] ? out_regs_0_out_6 : 8'h0) | (head_oh[1] ? out_regs_1_out_6 : 8'h0) | (head_oh[2] ? out_regs_2_out_6 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_7 = (head_oh[0] ? out_regs_0_out_7 : 8'h0) | (head_oh[1] ? out_regs_1_out_7 : 8'h0) | (head_oh[2] ? out_regs_2_out_7 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_8 = (head_oh[0] ? out_regs_0_out_8 : 8'h0) | (head_oh[1] ? out_regs_1_out_8 : 8'h0) | (head_oh[2] ? out_regs_2_out_8 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_9 = (head_oh[0] ? out_regs_0_out_9 : 8'h0) | (head_oh[1] ? out_regs_1_out_9 : 8'h0) | (head_oh[2] ? out_regs_2_out_9 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_10 = (head_oh[0] ? out_regs_0_out_10 : 8'h0) | (head_oh[1] ? out_regs_1_out_10 : 8'h0) | (head_oh[2] ? out_regs_2_out_10 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_11 = (head_oh[0] ? out_regs_0_out_11 : 8'h0) | (head_oh[1] ? out_regs_1_out_11 : 8'h0) | (head_oh[2] ? out_regs_2_out_11 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_12 = (head_oh[0] ? out_regs_0_out_12 : 8'h0) | (head_oh[1] ? out_regs_1_out_12 : 8'h0) | (head_oh[2] ? out_regs_2_out_12 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_13 = (head_oh[0] ? out_regs_0_out_13 : 8'h0) | (head_oh[1] ? out_regs_1_out_13 : 8'h0) | (head_oh[2] ? out_regs_2_out_13 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_14 = (head_oh[0] ? out_regs_0_out_14 : 8'h0) | (head_oh[1] ? out_regs_1_out_14 : 8'h0) | (head_oh[2] ? out_regs_2_out_14 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_out_15 = (head_oh[0] ? out_regs_0_out_15 : 8'h0) | (head_oh[1] ? out_regs_1_out_15 : 8'h0) | (head_oh[2] ? out_regs_2_out_15 : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_row = (head_oh[0] ? out_regs_0_row : 16'h0) | (head_oh[1] ? out_regs_1_row : 16'h0) | (head_oh[2] ? out_regs_2_row : 16'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_last = head_oh[0] & out_regs_0_last | head_oh[1] & out_regs_1_last | head_oh[2] & out_regs_2_last;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_addr = (head_oh[0] ? out_regs_0_tag_addr : 14'h0) | (head_oh[1] ? out_regs_1_tag_addr : 14'h0) | (head_oh[2] ? out_regs_2_tag_addr : 14'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_0 = head_oh[0] & out_regs_0_tag_mask_0 | head_oh[1] & out_regs_1_tag_mask_0 | head_oh[2] & out_regs_2_tag_mask_0;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_1 = head_oh[0] & out_regs_0_tag_mask_1 | head_oh[1] & out_regs_1_tag_mask_1 | head_oh[2] & out_regs_2_tag_mask_1;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_2 = head_oh[0] & out_regs_0_tag_mask_2 | head_oh[1] & out_regs_1_tag_mask_2 | head_oh[2] & out_regs_2_tag_mask_2;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_3 = head_oh[0] & out_regs_0_tag_mask_3 | head_oh[1] & out_regs_1_tag_mask_3 | head_oh[2] & out_regs_2_tag_mask_3;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_4 = head_oh[0] & out_regs_0_tag_mask_4 | head_oh[1] & out_regs_1_tag_mask_4 | head_oh[2] & out_regs_2_tag_mask_4;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_5 = head_oh[0] & out_regs_0_tag_mask_5 | head_oh[1] & out_regs_1_tag_mask_5 | head_oh[2] & out_regs_2_tag_mask_5;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_6 = head_oh[0] & out_regs_0_tag_mask_6 | head_oh[1] & out_regs_1_tag_mask_6 | head_oh[2] & out_regs_2_tag_mask_6;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_7 = head_oh[0] & out_regs_0_tag_mask_7 | head_oh[1] & out_regs_1_tag_mask_7 | head_oh[2] & out_regs_2_tag_mask_7;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_8 = head_oh[0] & out_regs_0_tag_mask_8 | head_oh[1] & out_regs_1_tag_mask_8 | head_oh[2] & out_regs_2_tag_mask_8;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_9 = head_oh[0] & out_regs_0_tag_mask_9 | head_oh[1] & out_regs_1_tag_mask_9 | head_oh[2] & out_regs_2_tag_mask_9;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_10 = head_oh[0] & out_regs_0_tag_mask_10 | head_oh[1] & out_regs_1_tag_mask_10 | head_oh[2] & out_regs_2_tag_mask_10;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_11 = head_oh[0] & out_regs_0_tag_mask_11 | head_oh[1] & out_regs_1_tag_mask_11 | head_oh[2] & out_regs_2_tag_mask_11;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_12 = head_oh[0] & out_regs_0_tag_mask_12 | head_oh[1] & out_regs_1_tag_mask_12 | head_oh[2] & out_regs_2_tag_mask_12;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_13 = head_oh[0] & out_regs_0_tag_mask_13 | head_oh[1] & out_regs_1_tag_mask_13 | head_oh[2] & out_regs_2_tag_mask_13;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_14 = head_oh[0] & out_regs_0_tag_mask_14 | head_oh[1] & out_regs_1_tag_mask_14 | head_oh[2] & out_regs_2_tag_mask_14;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_mask_15 = head_oh[0] & out_regs_0_tag_mask_15 | head_oh[1] & out_regs_1_tag_mask_15 | head_oh[2] & out_regs_2_tag_mask_15;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_is_acc = head_oh[0] & out_regs_0_tag_is_acc | head_oh[1] & out_regs_1_tag_is_acc | head_oh[2] & out_regs_2_tag_is_acc;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_accumulate = head_oh[0] & out_regs_0_tag_accumulate | head_oh[1] & out_regs_1_tag_accumulate | head_oh[2] & out_regs_2_tag_accumulate;	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_pixel_repeats = (head_oh[0] ? out_regs_0_tag_pixel_repeats : 16'h0) | (head_oh[1] ? out_regs_1_tag_pixel_repeats : 16'h0) | (head_oh[2] ? out_regs_2_tag_pixel_repeats : 16'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_len = (head_oh[0] ? out_regs_0_tag_len : 16'h0) | (head_oh[1] ? out_regs_1_tag_len : 16'h0) | (head_oh[2] ? out_regs_2_tag_len : 16'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_bytes_read = (head_oh[0] ? out_regs_0_tag_bytes_read : 8'h0) | (head_oh[1] ? out_regs_1_tag_bytes_read : 8'h0) | (head_oh[2] ? out_regs_2_tag_bytes_read : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
  assign io_resp_bits_tag_cmd_id = (head_oh[0] ? out_regs_0_tag_cmd_id : 8'h0) | (head_oh[1] ? out_regs_1_tag_cmd_id : 8'h0) | (head_oh[2] ? out_regs_2_tag_cmd_id : 8'h0);	// @[Mux.scala:27:73, VectorScalarMultiplier.scala:102:23, :106:26, :109:36]
endmodule

